# Japanese translation of Composer document
# Composerのドキュメントの和訳
# Copyright (C) 2023 gemmaro
# This file is distributed under the same license as the Composer.
#
#
# --------------------------------------------------------------------------------
# POファイル編集時の注意事項
# --------------------------------------------------------------------------------
#
# mdBookだと、以下のような場合に強調のマークアップが効かないようです。
#
#   > **補足：**補足的な文章です。
#
# したがって以下のようにします。
#
#   > **補足：** 補足的な文章です。
#
msgid ""
msgstr ""
"Project-Id-Version: Composer\n"
"POT-Creation-Date: 2024-10-03 19:04+0900\n"
"PO-Revision-Date: 2024-10-03 19:25+0900\n"
"Last-Translator: gemmaro <gemmaro.dev@gmail.com>\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../README.md:7
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"    <a href=\"https://getcomposer.org\">\n"
"        <img src=\"https://getcomposer.org/img/logo-composer-transparent.png\" alt=\"Composer\">\n"
"    </a>\n"
"</p>\n"
"<h1 align=\"center\">Dependency Management for PHP</h1>\n"
msgstr ""
"<p align=\"center\">\n"
"    <a href=\"https://getcomposer.org\">\n"
"        <img src=\"https://getcomposer.org/img/logo-composer-transparent.png\" alt=\"Composer\">\n"
"    </a>\n"
"</p>\n"
"<h1 align=\"center\">PHPのための依存関係管理</h1>\n"

#. type: Plain text
#: ../README.md:9
msgid ""
"Composer helps you declare, manage, and install dependencies of PHP projects."
msgstr ""
"ComposerはPHPのプロジェクトの依存関係を宣言し、管理し、インストールする助けに"
"なります。"

#. type: Plain text
#: ../README.md:11
msgid ""
"See [https://getcomposer.org/](https://getcomposer.org/) for more "
"information and documentation."
msgstr ""
"詳細情報とドキュメントについては[https://getcomposer.org/](https://"
"getcomposer.org/)を参照してください。"

#. type: Plain text
#: ../README.md:13
msgid ""
"[![Continuous Integration](https://github.com/composer/composer/workflows/"
"Continuous%20Integration/badge.svg?branch=main)](https://github.com/composer/"
"composer/actions)"
msgstr ""
"[![Continuous Integration](https://github.com/composer/composer/workflows/"
"Continuous%20Integration/badge.svg?branch=main)](https://github.com/composer/"
"composer/actions)"

#. type: Title -
#: ../README.md:15
#, no-wrap
msgid "Installation / Usage"
msgstr "インストールと使い方"

#. type: Plain text
#: ../README.md:18
msgid ""
"Download and install Composer by following the [official instructions]"
"(https://getcomposer.org/download/)."
msgstr ""
"[公式の解説](https://getcomposer.org/download/)に従い、ダウンロード、インス"
"トールしてください。"

#. type: Plain text
#: ../README.md:20
msgid "For usage, see [the documentation](https://getcomposer.org/doc/)."
msgstr ""
"使用方法については[ドキュメント](https://getcomposer.org/doc/)を参照してくだ"
"さい。"

#. type: Title -
#: ../README.md:22
#, no-wrap
msgid "Packages"
msgstr "パッケージ"

#. type: Plain text
#: ../README.md:25
msgid "Find public packages on [Packagist.org](https://packagist.org)."
msgstr ""
"[Packagist.org](https://packagist.org)に公開されているパッケージがあります。"

# private: 私有
# https://mitome.in/ での訳しかたが気に入ったのでこれを使います。
#. type: Plain text
#: ../README.md:27
msgid ""
"For private package hosting take a look at [Private Packagist](https://"
"packagist.com)."
msgstr ""
"私有パッケージのホスティングについては[私有Packagist](https://packagist.com)"
"をご確認ください。"

#. type: Title #
#: ../README.md:29 ../doc/08-community.md:1
#, no-wrap
msgid "Community"
msgstr "コミュニティ"

#. type: Plain text
#: ../README.md:32
msgid ""
"Follow [@packagist](https://twitter.com/packagist) or [@seldaek](https://"
"twitter.com/seldaek) on Twitter for announcements, or check the "
"[#composerphp](https://twitter.com/search?"
"q=%23composerphp&src=typed_query&f=live) hashtag."
msgstr ""
"告知についてはTwitterで[@packagist](https://twitter.com/packagist)または"
"[@seldaek](https://twitter.com/seldaek)をフォローしたり、[#composerphp]"
"(https://twitter.com/search?q=%23composerphp&src=typed_query&f=live)ハッシュ"
"タグを確認したりしてください。"

#. type: Plain text
#: ../README.md:35
msgid ""
"For support, Stack Overflow offers a good collection of [Composer related "
"questions](https://stackoverflow.com/questions/tagged/composer-php), or you "
"can use the [GitHub discussions](https://github.com/composer/composer/"
"discussions)."
msgstr ""
"サポートについては、Stack Overflowで[Composerに関係する良い質問](https://"
"stackoverflow.com/questions/tagged/composer-php)がされてきました。\n"
"また、[GitHubディスカッション](https://github.com/composer/composer/"
"discussions)も使えます。"

#. type: Plain text
#: ../README.md:39
msgid ""
"Please note that this project is released with a [Contributor Code of "
"Conduct](https://www.contributor-covenant.org/version/1/4/code-of-"
"conduct/).  By participating in this project and its community you agree to "
"abide by those terms."
msgstr ""
"本プロジェクトは[貢献者の行動規範](https://www.contributor-covenant.org/"
"version/1/4/code-of-conduct/)の元でリリースされている点にご留意ください。\n"
"本プロジェクトとコミュニティへ参加すると、これらの条項を遵守することに同意し"
"たこととなります。"

#. type: Title -
#: ../README.md:41
#, no-wrap
msgid "Requirements"
msgstr "要件"

#. type: Title ####
#: ../README.md:43
#, no-wrap
msgid "Latest Composer"
msgstr "最新のComposer"

#. type: Plain text
#: ../README.md:46
msgid "PHP 7.2.5 or above for the latest version."
msgstr "最新版にはPHP 7.2.5以上が必要です。"

#. type: Title ####
#: ../README.md:47
#, no-wrap
msgid "Composer 2.2 LTS (Long Term Support)"
msgstr "Composer 2.2 LTS（長期期間対応）"

#. type: Plain text
#: ../README.md:52
msgid ""
"PHP versions 5.3.2 - 8.1 are still supported via the LTS releases of "
"Composer (2.2.x). If you run the installer or the `self-update` command the "
"appropriate Composer version for your PHP should be automatically selected."
msgstr ""
"PHPのバージョン5.3.2から8.1まではComposer (2.2.x)のLTS対応でまだ対応されてい"
"ます。\n"
"インストーラの`self-update`コマンドを走らせると、手元のPHPに見合う適切な"
"Composerのバージョンが自動的に選択されるでしょう。"

#. type: Title ####
#: ../README.md:53
#, no-wrap
msgid "Binary dependencies"
msgstr "バイナリの依存関係"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`7z` (or `7zz`)"
msgstr "`7z`（ないし`7zz`）"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`unzip` (if `7z` is missing)"
msgstr "`unzip`（`7z`が無い場合）"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`gzip`"
msgstr "`gzip`"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`tar`"
msgstr "`tar`"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`unrar`"
msgstr "`unrar`"

#. type: Bullet: '- '
#: ../README.md:66
msgid "`xz`"
msgstr "`xz`"

#. type: Bullet: '- '
#: ../README.md:66
msgid "Git (`git`)"
msgstr "Git (`git`)"

#. type: Bullet: '- '
#: ../README.md:66
msgid "Mercurial (`hg`)"
msgstr "Mercurial (`hg`)"

#. type: Bullet: '- '
#: ../README.md:66
msgid "Fossil (`fossil`)"
msgstr "Fossil (`fossil`)"

#. type: Bullet: '- '
#: ../README.md:66
msgid "Perforce (`p4`)"
msgstr "Perforce (`p4`)"

#. type: Bullet: '- '
#: ../README.md:66
msgid "Subversion (`svn`)"
msgstr "Subversion (`svn`)"

#. type: Plain text
#: ../README.md:70
msgid ""
"It's important to note that the need for these binary dependencies may vary "
"depending on individual use cases. However, for most users, only 2 "
"dependencies are essential for Composer: `7z` (or `7zz` or `unzip`), and "
"`git`."
msgstr ""
"大事なことですが、これらのバイナリの依存関係の必要性は個々の用途によって様々"
"です。\n"
"しかし殆どの利用者にとっては、Composerに必須な依存関係はたった2つです。\n"
"`7z`（または`7zz`や`unzip`）と`git`です。"

#. type: Title -
#: ../README.md:72
#, no-wrap
msgid "Authors"
msgstr "作者"

#. type: Bullet: '- '
#: ../README.md:76
msgid ""
"Nils Adermann | [GitHub](https://github.com/naderman)  | [Twitter](https://"
"twitter.com/naderman) | <naderman@naderman.de> | [naderman.de](https://"
"naderman.de)"
msgstr ""
"Nils Adermann | [GitHub](https://github.com/naderman)  | [Twitter](https://"
"twitter.com/naderman) | <naderman@naderman.de> | [naderman.de](https://"
"naderman.de)"

#. type: Bullet: '- '
#: ../README.md:76
msgid ""
"Jordi Boggiano | [GitHub](https://github.com/Seldaek) | [Twitter](https://"
"twitter.com/seldaek) | <j.boggiano@seld.be> | [seld.be](https://seld.be)"
msgstr ""
"Jordi Boggiano | [GitHub](https://github.com/Seldaek) | [Twitter](https://"
"twitter.com/seldaek) | <j.boggiano@seld.be> | [seld.be](https://seld.be)"

#. type: Plain text
#: ../README.md:78
msgid ""
"See also the list of [contributors](https://github.com/composer/composer/"
"contributors) who participated in this project."
msgstr ""
"本プロジェクトに参加している[貢献者](https://github.com/composer/composer/"
"contributors)の一覧もご参照ください。"

#. type: Title -
#: ../README.md:80
#, no-wrap
msgid "Security Reports"
msgstr "セキュリティ報告書"

#. type: Plain text
#: ../README.md:83
msgid ""
"Please send any sensitive issue to [security@packagist.org](mailto:"
"security@packagist.org). Thanks!"
msgstr ""
"慎重を要する問題については全て[security@packagist.org](mailto:"
"security@packagist.org)にお送りください。\n"
"ありがとうございます。"

#. type: Title -
#: ../README.md:85
#, no-wrap
msgid "License"
msgstr "利用許諾"

#. type: Plain text
#: ../README.md:88
msgid ""
"Composer is licensed under the MIT License - see the [LICENSE](LICENSE) file "
"for details."
msgstr ""
"ComposerはMITライセンスの下で利用が許諾されます。\n"
"詳細は[LICENSE](LICENSE)をご参照ください。"

#. type: Title -
#: ../README.md:90
#, no-wrap
msgid "Acknowledgments"
msgstr "謝辞"

#. type: Bullet: '- '
#: ../README.md:93
msgid ""
"This project's Solver started out as a PHP port of openSUSE's [Libzypp "
"satsolver](https://en.opensuse.org/openSUSE:Libzypp_satsolver)."
msgstr ""
"本プロジェクトのSolverについて、openSUSEの[Libzypp satsolver](https://en."
"opensuse.org/openSUSE:Libzypp_satsolver)のPHP移植を開始しました。"

#. type: Title ##
#: ../doc/00-intro.md:1 ../doc/01-basic-usage.md:3
#, no-wrap
msgid "Introduction"
msgstr "導入"

#. type: Plain text
#: ../doc/00-intro.md:6
msgid ""
"Composer is a tool for dependency management in PHP. It allows you to "
"declare the libraries your project depends on and it will manage (install/"
"update) them for you."
msgstr ""
"ComposerはPHPの依存管理ツールです。\n"
"Composerはプロジェクトが依存するライブラリを宣言し管理（インストールやアップ"
"デート）できるようにするものです。"

#. type: Title ##
#: ../doc/00-intro.md:7
#, no-wrap
msgid "Dependency management"
msgstr "依存管理"

#. type: Plain text
#: ../doc/00-intro.md:15
msgid ""
"Composer is **not** a package manager in the same sense as Yum or Apt are. "
"Yes, it deals with \"packages\" or libraries, but it manages them on a per-"
"project basis, installing them in a directory (e.g. `vendor`) inside your "
"project. By default, it does not install anything globally. Thus, it is a "
"dependency manager. It does however support a \"global\" project for "
"convenience via the [global](03-cli.md#global) command."
msgstr ""
"ComposerはYumやAptの伝で言うとパッケージ管理ツールでは**ありません**。\n"
"「パッケージ」やライブラリを扱いはしますが、プロジェクト毎の管理であって、プ"
"ロジェクトの内部のディレクトリ（例：`vendor`）にインストールするのです。\n"
"既定では決して大域的にインストールしません。\n"
"したがって、依存管理なわけです。\n"
"とはいえ便宜上[global](03-cli.md#global)コマンドを介して「大域的な」プロジェ"
"クトに対応してはいます。"

#. type: Plain text
#: ../doc/00-intro.md:18
msgid ""
"This idea is not new and Composer is strongly inspired by node's [npm]"
"(https://www.npmjs.com/) and ruby's [bundler](https://bundler.io/)."
msgstr ""
"このアイデアは新しいものではありません。\n"
"Composerはnodeの[npm](https://www.npmjs.org/)やrubyの[bundler](https://"
"bundler.io/)に強く影響を受けています。"

#. type: Plain text
#: ../doc/00-intro.md:20
msgid "Suppose:"
msgstr "想像してみてください。"

#. type: Bullet: '1. '
#: ../doc/00-intro.md:23
msgid "You have a project that depends on a number of libraries."
msgstr "大量のライブラリに依存したプロジェクトがある。"

#. type: Bullet: '2. '
#: ../doc/00-intro.md:23
msgid "Some of those libraries depend on other libraries."
msgstr "別のライブラリに依存するライブラリがある。"

#. type: Plain text
#: ../doc/00-intro.md:25
msgid "Composer:"
msgstr "Composerでは次のことができます。"

#. type: Bullet: '1. '
#: ../doc/00-intro.md:30
msgid "Enables you to declare the libraries you depend on."
msgstr "依存するライブラリを宣言できる。"

#. type: Bullet: '2. '
#: ../doc/00-intro.md:30
msgid ""
"Finds out which versions of which packages can and need to be installed, and "
"installs them (meaning it downloads them into your project)."
msgstr ""
"どのパッケージのどのバージョンをインストールする必要があるのかを調べて、イン"
"ストールする（つまりプロジェクト内にパッケージをダウンロードします）。"

#. type: Bullet: '3. '
#: ../doc/00-intro.md:30
msgid "You can update all your dependencies in one command."
msgstr "1つのコマンドで全ての依存関係を更新できます。"

#. type: Plain text
#: ../doc/00-intro.md:33
msgid ""
"See the [Basic usage](01-basic-usage.md) chapter for more details on "
"declaring dependencies."
msgstr ""
"依存関係の宣言についての詳細は[基本的な使い方](01-basic-usage.md)の章を参照し"
"てください。"

#. type: Title ##
#: ../doc/00-intro.md:34
#, no-wrap
msgid "System Requirements"
msgstr "システム要件"

#. type: Plain text
#: ../doc/00-intro.md:41
msgid ""
"Composer in its latest version requires PHP 7.2.5 to run. A long-term-"
"support version (2.2.x) still offers support for PHP 5.3.2+ in case you are "
"stuck with a legacy PHP version. A few sensitive php settings and compile "
"flags are also required, but when using the installer you will be warned "
"about any incompatibilities."
msgstr ""
"最新のComposerが動作するためにはPHP 7.2.5が必要です。\n"
"歴史的なPHPのバージョンで止まっている場合は長期サポート版 (2.2.x) がまだPHP "
"5.3.2以上に対応しています。\n"
"また、いくつかの細かいPHPの設定とコンパイルフラグも必要ですが、要件が合ってい"
"ない箇所については、インストーラが警告を出すでしょう。"

#. type: Plain text
#: ../doc/00-intro.md:50
msgid ""
"Composer needs several supporting applications to work effectively, making "
"the process of handling package dependencies more efficient. For "
"decompressing files, Composer relies on tools like `7z` (or `7zz`), `gzip`, "
"`tar`, `unrar`, `unzip` and `xz`. As for version control systems, Composer "
"integrates seamlessly with Fossil, Git, Mercurial, Perforce and Subversion, "
"thereby ensuring the application's smooth operation and management of "
"library repositories. Before using Composer, ensure that these dependencies "
"are correctly installed on your system."
msgstr ""
"Composerが効率的に動作するには、幾つかの補助的なアプリケーションが必要で"
"す。\n"
"これらはパッケージの依存関係を扱う処理をより効率的にするものです。\n"
"ファイルを解凍するために、Composerは`7z`（或いは`7zz`）、`gzip`、`tar`、"
"`unrar`、`unzip`、`xz`のようなツールに依っています。\n"
"バージョン管理システムについては、ComposerはFossil、Git、Mercurial、"
"Perforce、Subversionと間断なく協調し、これにより円滑なアプリケーションの操作"
"とライブラリのリポジトリの管理を確実にします。\n"
"Composerを使う前にこれらの依存関係が正しくシステムにインストールされているこ"
"とをご確認ください。"

#. type: Plain text
#: ../doc/00-intro.md:53
msgid ""
"Composer is multi-platform and we strive to make it run equally well on "
"Windows, Linux and macOS."
msgstr ""
"Composerはマルチプラットフォームであり、Windows、Linux、macOSのそれぞれで同じ"
"ように動作するよう努めています。"

#. type: Title ##
#: ../doc/00-intro.md:54
#, no-wrap
msgid "Installation - Linux / Unix / macOS"
msgstr "Linux / Unix / macOSへのインストール"

#. type: Title ###
#: ../doc/00-intro.md:56
#, no-wrap
msgid "Downloading the Composer Executable"
msgstr "実行形式のComposerをダウンロード"

#. type: Plain text
#: ../doc/00-intro.md:63
msgid ""
"Composer offers a convenient installer that you can execute directly from "
"the command line. Feel free to [download this file](https://getcomposer.org/"
"installer)  or review it on [GitHub](https://github.com/composer/getcomposer."
"org/blob/main/web/installer)  if you wish to know more about the inner "
"workings of the installer. The source is plain PHP."
msgstr ""
"Composerには便利なインストーラがあり、コマンドラインから直接実行できます。\n"
"気兼ねなく[このファイルをダウンロード](https://getcomposer.org/installer)した"
"り、インストーラの内部のはたらきについてもっと知りたいと思ったら[GitHub]"
"(https://github.com/composer/getcomposer.org/blob/main/web/installer)で確認し"
"たりしてください。\n"
"ソースは単なるPHPです。"

#. type: Plain text
#: ../doc/00-intro.md:66
msgid ""
"There are, in short, two ways to install Composer. Locally as part of your "
"project, or globally as a system wide executable."
msgstr ""
"平たく言うとComposerのインストールには2つの方法があります。\n"
"プロジェクトへローカルに入れる方法と、システム全域の実行ファイルとしてグロー"
"バルに入れる方法です。"

#. type: Title ####
#: ../doc/00-intro.md:67
#, no-wrap
msgid "Locally"
msgstr "ローカル"

#. type: Plain text
#: ../doc/00-intro.md:71
msgid ""
"To install Composer locally, run the installer in your project directory. "
"See [the Download page](https://getcomposer.org/download/) for instructions."
msgstr ""
"Composerをローカルにインストールするためには、プロジェクトのディレクトリでイ"
"ンストーラを走らせてください。\n"
"解説は[ダウンロードページ](https://getcomposer.org/download/)を参照してくださ"
"い。"

#. type: Plain text
#: ../doc/00-intro.md:76
msgid ""
"The installer will check a few PHP settings and then download `composer."
"phar` to your working directory. This file is the Composer binary. It is a "
"PHAR (PHP archive), which is an archive format for PHP which can be run on "
"the command line, amongst other things."
msgstr ""
"インストーラははいくつかのPHPの設定内容を確認して、`composer.phar`を作業ディ"
"レクトリにダウンロードします。\n"
"このファイルはComposerのバイナリです。\n"
"PHAR (PHP archive) はPHPのためのアーカイブ形式であり、コマンドラインから実行"
"できますし、他の方法もあります"

#. type: Plain text
#: ../doc/00-intro.md:78
msgid "Now run `php composer.phar` in order to run Composer."
msgstr "ここでComposerを走らせるには`php composer.phar`としてください。"

# TODO: link ref def
#. type: Plain text
#: ../doc/00-intro.md:84
msgid ""
"You can install Composer to a specific directory by using the `--install-"
"dir` option and additionally (re)name it as well using the `--filename` "
"option. When running the installer when following [the Download page "
"instructions](https://getcomposer.org/download/) add the following "
"parameters:"
msgstr ""
"`--install-dir`オプションを使って特定のディレクトリに、更に`--filename`オプ"
"ションを使って命名（改名）しつつ、Composerをインストールできます。\n"
"[ダウンロードページの説明](https://getcomposer.org/download/)に従ってインス"
"トーラを走らせるときは、以下の引数を加えてください。"

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:85
#, no-wrap
msgid "php composer-setup.php --install-dir=bin --filename=composer\n"
msgstr "php composer-setup.php --install-dir=bin --filename=composer\n"

#. type: Plain text
#: ../doc/00-intro.md:90
msgid "Now run `php bin/composer` in order to run Composer."
msgstr "それから、`php bin/composer`とするとComposerが走ります。"

#. type: Title ####
#: ../doc/00-intro.md:91
#, no-wrap
msgid "Globally"
msgstr "大域的に使う"

#. type: Plain text
#: ../doc/00-intro.md:97
msgid ""
"You can place the Composer PHAR anywhere you wish. If you put it in a "
"directory that is part of your `PATH`, you can access it globally. On Unix "
"systems you can even make it executable and invoke it without directly using "
"the `php` interpreter."
msgstr ""
"Composer PHARは好きな場所に置くことができます。\n"
"`PATH`の通った場所に置くことで大域的にアクセスできます。\n"
"Unix系のシステムでは実行形式にして`php`インタプリタを直接使わずに呼び出すこと"
"もできます。"

#. type: Plain text
#: ../doc/00-intro.md:100
msgid ""
"After running the installer following [the Download page instructions]"
"(https://getcomposer.org/download/)  you can run this to move composer.phar "
"to a directory that is in your path:"
msgstr ""
"[ダウンロードページの説明](https://getcomposer.org/download/)に従ってインス"
"トーラを走らせた後は、以下を走らせてパスにあるディレクトリにcomposer.pharを移"
"動させられます。"

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:101
#, no-wrap
msgid "mv composer.phar /usr/local/bin/composer\n"
msgstr "mv composer.phar /usr/local/bin/composer\n"

#. type: Plain text
#: ../doc/00-intro.md:108
msgid ""
"If you like to install it only for your user and avoid requiring root "
"permissions, you can use `~/.local/bin` instead which is available by "
"default on some Linux distributions."
msgstr ""
"利用者のためだけにインストールしてルート権限を避けたいようでしたら、代わりに"
"`~/.local/bin`を使うこともできます。\n"
"Linuxディストリビューションでは既定で使えることがあります。"

#. type: Plain text
#: ../doc/00-intro.md:111
#, no-wrap
msgid ""
"> **Note:** If the above fails due to permissions, you may need to run it again\n"
"> with `sudo`.\n"
msgstr "> **注意:** 上記がパーミッションによって失敗する場合、sudoで改めて実行する必要があるかもしれません。\n"

#. type: Plain text
#: ../doc/00-intro.md:116
#, no-wrap
msgid ""
"> **Note:** On some versions of macOS the `/usr` directory does not exist by\n"
"> default. If you receive the error \"/usr/local/bin/composer: No such file or\n"
"> directory\" then you must create the directory manually before proceeding:\n"
"> `mkdir -p /usr/local/bin`.\n"
msgstr ""
"> **補足：** macOSのバージョンによって、既定では`/usr`ディレクトリが存在しないことがあります。\n"
"> エラー「/usr/local/bin/composer: No such file or directory」が出たら、予め`mkdir -p /usr/local/bin`としてディレクトリを手作りしなければなりません。\n"

#. type: Plain text
#: ../doc/00-intro.md:120
#, no-wrap
msgid ""
"> **Note:** For information on changing your PATH, please read the\n"
"> [Wikipedia article](https://en.wikipedia.org/wiki/PATH_(variable)) and/or use\n"
"> your search engine of choice.\n"
msgstr "> **補足：** パスを変えることに関しては[Wikipediaの記事](https://en.wikipedia.org/wiki/PATH_(variable))を読んだりお好みの検索エンジンに掛けてみてください。\n"

#. type: Plain text
#: ../doc/00-intro.md:122
msgid ""
"Now run `composer` in order to run Composer instead of `php composer.phar`."
msgstr ""
"これで`php composer.phar`の代わりに`composer`とすれば、Composerが走るようにな"
"りました。"

#. type: Title ##
#: ../doc/00-intro.md:123
#, no-wrap
msgid "Installation - Windows"
msgstr "Windowsへインストール"

#. type: Title ###
#: ../doc/00-intro.md:125
#, no-wrap
msgid "Using the Installer"
msgstr "インストーラを使う"

#. type: Plain text
#: ../doc/00-intro.md:128
msgid "This is the easiest way to get Composer set up on your machine."
msgstr "Composerをマシンに用意する最も簡単な方法です。"

#. type: Plain text
#: ../doc/00-intro.md:133
msgid ""
"Download and run [Composer-Setup.exe](https://getcomposer.org/Composer-Setup."
"exe). It will install the latest Composer version and set up your PATH so "
"that you can call `composer` from any directory in your command line."
msgstr ""
"[Composer-Setup.exe](https://getcomposer.org/Composer-Setup.exe)をダウンロー"
"ドして実行してください。\n"
"最新バージョンのComposerがインストールされパスが設定されるため、どのディレク"
"トリからも`composer`をコマンドラインから呼ぶことができます。"

#. type: Plain text
#: ../doc/00-intro.md:136
#, no-wrap
msgid ""
"> **Note:** Close your current terminal. Test usage with a new terminal: This is\n"
"> important since the PATH only gets loaded when the terminal starts.\n"
msgstr ""
"> **補足：** 現在の端末を閉じてください。\n"
"新しい端末で使えるか試してみてください。\n"
"パスは端末が起動したときにのみ読み込まれるので、一旦閉じるのは大事です。\n"

#. type: Title ###
#: ../doc/00-intro.md:137
#, no-wrap
msgid "Manual Installation"
msgstr "手動でインストール"

#. type: Plain text
#: ../doc/00-intro.md:142
msgid ""
"Change to a directory on your `PATH` and run the installer following [the "
"Download page instructions](https://getcomposer.org/download/)  to download "
"`composer.phar`."
msgstr ""
"`composer.phar`をダウンロードするため、`PATH`の通っているディレクトリに移動し"
"て[ダウンロードページの説明](https://getcomposer.org/download/)に従い、インス"
"トーラを走らせてください。"

#. type: Plain text
#: ../doc/00-intro.md:144
msgid "Create a new `composer.bat` file alongside `composer.phar`:"
msgstr ""
"`composer.bat`ファイルを`composer.phar`と同じ場所に新規作成してください。"

#. type: Plain text
#: ../doc/00-intro.md:146
msgid "Using cmd.exe:"
msgstr "cmd.exeを使う場合："

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:147
#, no-wrap
msgid "C:\\bin> echo @php \"%~dp0composer.phar\" %*>composer.bat\n"
msgstr "C:\\bin> echo @php \"%~dp0composer.phar\" %*>composer.bat\n"

#. type: Plain text
#: ../doc/00-intro.md:152
msgid "Using PowerShell:"
msgstr "PowerShellを使う場合："

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:153
#, no-wrap
msgid "PS C:\\bin> Set-Content composer.bat '@php \"%~dp0composer.phar\" %*'\n"
msgstr "PS C:\\bin> Set-Content composer.bat '@php \"%~dp0composer.phar\" %*'\n"

#. type: Plain text
#: ../doc/00-intro.md:161
msgid ""
"Add the directory to your PATH environment variable if it isn't already.  "
"For information on changing your PATH variable, please see [this article]"
"(https://www.computerhope.com/issues/ch000549.htm) and/or use your search "
"engine of choice."
msgstr ""
"まだPATH環境変数にディレクトリがなければ追加してください。\n"
"PATH変数を変えることに関しては[この記事](https://www.computerhope.com/issues/"
"ch000549.htm)を参照したりお好みの検索エンジンに掛けてみたりしてください。"

#. type: Plain text
#: ../doc/00-intro.md:163
msgid "Close your current terminal. Test usage with a new terminal:"
msgstr ""
"現在の端末を閉じてください。\n"
"新しい端末で使えるか試してください。"

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:164
#, no-wrap
msgid "C:\\Users\\username>composer -V\n"
msgstr "C:\\Users\\username>composer -V\n"

#. type: Fenced code block (text)
#: ../doc/00-intro.md:167
#, no-wrap
msgid "Composer version 2.4.0 2022-08-16 16:10:48\n"
msgstr "Composer version 2.4.0 2022-08-16 16:10:48\n"

#. type: Title ##
#: ../doc/00-intro.md:171
#, no-wrap
msgid "Docker Image"
msgstr "Dockerイメージ"

#. type: Plain text
#: ../doc/00-intro.md:174
msgid ""
"Composer is published as Docker container in a few places, see the list in "
"the [composer/docker README](https://github.com/composer/docker)."
msgstr ""
"Composerはいくつかの場所でDockerコンテナとして公開されています。\n"
"[composer/dockerのREADME](https://github.com/composer/docker)で一覧を参照して"
"ください。"

#. type: Plain text
#: ../doc/00-intro.md:176
msgid "Example usage:"
msgstr "使用例："

#. type: Fenced code block (shell)
#: ../doc/00-intro.md:177
#, no-wrap
msgid ""
"docker pull composer/composer\n"
"docker run --rm -it -v \"$(pwd):/app\" composer/composer install\n"
msgstr ""
"docker pull composer/composer\n"
"docker run --rm -it -v \"$(pwd):/app\" composer/composer install\n"

#. type: Plain text
#: ../doc/00-intro.md:183
msgid ""
"To add Composer to an existing **Dockerfile** you can simply copy binary "
"file from pre-built, low-size images:"
msgstr ""
"既存の**Dockerfile**にComposerを加えるには、単に既にビルドされた小さいサイズ"
"のイメージからバイナリファイルを複製できます。"

#. type: Fenced code block (Dockerfile)
#: ../doc/00-intro.md:184
#, no-wrap
msgid ""
"# Latest release\n"
"COPY --from=composer/composer:latest-bin /composer /usr/bin/composer\n"
"\n"
"# Specific release\n"
"COPY --from=composer/composer:2-bin /composer /usr/bin/composer\n"
msgstr ""
"# 最新リリース\n"
"COPY --from=composer/composer:latest-bin /composer /usr/bin/composer\n"
"\n"
"# 特定のリリース\n"
"COPY --from=composer/composer:2-bin /composer /usr/bin/composer\n"

#. type: Plain text
#: ../doc/00-intro.md:193
msgid ""
"Read the [image description](https://hub.docker.com/r/composer/composer) for "
"further usage information."
msgstr ""
"さらなる使い方の情報については[イメージの説明](https://hub.docker.com/r/"
"composer/composer)をお読みください。"

#. type: Plain text
#: ../doc/00-intro.md:195
#, no-wrap
msgid "**Note:** Docker specific issues should be filed [on the composer/docker repository](https://github.com/composer/docker/issues).\n"
msgstr "**補足：** Docker固有の問題は[composer/dockerリポジトリ](https://github.com/composer/docker/issues)に報告されると良いでしょう。\n"

#. type: Plain text
#: ../doc/00-intro.md:197
#, no-wrap
msgid "**Note:** You may also use `composer` instead of `composer/composer` as image name above. It is shorter and is a Docker official image but is not published directly by us and thus usually receives new releases with a delay of a few days. **Important**: short-aliased images don't have binary-only equivalents, so for `COPY --from` approach it's better to use `composer/composer` ones.\n"
msgstr ""
"**補足：** 上のイメージ名では`composer/composer`の代わりに`composer`を使うこともできます。\n"
"名前が短かく、Dockerの公式イメージですが、直接私達が公開したものではないので新しいリリースが数日送れで来ることが普通です。\n"
"**重要**：短い別名が付けられたイメージにはバイナリのみの同じものがないため、`COPY --from`の方法については`composer/composer`のほうを使う方が良いです。\n"

#. type: Title ##
#: ../doc/00-intro.md:198
#, no-wrap
msgid "Using Composer"
msgstr "Composerを使う"

#. type: Plain text
#: ../doc/00-intro.md:202
msgid ""
"Now that you've installed Composer, you are ready to use it! Head on over to "
"the next chapter for a short demonstration."
msgstr ""
"これでComposerをインストールしたので使う準備ができました。\n"
"簡単な実演があるので次の章に向かいましょう。"

#. type: Plain text
#: ../doc/00-intro.md:203
msgid "[Basic usage](01-basic-usage.md) &rarr;"
msgstr "[基本的な使い方](01-basic-usage.md) &rarr;"

#. type: Title #
#: ../doc/01-basic-usage.md:1
#, no-wrap
msgid "Basic usage"
msgstr "基本的な使い方"

#. type: Plain text
#: ../doc/01-basic-usage.md:8
msgid ""
"For our basic usage introduction, we will be installing `monolog/monolog`, a "
"logging library. If you have not yet installed Composer, refer to the [Intro]"
"(00-intro.md) chapter."
msgstr ""
"基礎的な使い方の導入として、ここではログライブラリである`monolog/monolog`をイ"
"ンストールします。\n"
"まだComposerをインストールしていなければ、[はじめに](00-intro.md)章を参照して"
"ください。"

#. type: Plain text
#: ../doc/01-basic-usage.md:11
#, no-wrap
msgid ""
"> **Note:** for the sake of simplicity, this introduction will assume you\n"
"> have performed a [local](00-intro.md#locally) install of Composer.\n"
msgstr "> **補足：** 簡潔のために、この導入ではComposerの[ローカル](00-intro.md#locally)インストールを実施した前提で進めます。\n"

#. type: Title ##
#: ../doc/01-basic-usage.md:12
#, no-wrap
msgid "`composer.json`: Project setup"
msgstr "`composer.json`: プロジェクトの立ち上げ"

#. type: Plain text
#: ../doc/01-basic-usage.md:20
msgid ""
"To start using Composer in your project, all you need is a `composer.json` "
"file. This file describes the dependencies of your project and may contain "
"other metadata as well. It typically should go in the top-most directory of "
"your project/VCS repository. You can technically run Composer anywhere but "
"if you want to publish a package to Packagist.org, it will have to be able "
"to find the file at the top of your VCS repository."
msgstr ""
"プロジェクトでComposerを使い始めるにあたって必要なのは`composer.json`ファイル"
"だけです。\n"
"このファイルにはプロジェクトの依存関係が記述され、他のメタデータも含まれるこ"
"とがあります。\n"
"大抵プロジェクトやVCSリポジトリの最上位ディレクトリにあります。\n"
"技術的にはComposerをどこで実行することもできますが、パッケージをPackagist.org"
"に公開したいならば、VCSリポジトリの一番上の階層にファイルがなければなりませ"
"ん。"

#. type: Title ###
#: ../doc/01-basic-usage.md:21
#, no-wrap
msgid "The `require` key"
msgstr "`require`キー"

#. type: Plain text
#: ../doc/01-basic-usage.md:26
msgid ""
"The first thing you specify in `composer.json` is the [`require`](04-schema."
"md#require) key. You are telling Composer which packages your project "
"depends on."
msgstr ""
"最初に`composer.json`で指定するものは、[`require`](04-schema.md#require)キー"
"です。\n"
"Composerにプロジェクトが依存しているパッケージがどれであるかを伝えるもので"
"す。"

#. type: Fenced code block (json)
#: ../doc/01-basic-usage.md:27
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"2.0.*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"2.0.*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:38
msgid ""
"As you can see, [`require`](04-schema.md#require) takes an object that maps "
"**package names** (e.g. `monolog/monolog`) to **version constraints** (e.g.  "
"`1.0.*`)."
msgstr ""
"見ての通り、[`require`](04-schema.md#require)は**パッケージ名**（例："
"`monolog/monolog`）と **パッケージバージョン**（例：`1.0.*`）を対応付けるオブ"
"ジェクトを取ります。"

#. type: Plain text
#: ../doc/01-basic-usage.md:46
msgid ""
"Composer uses this information to search for the right set of files in "
"package \"repositories\" that you register using the [`repositories`](04-"
"schema.md#repositories)  key, or in [Packagist.org](https://packagist.org), "
"the default package repository.  In the above example, since no other "
"repository has been registered in the `composer.json` file, it is assumed "
"that the `monolog/monolog` package is registered on Packagist.org. (Read "
"more [about Packagist](#packagist), and [about repositories](05-repositories."
"md))."
msgstr ""
"Composerはこの情報を使って、[`repositories`](04-schema.md#repositories)キーか"
"らパッケージ「リポジトリ」や、既定のパッケージレジストリである[Packagist.org]"
"(https://packagist.org)にある正しいファイル一式を探します。\n"
"上の例ではこれといったリポジトリは`composer.json`ファイルに登録されていないの"
"で、`monolog/monolog`パッケージはPackagist.orgに登録されているものと推定され"
"ます（詳細は[Packagistについて](#packagist)と[リポジトリについて](05-"
"repositories.md)を参照）。"

#. type: Title ###
#: ../doc/01-basic-usage.md:47
#, no-wrap
msgid "Package names"
msgstr "パッケージ名"

#. type: Plain text
#: ../doc/01-basic-usage.md:53
msgid ""
"The package name consists of a vendor name and the project's name. Often "
"these will be identical - the vendor name only exists to prevent naming "
"clashes. For example, it would allow two different people to create a "
"library named `json`.  One might be named `igorw/json` while the other might "
"be `seldaek/json`."
msgstr ""
"パッケージ名はベンダー名とプロジェクト名から成ります。\n"
"これらはしばしば同一になります。\n"
"すなわち、ベンダー名は命名が衝突するのを避けるためだけにあります。\n"
"例えば異なる2人の人物が`json`という名前のライブラリを`igorw/json`と`seldaek/"
"json`とそれぞれ命名して作成できます。"

#. type: Plain text
#: ../doc/01-basic-usage.md:58
msgid ""
"Read more about [publishing packages and package naming](02-libraries.md).  "
"(Note that you can also specify \"platform packages\" as dependencies, "
"allowing you to require certain versions of server software. See [platform "
"packages](#platform-packages) below.)"
msgstr ""
"詳細は[パッケージの公開とパッケージの命名](02-libraries.md)を読んでください"
"（なお「プラットフォームパッケージ」を依存関係として指定することも可能で、"
"サーバーのソフトウェアの特定のバージョンを要求できます。\n"
"[プラットフォームパッケージ](#platform-packages)で後述します）。"

#. type: Title ###
#: ../doc/01-basic-usage.md:59
#, no-wrap
msgid "Package version constraints"
msgstr "パッケージバージョン制約"

#. type: Plain text
#: ../doc/01-basic-usage.md:65
#, no-wrap
msgid ""
"In our example, we are requesting the Monolog package with the version constraint\n"
"[`2.0.*`](https://semver.madewithlove.com/?package=monolog%2Fmonolog&constraint=2.0.*).\n"
"This means any version in the `2.0` development branch, or any version that is\n"
"greater than or equal to 2.0 and less than 2.1 (`>=2.0 <2.1`).\n"
msgstr ""
"先の例ではバージョン制約[`2.0.*`](https://semver.madewithlove.com/?package=monolog%2Fmonolog&constraint=2.0.*)のMonologパッケージを要求しています。\n"
"これが意味するものは`2.0`の開発ブランチの任意のバージョン、言い換えると2.0以上で2.1より小さい（`>=2.0 <2.1`）任意のバージョンのことを指します。\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:68
msgid ""
"Please read [versions](articles/versions.md) for more in-depth information "
"on versions, how versions relate to each other, and on version constraints."
msgstr ""
"バージョンとバージョン間の関連、バージョン制約についてのより詳しい情報は[バー"
"ジョン](articles/versions.md)を読んでください。"

#. type: Plain text
#: ../doc/01-basic-usage.md:80
#, no-wrap
msgid ""
"> **How does Composer download the right files?** When you specify a dependency in\n"
"> `composer.json`, Composer first takes the name of the package that you have requested\n"
"> and searches for it in any repositories that you have registered using the\n"
"> [`repositories`](04-schema.md#repositories) key. If you have not registered\n"
"> any extra repositories, or it does not find a package with that name in the\n"
"> repositories you have specified, it falls back to Packagist.org (more [below](#packagist)).\n"
">\n"
"> When Composer finds the right package, either in Packagist.org or in a repo you have specified,\n"
"> it then uses the versioning features of the package's VCS (i.e., branches and tags)\n"
"> to attempt to find the best match for the version constraint you have specified. Be sure to read\n"
"> about versions and package resolution in the [versions article](articles/versions.md).\n"
msgstr ""
"> **どうやってComposerは正しいファイルをダウンロードしているのか。**\n"
"> `composer.json`に依存関係を指定したとき、Composerはまず、[`repositories`](04-schema.md#repositories)キーを使って登録された全てのリポジトリを対象に要求されたパッケージの名前を検索します。\n"
"> もし1つも追加でリポジトリを登録していなかったり、指定したリポジトリにその名前のパッケージがなかったときは、Packagist.org（[後述](#packagist)）に落ち着きます。\n"
">\n"
"> ComposerがPackagist.orgないし指定したリポジトリで正しいパッケージがあったときは、パッケージのVCSのバージョン機能（つまりブランチとタグ）を使って、指定したバージョン制約に最も合致するものを見付け出そうとします。\n"
"> 必ず[バージョンについての記事](articles/versions.md)でバージョンとパッケージについて読んでください。\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:89
#, no-wrap
msgid ""
"> **Note:** If you are trying to require a package but Composer throws an error\n"
"> regarding package stability, the version you have specified may not meet your\n"
"> default minimum stability requirements. By default, only stable releases are taken\n"
"> into consideration when searching for valid package versions in your VCS.\n"
">\n"
"> You might run into this if you are trying to require dev, alpha, beta, or RC\n"
"> versions of a package. Read more about stability flags and the `minimum-stability`\n"
"> key on the [schema page](04-schema.md).\n"
msgstr ""
"> **補足：** もしパッケージを要求したもののComposerがパッケージの安定性の理由で例外を投げた場合は、指定したバージョンが既定の最小の安定要件に見合わない可能性があります。\n"
"> VCSで妥当なパッケージバージョンを探す際、既定では安定リリースのみが考慮されます。\n"
">\n"
"> パッケージの開発版、アルファ版、ベータ版、リリース候補のバージョンを要求しようとしたときに、この例外に遭遇するかもしれません。\n"
"> 安定性フラグと`minimum-stability`キーについての詳細は[スキーマのページ](04-schema.md)をお読みください。\n"

#. type: Title ##
#: ../doc/01-basic-usage.md:90
#, no-wrap
msgid "Installing dependencies"
msgstr "依存物をインストール"

#. type: Plain text
#: ../doc/01-basic-usage.md:94
msgid ""
"To initially install the defined dependencies for your project, you should "
"run the [`update`](03-cli.md#update-u) command."
msgstr ""
"定義された依存関係をプロジェクトに初めてインストールするときは、[`update`]"
"(03-cli.md#update-u)コマンドを走らせると良いです。"

#. type: Fenced code block (shell)
#: ../doc/01-basic-usage.md:95 ../doc/01-basic-usage.md:170
#: ../doc/03-cli.md:145
#, no-wrap
msgid "php composer.phar update\n"
msgstr "php composer.phar update\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:100
msgid "This will make Composer do two things:"
msgstr "こうするとComposerは2つのことをします。"

#. type: Bullet: '- '
#: ../doc/01-basic-usage.md:112
msgid ""
"It resolves all dependencies listed in your `composer.json` file and writes "
"all of the packages and their exact versions to the `composer.lock` file, "
"locking the project to those specific versions. You should commit the "
"`composer.lock` file to your project repo so that all people working on the "
"project are locked to the same versions of dependencies (more below). This "
"is the main role of the `update` command."
msgstr ""
"`composer.json`ファイルに挙げられている全ての依存関係を解決して、全てのアッ"
"ケージとその厳密なバージョンを`composer.lock`ファイルに書き込みます。\n"
"このファイルによりプロジェクトが特定のバージョンに固定されます。\n"
"`composer.lock`ファイルはプロジェクトのリポジトリにコミットすべきです。\n"
"そうすればプロジェクトに参画する全員にとって、同じバージョンの依存関係に固定"
"されたものになります（詳細は後述）。\n"
"これが`update`コマンドの主な役割です。"

#. type: Bullet: '- '
#: ../doc/01-basic-usage.md:112
msgid ""
"It then implicitly runs the [`install`](03-cli.md#install-i) command. This "
"will download the dependencies' files into the `vendor` directory in your "
"project. (The `vendor` directory is the conventional location for all third-"
"party code in a project). In our example from above, you would end up with "
"the Monolog source files in `vendor/monolog/monolog/`. As Monolog has a "
"dependency on `psr/log`, that package's files can also be found inside "
"`vendor/`."
msgstr ""
"それから暗黙裡に[`install`](03-cli.md#install-i)コマンドが走ります。\n"
"これにより依存関係のファイルがプロジェクトの`vendor`ディレクトリにダウンロー"
"ドされます（`vendor`ディレクトリはプロジェクトの全てのサードパーティコード用"
"の定番の場所です）。\n"
"上の例では最終的にMonologのソースファイルが`vendor/monolog/monolog`にあること"
"になります。\n"
"Monologには`psr/log`への依存関係があるため、そのパッケージのファイルもまた"
"`vendor/`の中にあります。"

#. type: Plain text
#: ../doc/01-basic-usage.md:116
#, no-wrap
msgid ""
"> **Tip:** If you are using git for your project, you probably want to add\n"
"> `vendor` in your `.gitignore`. You really don't want to add all of that\n"
"> third-party code to your versioned repository.\n"
msgstr ""
"> **コツ：** gitをプロジェクトで使っているのなら、多分`.gitignore`に`vendor`を追加したいでしょう。\n"
"> 実際のところ、バージョン管理されたリポジトリにサードパーティ製のコード全てを追加したくはないので。\n"

#. type: Title ###
#: ../doc/01-basic-usage.md:117
#, no-wrap
msgid "Commit your `composer.lock` file to version control"
msgstr "`composer.lock`ファイルをバージョン管理にコミットすること"

#. type: Plain text
#: ../doc/01-basic-usage.md:128
msgid ""
"Committing this file to version control is important because it will cause "
"anyone who sets up the project to use the exact same versions of the "
"dependencies that you are using. Your CI server, production machines, other "
"developers in your team, everything and everyone runs on the same "
"dependencies, which mitigates the potential for bugs affecting only some "
"parts of the deployments. Even if you develop alone, in six months when "
"reinstalling the project you can feel confident that the dependencies "
"installed are still working, even if the dependencies have released many new "
"versions since then.  (See note below about using the `update` command.)"
msgstr ""
"このファイルをバージョン管理にコミットすることは大事です。\n"
"なぜならこうすることでプロジェクトの準備をする誰もが、自分が使っているものと"
"全く同じバージョンの依存関係を使えるようになるからです。\n"
"CIサーバ、実運用マシン、チーム内の他の開発者、万物万人が同じ依存関係で実行す"
"るのです。\n"
"これにより特定のデプロイでのみ影響する潜在的なバグが低減されます。\n"
"たとえ一人で開発していて、6箇月経ってからプロジェクトを再インストールしたとし"
"ても、そして依存関係が多くの新しいバージョンをリリースされていたとしても、イ"
"ンストールされた依存関係がちゃんと動くことは疑いありません（`update`コマンド"
"の使用については以下の補足を参照してください）。"

#. type: Plain text
#: ../doc/01-basic-usage.md:131
#, no-wrap
msgid ""
"> **Note:** For libraries it is not necessary to commit the lock\n"
"> file, see also: [Libraries - Lock file](02-libraries.md#lock-file).\n"
msgstr ""
"> **補足：**\n"
"> ライブラリの場合、固定ファイルのコミットは不必要です。\n"
"> [ライブラリ - 固定ファイル](02-libraries.html#lock-file)も参照してください。\n"

#. type: Title ###
#: ../doc/01-basic-usage.md:132
#, no-wrap
msgid "Installing from `composer.lock`"
msgstr "`composer.lock`からインストールする"

#. type: Plain text
#: ../doc/01-basic-usage.md:137
msgid ""
"If there is already a `composer.lock` file in the project folder, it means "
"either you ran the `update` command before, or someone else on the project "
"ran the `update` command and committed the `composer.lock` file to the "
"project (which is good)."
msgstr ""
"既に`composer.lock`ファイルがプロジェクトフォルダにあるなら、それは前に自分で"
"`update`コマンドを走らせたか、プロジェクトの誰かが`update`コマンドを走らせて"
"`composer.lock`ファイルをプロジェクトにコミットしたからかのどちらかです（いい"
"ことです）。"

#. type: Plain text
#: ../doc/01-basic-usage.md:146
msgid ""
"Either way, running `install` when a `composer.lock` file is present "
"resolves and installs all dependencies that you listed in `composer.json`, "
"but Composer uses the exact versions listed in `composer.lock` to ensure "
"that the package versions are consistent for everyone working on your "
"project. As a result you will have all dependencies requested by your "
"`composer.json` file, but they may not all be at the very latest available "
"versions (some of the dependencies listed in the `composer.lock` file may "
"have released newer versions since the file was created). This is by design, "
"ensuring that your project does not break because of unexpected changes in "
"dependencies."
msgstr ""
"何れにせよ、`composer.lock`ファイルが存在しているときに`install`を走らせると"
"`composer.json`に挙がっている全ての依存関係を解決してインストールします。\n"
"ただしその際はプロジェクトの作業をしている人全員にとってパッケージのバージョ"
"ンが必ず一貫したものになるように、Composerは`composer.lock`に挙げられた厳密な"
"バージョンを使用します。\n"
"結果として`composer.json`ファイルで要求された全ての依存関係が取得されるのです"
"が、必ずしも利用できるごく最新のバージョンとはなっていないかもしれません"
"（ファイルが作成された後に、`composer.lock`ファイルで挙げられた依存関係のより"
"新しいバージョンがリリースされる可能性があります）。\n"
"これは設計上意図されたものであり、依存関係での予期しない変更による不具合がプ"
"ロジェクトで絶対に発生しないようになっています。"

#. type: Plain text
#: ../doc/01-basic-usage.md:150
msgid ""
"So after fetching new changes from your VCS repository it is recommended to "
"run a Composer `install` to make sure the vendor directory is up in sync "
"with your `composer.lock` file."
msgstr ""
"そのためVCSリポジトリから新しい変更を取得した後は、Composerの`install`を走ら"
"せて、vendorディレクトリが`composer.lock`ファイルと同期していることを確かめる"
"ことをお勧めします。"

#. type: Fenced code block (shell)
#: ../doc/01-basic-usage.md:151 ../doc/03-cli.md:86
#, no-wrap
msgid "php composer.phar install\n"
msgstr "php composer.phar install\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:161
msgid ""
"Composer enables reproducible builds by default. This means that running the "
"same command multiple times will produce a `vendor/` directory containing "
"files that are identical (*except their timestamps*), including the "
"autoloader files.  It is especially beneficial for environments that require "
"strict verification processes, as well as for Linux distributions aiming to "
"package PHP applications in a secure and predictable manner."
msgstr ""
"Composerは既定で再生成可能な構築を有効にします。\n"
"つまり同じコマンドを複数回走らせると、自動読み込み器のファイルを含め、（*タイ"
"ムスタンプ以外*）同値なファイルを含む`vendor/`ディレクトリを生成するので"
"す。\n"
"厳密な検証過程を要求する環境や、PHPアプリケーションを安全で予測可能なやり方で"
"パッケージ化することを目指すLinuxディストリビューションにおいては、特に有益で"
"す。"

#. type: Title ##
#: ../doc/01-basic-usage.md:162
#, no-wrap
msgid "Updating dependencies to their latest versions"
msgstr "最新版に依存関係を更新する"

#. type: Plain text
#: ../doc/01-basic-usage.md:169
msgid ""
"As mentioned above, the `composer.lock` file prevents you from automatically "
"getting the latest versions of your dependencies. To update to the latest "
"versions, use the [`update`](03-cli.md#update-u) command. This will fetch "
"the latest matching versions (according to your `composer.json` file) and "
"update the lock file with the new versions."
msgstr ""
"前述したように、`composer.lock`ファイルは自動的に依存関係の最新版が取得される"
"のを防ぎます。\n"
"最新のバージョンに更新するには[`update`](03-cli.md#update-u)コマンドを使いま"
"す。\n"
"こうすると（`composer.json`ファイルに沿うように）照合する最新バージョンを取得"
"して新しいバージョンで固定ファイルを更新します。"

#. type: Plain text
#: ../doc/01-basic-usage.md:177
#, no-wrap
msgid ""
"> **Note:** Composer will display a Warning when executing an `install` command\n"
"> if the `composer.lock` has not been updated since changes were made to the\n"
"> `composer.json` that might affect dependency resolution.\n"
msgstr "> **補足：** `composer.json`に依存関係解決に影響し得る変更が加えられた後に`composer.lock`が更新されていなければ、`install`コマンドを実行するときに、Composerが警告を表示します。\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:179
msgid ""
"If you only want to install, upgrade or remove one dependency, you can "
"explicitly list it as an argument:"
msgstr ""
"1つの依存関係をインストール、更新、削除したいだけなら、引数として明示的に列挙"
"できます。"

#. type: Fenced code block (shell)
#: ../doc/01-basic-usage.md:180
#, no-wrap
msgid "php composer.phar update monolog/monolog [...]\n"
msgstr "php composer.phar update monolog/monolog [...]\n"

#. type: Title ##
#: ../doc/01-basic-usage.md:184
#, no-wrap
msgid "Packagist"
msgstr "Packagist"

#. type: Plain text
#: ../doc/01-basic-usage.md:191
msgid ""
"[Packagist.org](https://packagist.org/) is the main Composer repository. A "
"Composer repository is basically a package source: a place where you can get "
"packages from. Packagist aims to be the central repository that everybody "
"uses. This means that you can automatically `require` any package that is "
"available there, without further specifying where Composer should look for "
"the package."
msgstr ""
"[Packagist](https://packagist.org/)は主眼のComposerリポジトリです。\n"
"Composerリポジトリは基本的にはパッケージの源です。\n"
"つまりパッケージを取ってくることができる場所のことです。\n"
"Packagistは全ての人が利用できる中央リポジトリであることを目指しています。\n"
"要はここで利用できるいかなるパッケージも自動的に`require`できるということで"
"す。\n"
"Composerがパッケージを探す場所を追加で指定しなくて良いのです。"

#. type: Plain text
#: ../doc/01-basic-usage.md:194
msgid ""
"If you go to the [Packagist.org website](https://packagist.org/), you can "
"browse and search for packages."
msgstr ""
"[packagistのWebサイト](https://packagist.org/)では、パッケージを閲覧したり検"
"索したりできます。"

#. type: Plain text
#: ../doc/01-basic-usage.md:198
msgid ""
"Any open source project using Composer is recommended to publish their "
"packages on Packagist. A library does not need to be on Packagist to be used "
"by Composer, but it enables discovery and adoption by other developers more "
"quickly."
msgstr ""
"Composerを使っているオープンソースプロジェクトはパッケージをPackagist上で公開"
"するべきです。\n"
"Composerを使う上で、ライブラリをPackagistに載せる必要はありません。\n"
"しかし公開することで、他の開発者がより素早くパッケージを発見して取り入れられ"
"るようになります。"

#. type: Title ##
#: ../doc/01-basic-usage.md:199
#, no-wrap
msgid "Platform packages"
msgstr "プラットフォームパッケージ"

#. type: Plain text
#: ../doc/01-basic-usage.md:204
msgid ""
"Composer has platform packages, which are virtual packages for things that "
"are installed on the system but are not actually installable by Composer. "
"This includes PHP itself, PHP extensions and some system libraries."
msgstr ""
"Composerにはプラットフォームパッケージがあります。\n"
"システムにインストールされる仮想的なパッケージで、実際にはComposerではインス"
"トールされないものを指します。\n"
"PHP自身やPHP拡張、システムライブライリが含まれます。"

#. type: Bullet: '* '
#: ../doc/01-basic-usage.md:208
msgid ""
"`php` represents the PHP version of the user, allowing you to apply "
"constraints, e.g. `^7.1`. To require a 64bit version of php, you can require "
"the `php-64bit` package."
msgstr ""
"`php`は利用者のPHPバージョンを表しており、`^7.1`のような制約を適用できま"
"す。\n"
"PHPの64bitバージョンを要求するには、`php-64bit`パッケージを指定できます。"

#. type: Bullet: '* '
#: ../doc/01-basic-usage.md:211
msgid ""
"`hhvm` represents the version of the HHVM runtime and allows you to apply a "
"constraint, e.g., `^2.3`."
msgstr ""
"`hhvm`はHHVMランタイムのバージョンを表しており、`^2.3`のように制約を適用でき"
"ます。"

#. type: Bullet: '* '
#: ../doc/01-basic-usage.md:216
msgid ""
"`ext-<name>` allows you to require PHP extensions (includes core "
"extensions). Versioning can be quite inconsistent here, so it's often a good "
"idea to set the constraint to `*`.  An example of an extension package name "
"is `ext-gd`."
msgstr ""
"`ext-<name>`とすることでPHPの拡張を要件にできます（中核拡張を含みます）。\n"
"バージョニングはかなり一貫性がないことがあるので、大体の場合は制約に`*`を設定"
"するのと良いです。\n"
"拡張パッケージ名の例は`ext-gd`です。"

#. type: Bullet: '* '
#: ../doc/01-basic-usage.md:220
msgid ""
"`lib-<name>` allows constraints to be made on versions of libraries used by "
"PHP. The following are available: `curl`, `iconv`, `icu`, `libxml`, "
"`openssl`, `pcre`, `uuid`, `xsl`."
msgstr ""
"`lib-<name>`はPHPで使われるライブラリのバージョンを制約します。\n"
"次のものが利用できます：`curl`, `iconv`, `icu`, `libxml`, `openssl`, `pcre`, "
"`uuid`, `xsl`。"

#. type: Plain text
#: ../doc/01-basic-usage.md:223
msgid ""
"You can use [`show --platform`](03-cli.md#show) to get a list of your "
"locally available platform packages."
msgstr ""
"[`show --platform`](03-cli.md#show)を使うと、ローカルで利用できるプラット"
"フォームパッケージの一覧が得られます。"

#. type: Title ##
#: ../doc/01-basic-usage.md:224
#, no-wrap
msgid "Autoloading"
msgstr "自動読み込み"

#. type: Plain text
#: ../doc/01-basic-usage.md:229
msgid ""
"For libraries that specify autoload information, Composer generates a "
"`vendor/autoload.php` file. You can include this file and start using the "
"classes that those libraries provide without any extra work:"
msgstr ""
"自動読み込み情報を指定するライブラリ用に、Composerは`vendor/autoload.php`ファ"
"イルを生成します。\n"
"単にこのファイルを含めれば、他に手間を掛けずにそれらのライブラリが提供するク"
"ラスを使い始められます。"

#. type: Fenced code block (php)
#: ../doc/01-basic-usage.md:230
#, no-wrap
msgid ""
"require __DIR__ . '/vendor/autoload.php';\n"
"\n"
"$log = new Monolog\\Logger('name');\n"
"$log->pushHandler(new Monolog\\Handler\\StreamHandler('app.log', Monolog\\Logger::WARNING));\n"
"$log->warning('Foo');\n"
msgstr ""
"require __DIR__ . '/vendor/autoload.php';\n"
"\n"
"$log = new Monolog\\Logger('name');\n"
"$log->pushHandler(new Monolog\\Handler\\StreamHandler('app.log', Monolog\\Logger::WARNING));\n"
"$log->warning('Foo');\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:240
msgid ""
"You can even add your own code to the autoloader by adding an [`autoload`]"
"(04-schema.md#autoload) field to `composer.json`."
msgstr ""
"`composer.json`に[`autoload`](04-schema.md#autoload)フィールドを追加すれば、"
"自分のコードについても自動読み込み器に追加できます。"

#. type: Fenced code block (json)
#: ../doc/01-basic-usage.md:241
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\"Acme\\\\\": \"src/\"}\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\"Acme\\\\\": \"src/\"}\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:251
msgid ""
"Composer will register a [PSR-4](https://www.php-fig.org/psr/psr-4/) "
"autoloader for the `Acme` namespace."
msgstr ""
"ここではComposerが[PSR-4](https://www.php-fig.org/psr/psr-4/)自動読み込み器を"
"`Acme`名前空間に登録しています。"

#. type: Plain text
#: ../doc/01-basic-usage.md:255
msgid ""
"You define a mapping from namespaces to directories. The `src` directory "
"would be in your project root, on the same level as the `vendor` directory. "
"An example filename would be `src/Foo.php` containing an `Acme\\Foo` class."
msgstr ""
"名前空間からディレクトリへの対応付けが定義されます。\n"
"`src`ディレクトリはプロジェクトの根幹にあり、同じ階層に`vendor`もあるとしま"
"しょう。\n"
"ファイル名の例としては`Acme\\Foo`クラスを含む`src/Foo.php`があります。"

#. type: Plain text
#: ../doc/01-basic-usage.md:258
msgid ""
"After adding the [`autoload`](04-schema.md#autoload) field, you have to re-"
"run this command:"
msgstr ""
"[`autoload`](04-schema.md#autoload)フィールドを追加した後は、このコマンドを再"
"び走らせなくてはなりません。"

#. type: Fenced code block (shell)
#: ../doc/01-basic-usage.md:259
#, no-wrap
msgid "php composer.phar dump-autoload\n"
msgstr "php composer.phar dump-autoload\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:266
msgid ""
"This command will re-generate the `vendor/autoload.php` file.  See the "
"[`dump-autoload`](03-cli.md#dump-autoload-dumpautoload-) section for more "
"information."
msgstr ""
"このコマンドは`vendor/autoload.php`ファイルを再生成します。\n"
"詳細は[`dump-autoload`](03-cli.md#dump-autoload-dumpautoload-)節を参照してく"
"ださい。"

#. type: Plain text
#: ../doc/01-basic-usage.md:270
msgid ""
"Including that file will also return the autoloader instance, so you can "
"store the return value of the include call in a variable and add more "
"namespaces.  This can be useful for autoloading classes in a test suite, for "
"example."
msgstr ""
"自動読み込みファイルを含めるとautoloaderインスタンスを返します。\n"
"そのためインクルード呼び出しの返り値を変数に保持し、更に名前空間を追加できま"
"す。\n"
"テストスイート内での自動読み込みクラスに便利です。\n"
"例えば以下です。"

#. type: Fenced code block (php)
#: ../doc/01-basic-usage.md:271
#, no-wrap
msgid ""
"$loader = require __DIR__ . '/vendor/autoload.php';\n"
"$loader->addPsr4('Acme\\\\Test\\\\', __DIR__);\n"
msgstr ""
"$loader = require __DIR__ . '/vendor/autoload.php';\n"
"$loader->addPsr4('Acme\\\\Test\\\\', __DIR__);\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:279
msgid ""
"In addition to PSR-4 autoloading, Composer also supports PSR-0, classmap and "
"files autoloading. See the [`autoload`](04-schema.md#autoload) reference for "
"more information."
msgstr ""
"PSR-4自動読み込みに加えて、ComposerはPSR-0、クラスマップ、ファイル自動読み込"
"みにも対応しています。\n"
"詳細は[`autoload`](04-schema.html#autoload)リファレンスを参照してください。"

#. type: Plain text
#: ../doc/01-basic-usage.md:281
msgid ""
"See also the docs on [optimizing the autoloader](articles/autoloader-"
"optimization.md)."
msgstr ""
"[autoloaderの最適化](articles/autoloader-optimization.md)についてのドキュメン"
"トも参照してください。"

#. type: Plain text
#: ../doc/01-basic-usage.md:285
#, no-wrap
msgid ""
"> **Note:** Composer provides its own autoloader. If you don't want to use that\n"
"> one, you can include `vendor/composer/autoload_*.php` files, which return\n"
"> associative arrays allowing you to configure your own autoloader.\n"
msgstr ""
"> **注意：** Composerは自前の自動読み込み器を提供しています。\n"
"> もしそれを使いたくない場合は、単に`vendor/composer/autoload_*.php`ファイルを含められます。\n"
"> 自前の自動読み込み器を設定できる連想配列を返します。\n"

#. type: Plain text
#: ../doc/01-basic-usage.md:286
msgid "&larr; [Intro](00-intro.md)  | [Libraries](02-libraries.md) &rarr;"
msgstr "&larr; [導入](00-intro.md)  |  [ライブラリ](02-libraries.md) &rarr;"

#. type: Title #
#: ../doc/02-libraries.md:1
#, no-wrap
msgid "Libraries"
msgstr "ライブラリ"

#. type: Plain text
#: ../doc/02-libraries.md:5
msgid ""
"This chapter will tell you how to make your library installable through "
"Composer."
msgstr ""
"この章ではライブラリをComposerでインストールできるようにする方法を学びます。"

#. type: Title ##
#: ../doc/02-libraries.md:6
#, no-wrap
msgid "Every project is a package"
msgstr "全てのプロジェクトはパッケージである"

#. type: Plain text
#: ../doc/02-libraries.md:12
msgid ""
"As soon as you have a `composer.json` in a directory, that directory is a "
"package. When you add a [`require`](04-schema.md#require) to a project, you "
"are making a package that depends on other packages. The only difference "
"between your project and a library is that your project is a package without "
"a name."
msgstr ""
"`composer.json`をディレクトリに配置した時点で、そのディレクトリはパッケージと"
"なります。\n"
"[`require`](04-schema.md#require)をプロジェクトに追加すると、他のパッケージに"
"依存したパッケージを作っていることになります。\n"
"プロジェクトとライブラリの唯一の違いは、プロジェクトは名前のないパッケージだ"
"ということです。"

#. type: Plain text
#: ../doc/02-libraries.md:15
msgid ""
"In order to make that package installable you need to give it a name. You do "
"this by adding the [`name`](04-schema.md#name) property in `composer.json`:"
msgstr ""
"インストール可能なパッケージを作成するためには命名する必要があります。\n"
"`composer.json`に[`name`プロパティ](04-schema.md#name)を追加してください。"

#. type: Fenced code block (json)
#: ../doc/02-libraries.md:16
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"acme/hello-world\",\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"name\": \"acme/hello-world\",\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/02-libraries.md:27
msgid ""
"In this case the project name is `acme/hello-world`, where `acme` is the "
"vendor name. Supplying a vendor name is mandatory."
msgstr ""
"この例では、プロジェクト名は`acme/hello-world`です。\n"
"`acme`はベンダー名です。\n"
"ベンダー名を与えることは必須です。"

#. type: Plain text
#: ../doc/02-libraries.md:31
#, no-wrap
msgid ""
"> **Note:** If you don't know what to use as a vendor name, your GitHub\n"
"> username is usually a good bet. Package names must be lowercase, and the\n"
"> convention is to use dashes for word separation.\n"
msgstr ""
"> **注意：**\n"
"> もしベンダー名に何をつけていいか分からない場合は、大抵は自分のGitHubの利用者名をつけるといいでしょう。\n"
"> パッケージ名は全て小文字でなければならず、単語の区切りはダッシュにするのが慣習です。\n"

#. type: Title ##
#: ../doc/02-libraries.md:32
#, no-wrap
msgid "Library Versioning"
msgstr "ライブラリのバージョン"

#. type: Plain text
#: ../doc/02-libraries.md:40
msgid ""
"In the vast majority of cases, you will be maintaining your library using "
"some sort of version control system like git, svn, hg or fossil. In these "
"cases, Composer infers versions from your VCS, and you **should not** "
"specify a version in your `composer.json` file. (See the [Versions article]"
"(articles/versions.md)  to learn about how Composer uses VCS branches and "
"tags to resolve version constraints.)"
msgstr ""
"まず間違いなくgit, svn, hg, fossilといった何らかの類のバージョン管理システム"
"を使ってライブラリを管理することでしょう。\n"
"こうした場合、ComposerはVCSからバージョンを推定するので`composer.json`ファイ"
"ルではバージョンを指定すべきでは**ありません**（ComposerがVCSのブランチとタグ"
"を使ってバージョン制約を解決する方法について学ぶためには[バージョンについての"
"記事](articles/versions.md)を参照してください）。"

#. type: Plain text
#: ../doc/02-libraries.md:44
msgid ""
"If you are maintaining packages by hand (i.e., without a VCS), you'll need "
"to specify the version explicitly by adding a `version` value in your "
"`composer.json` file:"
msgstr ""
"パッケージの管理を手作業でしている（つまりVCS無しの）場合、`composer.json`"
"ファイルに`version`値を加えて、バージョンを明示的に指定する必要があるでしょ"
"う。"

#. type: Fenced code block (json)
#: ../doc/02-libraries.md:45
#, no-wrap
msgid ""
"{\n"
"    \"version\": \"1.0.0\"\n"
"}\n"
msgstr ""
"{\n"
"    \"version\": \"1.0.0\"\n"
"}\n"

#. type: Plain text
#: ../doc/02-libraries.md:53
#, no-wrap
msgid ""
"> **Note:** When you add a hardcoded version to a VCS, the version will conflict\n"
"> with tag names. Composer will not be able to determine the version number.\n"
msgstr ""
"> **補足：** VCSに埋め込まれているバージョンを加えた場合、バージョンはタグ名と干渉することでしょう。\n"
"そうするとComposerはバージョン値を決定できなくなります。\n"

#. type: Title ###
#: ../doc/02-libraries.md:54
#, no-wrap
msgid "VCS Versioning"
msgstr "VCSのバージョン管理"

#. type: Plain text
#: ../doc/02-libraries.md:61
msgid ""
"Composer uses your VCS's branch and tag features to resolve the version "
"constraints you specify in your [`require`](04-schema.md#require) field to "
"specific sets of files.  When determining valid available versions, Composer "
"looks at all of your tags and branches and translates their names into an "
"internal list of options that it then matches against the version constraint "
"you provided."
msgstr ""
"ComposerはVCSのブランチとタグの機能を使って[`require`](04-schema.md#require)"
"フィールドで指定したバージョン制約を特定のファイルの集まりに至るまで解決しま"
"す。\n"
"利用できる妥当なバージョンを決定する際、Composerは全てのタグとブランチを見"
"て、それらの名前を内部的なオプションの一覧に翻訳し、それから与えられたバー"
"ジョン制約に対して照合します。"

#. type: Plain text
#: ../doc/02-libraries.md:64
msgid ""
"For more on how Composer treats tags and branches and how it resolves "
"package version constraints, read the [versions](articles/versions.md) "
"article."
msgstr ""
"Composerがタグとブランチを扱う方法とパッケージのバージョン制約を解決する方法"
"についての詳細は、[バージョン](articles/versions.md)の記事をお読みください。"

#. type: Title ##
#: ../doc/02-libraries.md:65
#, no-wrap
msgid "Lock file"
msgstr "固定ファイル"

#. type: Plain text
#: ../doc/02-libraries.md:71
msgid ""
"For your library you may commit the `composer.lock` file if you want to. "
"This can help your team to always test against the same dependency "
"versions.  However, this lock file will not have any effect on other "
"projects that depend on it. It only has an effect on the main project."
msgstr ""
"お望みならライブラリに`composer.lock`ファイルをコミットできます。\n"
"チームが常に同じ依存バージョンでテストする際の助けになります。\n"
"しかし、この固定ファイルはこれに依存している他のプロジェクトにいかなる影響も"
"齎しません。\n"
"主眼のプロジェクトのみに影響します。"

#. type: Plain text
#: ../doc/02-libraries.md:74
msgid ""
"If you do not want to commit the lock file, and you are using git, add it to "
"the `.gitignore`."
msgstr ""
"もし固定ファイルをコミットしたくなくて、且つgitを使っている場合は、`."
"gitignore`に追加してください。"

#. type: Title ##
#: ../doc/02-libraries.md:75
#, no-wrap
msgid "Publishing to a VCS"
msgstr "VCSに公開する"

#. type: Plain text
#: ../doc/02-libraries.md:81
msgid ""
"Once you have a VCS repository (version control system, e.g. git) containing "
"a `composer.json` file, your library is already composer-installable. In "
"this example we will publish the `acme/hello-world` library on GitHub under "
"`github.com/username/hello-world`."
msgstr ""
"`composer.json`ファイルを含むVCSリポジトリ（バージョン管理システム、例えば"
"git）があれば、ライブラリは既にcomposerでインストール可能です。\n"
"この例ではGitHubで`acme/hello-world`ライブラリを`github.com/username/hello-"
"world`として公開するとしましょう。"

#. type: Plain text
#: ../doc/02-libraries.md:87
msgid ""
"Now, to test installing the `acme/hello-world` package, we create a new "
"project locally. We will call it `acme/blog`. This blog will depend on `acme/"
"hello-world`, which in turn depends on `monolog/monolog`. We can accomplish "
"this by creating a new `blog` directory somewhere, containing a `composer."
"json`:"
msgstr ""
"それでは`acme/hello-world`パッケージのインストールを試すために、ローカルに新"
"しいプロジェクトを作成しましょう。\n"
"私たちはそれを`acme/blog`と呼ぶことにします。\n"
"このブログは`acme/hello-world`に依存し、更に`monolog/monolog`に依存するとしま"
"す。\n"
"以下の`composer.json`を含む新しい`blog`ディレクトリを作成することで達成されま"
"す。"

#. type: Fenced code block (json)
#: ../doc/02-libraries.md:88
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"acme/blog\",\n"
"    \"require\": {\n"
"        \"acme/hello-world\": \"dev-master\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"name\": \"acme/blog\",\n"
"    \"require\": {\n"
"        \"acme/hello-world\": \"dev-master\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/02-libraries.md:100
msgid ""
"The name is not needed in this case, since we don't want to publish the blog "
"as a library. It is added here to clarify which `composer.json` is being "
"described."
msgstr ""
"名前はこの場合必須ではありません。\n"
"このブログをライブラリとして公開することはないからです。\n"
"ここではどの`composer.json`が説明されているのかを明確にするために加えられてい"
"ます。"

#. type: Plain text
#: ../doc/02-libraries.md:104
msgid ""
"Now we need to tell the blog app where to find the `hello-world` "
"dependency.  We do this by adding a package repository specification to the "
"blog's `composer.json`:"
msgstr ""
"このブログアプリに依存物`hello-world`の所在を知らせる必要があります。\n"
"これにはパッケージのリポジトリ指定をこのブログの`composer.json`に追加します。"

#. type: Fenced code block (json)
#: ../doc/02-libraries.md:105
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"acme/blog\",\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/username/hello-world\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"acme/hello-world\": \"dev-master\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"name\": \"acme/blog\",\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/username/hello-world\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"acme/hello-world\": \"dev-master\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/02-libraries.md:122
msgid ""
"For more details on how package repositories work and what other types are "
"available, see [Repositories](05-repositories.md)."
msgstr ""
"パッケージリポジトリの挙動や他にどのようなタイプが利用できるかについての詳細"
"は、[リポジトリ](05-repositories.md)を参照してください。"

#. type: Plain text
#: ../doc/02-libraries.md:125
msgid ""
"That's all. You can now install the dependencies by running Composer's "
"[`install`](03-cli.md#install) command!"
msgstr ""
"これで全てです。\n"
"Composerの[`install`](03-cli.md#install)コマンドを実行すれば依存関係をインス"
"トールできます！"

#. type: Plain text
#: ../doc/02-libraries.md:129
#, no-wrap
msgid ""
"**Recap:** Any git/svn/hg/fossil repository containing a `composer.json` can be\n"
"added to your project by specifying the package repository and declaring the\n"
"dependency in the [`require`](04-schema.md#require) field.\n"
msgstr ""
"**まとめ：**\n"
"`composer.json`を含むあらゆるgit/svn/hg/fossilリポジトリは、[`require`](04-schema.md#require)フィールドでパッケージリポジトリを指定して依存関係を宣言することで、プロジェクトに追加できます。\n"

#. type: Title ##
#: ../doc/02-libraries.md:130
#, no-wrap
msgid "Publishing to packagist"
msgstr "Packagistに公開する"

#. type: Plain text
#: ../doc/02-libraries.md:134
msgid ""
"Alright, so now you can publish packages. But specifying the VCS repository "
"every time is cumbersome. You don't want to force all your users to do that."
msgstr ""
"よろしい、今やパッケージを公開できるようになりました。\n"
"しかし、毎回VCSリポジトリを指定するのは厄介なことです。\n"
"全ての利用者にそんなことはさせたくないでしょう。"

#. type: Plain text
#: ../doc/02-libraries.md:137
msgid ""
"The other thing that you may have noticed is that we did not specify a "
"package repository for `monolog/monolog`. How did that work? The answer is "
"Packagist."
msgstr ""
"`monolog/monolog`のためのパッケージリポジトリを指定しなかったこととにお気付き"
"かもしれません。\n"
"どのような仕組みなのでしょうか？\n"
"答えはPackagistです。"

#. type: Plain text
#: ../doc/02-libraries.md:143
msgid ""
"[Packagist](https://packagist.org/) is the main package repository for "
"Composer, and it is enabled by default. Anything that is published on "
"Packagist is available automatically through Composer. Since [Monolog is on "
"Packagist](https://packagist.org/packages/monolog/monolog), we can depend on "
"it without having to specify any additional repositories."
msgstr ""
"[Packagist](https://packagist.org/)はComposerの主眼のパッケージリポジトリ"
"で、 既定で有効になっています。\n"
"Packagistで公開されている全てのものは自動的にComposerで利用可能です。\n"
"[monologはPackagistにある](https://packagist.org/packages/monolog/monolog)の"
"で、追加のリポジトリ指定なくして依存できるのです。"

#. type: Plain text
#: ../doc/02-libraries.md:146
msgid ""
"If we wanted to share `hello-world` with the world, we would publish it on "
"Packagist as well."
msgstr ""
"`hello-world`を世界に共有したければ、同様にPackagistに公開するのが良いでしょ"
"う。"

#. type: Plain text
#: ../doc/02-libraries.md:152
msgid ""
"You visit [Packagist](https://packagist.org) and hit the \"Submit\" button. "
"This will prompt you to sign up if you haven't already, and then allows you "
"to submit the URL to your VCS repository, at which point Packagist will "
"start crawling it. Once it is done, your package will be available to anyone!"
msgstr ""
"[Packagist](https://packagist.org)を開いて\"Submit\"ボタンを押します。\n"
"まだサインアップしていなかったらその旨の表示がされます。\n"
"それからVCSリポジトリのURLを送信できます。\n"
"送信した時点でPackagistはクローリングを始めます。\n"
"完了すると、パッケージは誰でも使えるようになります！"

#. type: Title ##
#: ../doc/02-libraries.md:153
#, no-wrap
msgid "Light-weight distribution packages"
msgstr "軽量配布パッケージ"

#. type: Plain text
#: ../doc/02-libraries.md:157
msgid ""
"Some useless information like the `.github` directory, or large examples, "
"test data, etc. should typically not be included in distributed packages."
msgstr ""
"有用でない情報は普通、配布パッケージに含めない方が良いでしょう。\n"
"これには`.github`ディレクトリ、嵩張る例、テストデータなどがあります。"

#. type: Plain text
#: ../doc/02-libraries.md:162
msgid ""
"The `.gitattributes` file is a git specific file like `.gitignore` also "
"living at the root directory of your library. It overrides local and global "
"configuration (`.git/config` and `~/.gitconfig` respectively) when present "
"and tracked by git."
msgstr ""
"`.gitattributes`ファイルは`.gitignore`のようなgit固有のファイルです。\n"
"またライブラリの根幹ディレクトリにあります。\n"
"これが存在してgitで追跡されているとき、局所的な構成と大域的な構成（それぞれ`."
"git/config`と`~/.gitconfig`）がオーバーライドされます。"

#. type: Plain text
#: ../doc/02-libraries.md:165
msgid ""
"Use `.gitattributes` to prevent unwanted files from bloating the zip "
"distribution packages."
msgstr ""
"zipの配布パッケージが肥大化させる望ましくないファイルが入らないようにするに"
"は、`.gitattributes`を使ってください。"

#. type: Fenced code block (text)
#: ../doc/02-libraries.md:166
#, no-wrap
msgid ""
"// .gitattributes\n"
"/demo export-ignore\n"
"phpunit.xml.dist export-ignore\n"
"/.github/ export-ignore\n"
msgstr ""
"// .gitattributes\n"
"/demo export-ignore\n"
"phpunit.xml.dist export-ignore\n"
"/.github/ export-ignore\n"

#. type: Plain text
#: ../doc/02-libraries.md:174
msgid "Test it by inspecting the zip file generated manually:"
msgstr "生成されたzipファイルを手作業で調べて確認するには、次のようにします。"

#. type: Fenced code block (shell)
#: ../doc/02-libraries.md:175
#, no-wrap
msgid "git archive branchName --format zip -o file.zip\n"
msgstr "git archive branchName --format zip -o file.zip\n"

#. type: Plain text
#: ../doc/02-libraries.md:182
#, no-wrap
msgid ""
"> **Note:** Files would be still tracked by git just not included in the\n"
"> zip distribution. This only works for packages installed from\n"
"> dist (i.e. tagged releases) coming from GitHub, GitLab or Bitbucket.\n"
msgstr ""
"> **補足：**\n"
"> ファイルはgitで追跡されたままであり、zipの配布物に含まれていないだけです。\n"
"> これはdist（タグ付けされたリリース）でインストールしたパッケージでのみ機能します。\n"
"> 配布元はGitHub、GitLab、BitBucketがあります。\n"

#. type: Plain text
#: ../doc/02-libraries.md:183
msgid ""
"&larr; [Basic usage](01-basic-usage.md) | [Command-line interface](03-cli."
"md) &rarr;"
msgstr ""
"&larr; [基本的な使い方](01-basic-usage.md) |  [コマンドラインインターフェー"
"ス](03-cli.md) &rarr;"

#. type: Title #
#: ../doc/03-cli.md:1
#, no-wrap
msgid "Command-line interface / Commands"
msgstr "コマンドラインインターフェース / コマンド"

#. type: Plain text
#: ../doc/03-cli.md:5
msgid ""
"You've already learned how to use the command-line interface to do some "
"things. This chapter documents all the available commands."
msgstr ""
"既にいろいろなことをするために、コマンドラインインターフェースの使い方は学び"
"ました。\n"
"この章は全ての利用可能なコマンドを説明します。"

#. type: Plain text
#: ../doc/03-cli.md:9
msgid ""
"To get help from the command-line, call `composer` or `composer list` to see "
"the complete list of commands, then `--help` combined with any of those can "
"give you more information."
msgstr ""
"コマンドラインからヘルプを得るためには、`composer`または`composer list`を実行"
"して全てのコマンドの完全な一覧を見ることができます。\n"
"更に`--help`をそれらのコマンドと組み合わせれば、より多くの情報を得られます。"

#. type: Plain text
#: ../doc/03-cli.md:11
msgid ""
"As Composer uses [symfony/console](https://github.com/symfony/console) you "
"can call commands by short name if it's not ambiguous."
msgstr ""
"Composerは[symfony/console](https://github.com/symfony/console)を使っているた"
"め、曖昧でなければ短い名前でコマンドを呼び出せます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:11
#, no-wrap
msgid "php composer.phar dump\n"
msgstr "php composer.phar dump\n"

#. type: Plain text
#: ../doc/03-cli.md:15
msgid "calls `composer dump-autoload`."
msgstr "上では`composer dump-autoload`を呼び出します。"

#. type: Title ##
#: ../doc/03-cli.md:16
#, no-wrap
msgid "Bash Completions"
msgstr "Bashの補完"

#. type: Plain text
#: ../doc/03-cli.md:20
#, no-wrap
msgid ""
"To install bash completions you can run `composer completion bash > completion.bash`.\n"
"This will create a `completion.bash` file in the current directory.\n"
msgstr ""
"Bashの補完をインストールするには、`composer completion bash > completion.bash`と走らせられます。\n"
"現在のディレクトリに`completion.bash`ファイルを作ります。\n"

#. type: Plain text
#: ../doc/03-cli.md:22
msgid ""
"Then execute `source completion.bash` to enable it in the current terminal "
"session."
msgstr ""
"それから`source completion.bash`を実行すれば現在の端末のセッションで有効にな"
"ります。"

#. type: Plain text
#: ../doc/03-cli.md:25
msgid ""
"Move and rename the `completion.bash` file to `/etc/bash_completion.d/"
"composer` to make it load automatically in new terminals."
msgstr ""
"`completion.bash`を`/etc/bash_completion.d/composer`に移動しつつ改名すれば、"
"新しい端末で自動的に読み込まれるようにできます。"

#. type: Title ##
#: ../doc/03-cli.md:26
#, no-wrap
msgid "Global Options"
msgstr "大域オプション"

#. type: Plain text
#: ../doc/03-cli.md:29
msgid "The following options are available with every command:"
msgstr "以下のオプションは全てのコマンドで利用できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--verbose (-v):** Increase verbosity of messages."
msgstr "**--verbose (-v):** メッセージの冗長さを増やす。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--help (-h):** Display help information."
msgstr "**--help (-h):** ヘルプ情報を表示する。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--quiet (-q):** Do not output any message."
msgstr "**--quiet (-q):** メッセージを一切出力しない。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--no-interaction (-n):** Do not ask any interactive question."
msgstr ""
"**--no-interaction (-n):**\n"
"対話的な質問の問い合わせを一切行わない。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--no-plugins:** Disables plugins."
msgstr "**--no-plugins:** プラグインを無効にする。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid ""
"**--no-scripts:** Skips execution of scripts defined in `composer.json`."
msgstr ""
"**--no-scripts:** `composer.json`で定義されているスクリプトの実行を飛ばす。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid ""
"**--no-cache:** Disables the use of the cache directory. Same as setting the "
"COMPOSER_CACHE_DIR env var to /dev/null (or NUL on Windows)."
msgstr ""
"**--no-cache:** キャッシュディレクトリの使用を無効にする。\n"
"COMPOSER_CACHE_DIR環境変数を`/dev/null`（WindowsではNUL）に設定することと同じ"
"です。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid ""
"**--working-dir (-d):** If specified, use the given directory as working "
"directory."
msgstr ""
"**--working-dir (-d):** 指定すると、与えられたディレクトリを作業ディレクトリ"
"に使う。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--profile:** Display timing and memory usage information"
msgstr "**--profile:** 時間とメモリ使用量の情報を表示する。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--ansi:** Force ANSI output."
msgstr "**--ansi:** ANSI出力を強制する。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--no-ansi:** Disable ANSI output."
msgstr "**--no-ansi:** ANSI出力を行わない。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:43
msgid "**--version (-V):** Display this application version."
msgstr "**--version (-V):** 本アプリケーションのバージョンを表示する。"

#. type: Title ##
#: ../doc/03-cli.md:44
#, no-wrap
msgid "Process Exit Codes"
msgstr "プロセスの終了コード"

#. type: Bullet: '* '
#: ../doc/03-cli.md:49
msgid "**0:** OK"
msgstr "**0:** OK"

#. type: Bullet: '* '
#: ../doc/03-cli.md:49
msgid "**1:** Generic/unknown error code"
msgstr "**1:** 一般的ないし不明な失敗コード"

#. type: Bullet: '* '
#: ../doc/03-cli.md:49
msgid "**2:** Dependency solving error code"
msgstr "**2:** 依存解決の失敗コード"

#. type: Title ##
#: ../doc/03-cli.md:50
#, no-wrap
msgid "init"
msgstr "init"

#. type: Plain text
#: ../doc/03-cli.md:54
msgid ""
"In the [Libraries](02-libraries.md) chapter we looked at how to create a "
"`composer.json` by hand. There is also an `init` command available to do "
"this."
msgstr ""
"[ライブラリ](02-libraries.md)の章で`composer.json`を手作りする方法を見まし"
"た。\n"
"こうしたことをするのに`init`コマンドというのもあります。"

#. type: Plain text
#: ../doc/03-cli.md:57
msgid ""
"When you run the command it will interactively ask you to fill in the "
"fields, while using some smart defaults."
msgstr ""
"このコマンドを実行すると、賢明な既定値を使いながら、対話的な問答を経てフィー"
"ルドが埋められていきます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:58
#, no-wrap
msgid "php composer.phar init\n"
msgstr "php composer.phar init\n"

#. type: Title ###
#: ../doc/03-cli.md:62 ../doc/03-cli.md:97 ../doc/03-cli.md:185
#: ../doc/03-cli.md:273 ../doc/03-cli.md:330 ../doc/03-cli.md:377
#: ../doc/03-cli.md:401 ../doc/03-cli.md:440 ../doc/03-cli.md:487
#: ../doc/03-cli.md:554 ../doc/03-cli.md:597 ../doc/03-cli.md:622
#: ../doc/03-cli.md:638 ../doc/03-cli.md:653 ../doc/03-cli.md:690
#: ../doc/03-cli.md:724 ../doc/03-cli.md:741 ../doc/03-cli.md:798
#: ../doc/03-cli.md:838 ../doc/03-cli.md:921 ../doc/03-cli.md:977
#: ../doc/03-cli.md:1006 ../doc/03-cli.md:1015 ../doc/03-cli.md:1022
#: ../doc/03-cli.md:1038 ../doc/03-cli.md:1062 ../doc/03-cli.md:1082
#, no-wrap
msgid "Options"
msgstr "オプション"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--name:** Name of the package."
msgstr "**--name:** パッケージの名前。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--description:** Description of the package."
msgstr "**--description:** パッケージの説明。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--author:** Author name of the package."
msgstr "**--author:** パッケージの作者名。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--type:** Type of package."
msgstr "**--type:** パッケージの種類。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--homepage:** Homepage of the package."
msgstr "**--homepage:** パッケージのホームページ。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid ""
"**--require:** Package to require with a version constraint. Should be in "
"format `foo/bar:1.0.0`."
msgstr ""
"**--require:** バージョン制約付きの必要なパッケージ。書式は`foo/bar:1.0.0`の"
"ようになります。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--require-dev:** Development requirements, see **--require**."
msgstr "**--require-dev:** 開発のための要件です。**--require**を参照。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--stability (-s):** Value for the `minimum-stability` field."
msgstr "**--stability (-s):** `minimum-stability`フィールド用の値。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid "**--license (-l):** License of package."
msgstr "**--license (-l):** パッケージの利用許諾。"

# **の内側に空白を入れると強調表示されない点に注意です
#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid ""
"**--repository:** Provide one (or more) custom repositories. They will be "
"stored in the generated composer.json, and used for auto-completion when "
"prompting for the list of requires. Every repository can be either an HTTP "
"URL pointing to a `composer` repository or a JSON string which is similar to "
"what the [repositories](04-schema.md#repositories) key accepts."
msgstr ""
"**--repository:** 1つ（かそれ以上）の個別のリポジトリを与えます。\n"
"これらのリポジトリは生成されるcomposer.jsonに収められ、要件の一覧を提案する際"
"の自動補完に使われます。\n"
"全てのリポジトリは`composer`リポジトリを指すHTTPのURLないし[repositories](04-"
"schema.md#repositories)キーが受け付けるものと同様のJSON文字列の何れかを取りま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:80
msgid ""
"**--autoload (-a):** Add a PSR-4 autoload mapping to the composer.json. "
"Automatically maps your package's namespace to the provided directory. "
"(Expects a relative path, e.g. src/) See also [PSR-4 autoload](04-schema."
"md#psr-4)."
msgstr ""
"**--autoload (-a):** composer.jsonへのPSR-4自動読み込みの対応付けを加えま"
"す。\n"
"自動的にパッケージの名前空間を与えられたディレクトリに対応付けます（src/のよ"
"うな相対パスを想定しています）。\n"
"[PSR-4自動読み込み](04-schema.md#psr-4)も参照してください。"

#. type: Title ##
#: ../doc/03-cli.md:81
#, no-wrap
msgid "install / i"
msgstr "install / i"

#. type: Plain text
#: ../doc/03-cli.md:85
msgid ""
"The `install` command reads the `composer.json` file from the current "
"directory, resolves the dependencies, and installs them into `vendor`."
msgstr ""
"`install`コマンドは現在のディレクトリから`composer.json`ファイルを読み込み、"
"依存物を解決し、`vendor`配下にインストールします。"

#. type: Plain text
#: ../doc/03-cli.md:93
msgid ""
"If there is a `composer.lock` file in the current directory, it will use the "
"exact versions from there instead of resolving them. This ensures that "
"everyone using the library will get the same versions of the dependencies."
msgstr ""
"現在のディレクトリに`composer.lock`ファイルが存在する場合は、依存物を解決する"
"代わりに、そこから厳密なバージョンを使います。\n"
"ライブラリを使う全ての利用者が同じバージョンの依存物を持つことを保証します。"

#. type: Plain text
#: ../doc/03-cli.md:96
msgid ""
"If there is no `composer.lock` file, Composer will create one after "
"dependency resolution."
msgstr ""
"`composer.lock`ファイルがない場合、composerは依存物を解決した後で作成します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:428 ../doc/03-cli.md:963
msgid ""
"**--prefer-install:** There are two ways of downloading a package: `source` "
"and `dist`. Composer uses `dist` by default. If you pass `--prefer-"
"install=source` (or `--prefer-source`) Composer will install from `source` "
"if there is one. This is useful if you want to make a bugfix to a project "
"and get a local git clone of the dependency directly.  To get the legacy "
"behavior where Composer use `source` automatically for dev versions of "
"packages, use `--prefer-install=auto`. See also [config.preferred-install]"
"(06-config.md#preferred-install).  Passing this flag will override the "
"config value."
msgstr ""
"**--prefer-install:** パッケージをダウンロードする方法は`source`と`dist`の2つ"
"あります。\n"
"Composerは`dist`を既定で使います。\n"
"`--prefer-install=source`（または`--prefer-source`）を渡すと、Composerは、も"
"しあれば`source`からインストールします。\n"
"プロジェクトへのバグ修正をして、依存関係のローカルgitクローンを直接取得したい"
"場合に便利です。\n"
"Composerがパッケージの開発版用の`source`を自動的に使う、以前の挙動にしたけれ"
"ば、`--prefer-install=auto`を使ってください。\n"
"[config.preferred-install](06-config.md#preferred-install)も参照してくださ"
"い。\n"
"このフラグを渡すと、設定値より優先されます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137
msgid ""
"**--dry-run:** If you want to run through an installation without actually "
"installing a package, you can use `--dry-run`. This will simulate the "
"installation and show you what would happen."
msgstr ""
"**--dry-run:**\n"
"実際にはパッケージをインストールすることなくインストールの過程を進めたいとき"
"は`--dry-run`を使うことができます。\n"
"インストールを模擬して何が起こるのかを示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137
msgid "**--download-only:** Download only, do not install packages."
msgstr ""
"**--download-only:** ダウンロードするのみで、パッケージをインストールしませ"
"ん。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239
msgid ""
"**--dev:** Install packages listed in `require-dev` (this is the default "
"behavior)."
msgstr ""
"**--dev:** `require-dev`に挙げられたパッケージをインストールします（既定の挙"
"動です）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239
msgid ""
"**--no-dev:** Skip installing packages listed in `require-dev`. The "
"autoloader generation skips the `autoload-dev` rules. Also see "
"[COMPOSER_NO_DEV](#composer-no-dev)."
msgstr ""
"**--no-dev:** `require-dev`に挙げられたパッケージのインストールを飛ばしま"
"す。\n"
"自動読み込み器の生成で`autoload-dev`規則を読み飛ばします。\n"
"[COMPOSER_NO_DEV](#composer-no-dev)も参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:428
msgid "**--no-autoloader:** Skips autoloader generation."
msgstr "**--no-autoloader:** 自動読み込み器の生成を飛ばします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:428 ../doc/03-cli.md:963
msgid ""
"**--no-progress:** Removes the progress display that can mess with some "
"terminals or scripts which don't handle backspace characters."
msgstr ""
"**--no-progress:**\n"
"進捗表示を除きます。\n"
"バックスペース文字を扱わない端末やスクリプトではこの表示があることで散らかっ"
"てしまうからです。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137
msgid "**--audit:** Run an audit after installation is complete."
msgstr "**--audit:** インストールが完了した後に監査を走らせます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:963
msgid ""
"**--audit-format:** Audit output format. Must be \"table\", \"plain\", "
"\"json\", or \"summary\" (default)."
msgstr ""
"**--audit-format:** 監査の出力形式です。\n"
"\"table\"、\"plain\"、\"json\"、または\"summary\"（既定）のどれかでなければな"
"りません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:363 ../doc/03-cli.md:428
msgid ""
"**--optimize-autoloader (-o):** Convert PSR-0/4 autoloading to classmap to "
"get a faster autoloader. This is recommended especially for production, but "
"can take a bit of time to run so it is currently not done by default."
msgstr ""
"**--optimize-autoloader (-o):** PSR-0の自動読み込みをクラス対応表に変換して自"
"動読み込みを高速にします。\n"
"実運用では特にお勧めしますが、走らせるのに少し時間が掛かることがあるので、現"
"在は既定ではされません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:428
msgid ""
"**--classmap-authoritative (-a):** Autoload classes from the classmap only.  "
"Implicitly enables `--optimize-autoloader`."
msgstr ""
"**--classmap-authoritative (-a):** クラス対応表からクラスのみを自動読み込みし"
"ます。\n"
"暗黙裡に`--optimize-autoloader`を有効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:428
msgid "**--apcu-autoloader:** Use APCu to cache found/not-found classes."
msgstr "**--apcu-autoloader:** APCuを使って、クラスの有無をキャッシュします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:428
msgid ""
"**--apcu-autoloader-prefix:** Use a custom prefix for the APCu autoloader "
"cache.  Implicitly enables `--apcu-autoloader`."
msgstr ""
"**--apcu-autoloader-prefix:** APCu自動読み込み器のキャッシュ用に独自の接頭辞"
"を使います。\n"
"暗黙裡に`--apcu-autoloader`を有効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239 ../doc/03-cli.md:317
#: ../doc/03-cli.md:363 ../doc/03-cli.md:963
msgid ""
"**--ignore-platform-reqs:** ignore all platform requirements (`php`, `hhvm`, "
"`lib-*` and `ext-*`) and force the installation even if the local machine "
"does not fulfill these.  See also the [`platform`](06-config.md#platform) "
"config option."
msgstr ""
"**--ignore-platform-reqs:** 全てのプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、ローカルマシンがたとえこれらを満たしていなくてもインス"
"トールを強行します。\n"
"[`platform`](06-config.md#platform)設定オプションも参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:137 ../doc/03-cli.md:239
msgid ""
"**--ignore-platform-req:** ignore a specific platform requirement(`php`, "
"`hhvm`, `lib-*` and `ext-*`) and force the installation even if the local "
"machine does not fulfill it. Multiple requirements can be ignored via "
"wildcard. Appending a `+` makes it only ignore the upper-bound of the "
"requirements. For example, if a package requires `php: ^7`, then the option "
"`--ignore-platform-req=php+` would allow installing on PHP 8, but "
"installation on PHP 5.6 would still fail."
msgstr ""
"**--ignore-platform-req:** 特定のプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、ローカルマシンがたとえこれらを満たしていなくてもインス"
"トールを強行します。\n"
"ワイルドカードを使って複数の要件を無視できます。\n"
"`+`を後ろに付けることで要件の上限値だけを無視できます。\n"
"例えばパッケージが`php: ^7`を要求しているとき、オプション`--ignore-platform-"
"req=php+`はPHP8でのインストールを許しますが、PHP 5.6でのインストールについて"
"は失敗します。"

#. type: Title ##
#: ../doc/03-cli.md:138
#, no-wrap
msgid "update / u / upgrade"
msgstr "update / u / upgrade"

#. type: Plain text
#: ../doc/03-cli.md:144
msgid ""
"In order to get the latest versions of the dependencies and to update the "
"`composer.lock` file, you should use the `update` command. This command is "
"also aliased as `upgrade` as it does the same as `upgrade` does if you are "
"thinking of `apt-get` or similar package managers."
msgstr ""
"依存関係の最新版を取得して`composer.lock`ファイルを更新する上では`update`コマ"
"ンドを使うと良いでしょう。\n"
"このコマンドには`upgrade`の別名が付けられていますが、`apt-get`や類するパッ"
"ケージ管理を連想したときに`upgrade`がすることと同じだからです。"

#. type: Plain text
#: ../doc/03-cli.md:151
msgid ""
"This will resolve all dependencies of the project and write the exact "
"versions into `composer.lock`."
msgstr ""
"こうするとプロジェクトの全ての依存関係を解決し、厳密なバージョンを`composer."
"lock`に書き込みます。"

#. type: Plain text
#: ../doc/03-cli.md:153
msgid ""
"If you only want to update a few packages and not all, you can list them as "
"such:"
msgstr ""
"全てではなく、2、3のパッケージのみを更新したい場合は、以下のように列挙できま"
"す。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:154
#, no-wrap
msgid "php composer.phar update vendor/package vendor/package2\n"
msgstr "php composer.phar update vendor/package vendor/package2\n"

#. type: Plain text
#: ../doc/03-cli.md:159
msgid "You can also use wildcards to update a bunch of packages at once:"
msgstr "ワイルドカードを使って複数のパッケージを一挙に更新することもできます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:160
#, no-wrap
msgid "php composer.phar update \"vendor/*\"\n"
msgstr "php composer.phar update \"vendor/*\"\n"

#. type: Plain text
#: ../doc/03-cli.md:167
msgid ""
"If you want to downgrade a package to a specific version without changing "
"your composer.json you can use `--with` and provide a custom version "
"constraint:"
msgstr ""
"`composer.json`を変えることなくパッケージを指定のバージョンに巻き戻したいとき"
"は、`--with`を使うことができます。\n"
"このオプションには自分で選んだバージョン制約を与えます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:168
#, no-wrap
msgid "php composer.phar update --with vendor/package:2.0.1\n"
msgstr "php composer.phar update --with vendor/package:2.0.1\n"

#. type: Plain text
#: ../doc/03-cli.md:175
msgid ""
"Note that with the above all packages will be updated. If you only want to "
"update the package(s) for which you provide custom constraints using `--"
"with`, you can skip `--with` and instead use constraints with the partial "
"update syntax:"
msgstr ""
"なお上記では全てのパッケージが更新されます。\n"
"`--with`を使って自分で選んだ制約を与えたパッケージのみを更新するには、`--"
"with`を省き、代わりに部分的な更新構文を持つ制約を使ってください。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:176
#, no-wrap
msgid "php composer.phar update vendor/package:2.0.1 vendor/package2:3.0.*\n"
msgstr "php composer.phar update vendor/package:2.0.1 vendor/package2:3.0.*\n"

#. type: Plain text
#: ../doc/03-cli.md:183
#, no-wrap
msgid ""
"> **Note:** For packages also required in your composer.json the custom constraint\n"
"> must be a subset of the existing constraint. The composer.json constraints still\n"
"> apply and the composer.json is not modified by these temporary update constraints.\n"
msgstr ""
"> **補足：** composer.jsonでも要求されているパッケージについては、自分で選んだ制約は既存の制約の部分集合でなければなりません。\n"
"> composer.jsonでの制約は適用されたままであり、これらの一時的な制約の更新では変更されません。\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317 ../doc/03-cli.md:363
msgid "**--dry-run:** Simulate the command without actually doing anything."
msgstr ""
"**--dry-run:**\n"
"実際には何もせず、コマンドを模擬します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317 ../doc/03-cli.md:363
msgid ""
"**--no-install:** Does not run the install step after updating the composer."
"lock file."
msgstr ""
"**--no-install:**\n"
"composer.lockを更新した後のインストール過程を走らせません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317
msgid ""
"**--no-audit:** Does not run the audit steps after updating the composer."
"lock file. Also see [COMPOSER_NO_AUDIT](#composer-no-audit)."
msgstr ""
"**--no-audit:** composer.lockを更新した後の監査過程を走らせません。"
"[COMPOSER_NO_AUDIT](#composer-no-audit)も参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--lock:** Overwrites the lock file hash to suppress warning about the lock "
"file being out of date without updating package versions. Package metadata "
"like mirrors and URLs are updated if they changed."
msgstr ""
"**--lock:**\n"
"パッケージのバージョンを更新せず、固定ファイルが期限切れであることについての"
"警告を抑えるために固定ファイルを上書きします。\n"
"ミラーやURLといったパッケージのメタデータが変更されていれば更新します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--with:** Temporary version constraint to add, e.g. foo/bar:1.0.0 or foo/"
"bar=1.0.0"
msgstr ""
"**--with:** 一時的に追加するバージョン制約です。例えばfoo/bar:1.0.0やfoo/"
"bar=1.0.0です。"

# rootはルート権限ではないようです。
# 依存関係はグラフ構造をなすのですが、このときプロジェクトからの距離が1の、直接指定した依存関係のことを根幹と呼ぶようです。
#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--with-dependencies (-w):** Update also dependencies of packages in the "
"argument list, except those which are root requirements."
msgstr ""
"**--with-dependencies (-w):**\n"
"引数リスト中のパッケージの依存関係も更新します。\n"
"ただし根幹要件は除きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--with-all-dependencies (-W):** Update also dependencies of packages in "
"the argument list, including those which are root requirements."
msgstr ""
"**--with-all-dependencies (-W):**\n"
"引数リスト中のパッケージの依存関係を更新します。\n"
"根幹要件を含みます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317
msgid ""
"**--optimize-autoloader (-o):** Convert PSR-0/4 autoloading to classmap to "
"get a faster autoloader. This is recommended especially for production, but "
"can take a bit of time to run, so it is currently not done by default."
msgstr ""
"**--optimize-autoloader (-o):** PSR-0自動読み込みをクラスマップに変換して、よ"
"り高速な自動読み込み器を取得します。\n"
"特に実運用で推奨されますが、走らせるのに少し時間が掛かるため、現時点では既定"
"では有効になっていません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317
msgid ""
"**--prefer-stable:** Prefer stable versions of dependencies. Can also be set "
"via the COMPOSER_PREFER_STABLE=1 env var."
msgstr ""
"**--prefer-stable:** 依存関係の安定板を選ぶようにします。"
"COMPOSER_PREFER_STABLE=1環境変数を介しても設定できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239 ../doc/03-cli.md:317
msgid ""
"**--prefer-lowest:** Prefer lowest versions of dependencies. Useful for "
"testing minimal versions of requirements, generally used with `--prefer-"
"stable`. Can also be set via the COMPOSER_PREFER_LOWEST=1 env var."
msgstr ""
"**--prefer-lowest:** 依存関係の最も低いバージョンを選ぶようにします。最小バー"
"ジョン要件を試す際に便利で、一般的には`--prefer-stable`と共に使われます。"
"COMPOSER_PREFER_LOWERST=1環境変数を介しても設定できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--minimal-changes (-m):** During a partial update with `-w`/`-W`, only "
"perform absolutely necessary changes to transitive dependencies. Can also be "
"set via the COMPOSER_MINIMAL_CHANGES=1 env var."
msgstr ""
"**--minimal-changes (-m):**\n"
"`-w` / `-W`を使った部分的な更新の際に、遷移的な依存関係については絶対に必須の"
"変更のみを実施するようにします。\n"
"COMPOSER_MINIMAL_CHANGES=1環境変数を介しても設定できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--patch-only:** Only allow patch version updates for currently installed "
"dependencies."
msgstr ""
"**--patch-only:**\n"
"現在インストールされている依存関係について、パッチバージョンの更新のみ許可し"
"ます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--interactive:** Interactive interface with autocompletion to select the "
"packages to update."
msgstr ""
"**--interactive:** 自動補完付きの対話的なインターフェースで、更新するパッケー"
"ジを選択します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--root-reqs:** Restricts the update to your first degree dependencies."
msgstr "**--root-reqs:** 更新を一次依存関係に制限します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:239
msgid ""
"**--bump-after-update:** Runs `bump` after performing the update. Set to "
"`dev` or `no-dev` to only bump those dependencies."
msgstr ""
"**--bump-after-update:**\n"
"更新後に`bump`を走らせます。\n"
"`dev`や`no-dev`を設定すると、それぞれの依存関係のみのバージョンを上げます。"

#. type: Plain text
#: ../doc/03-cli.md:241
msgid ""
"Specifying one of the words `mirrors`, `lock`, or `nothing` as an argument "
"has the same effect as specifying the option `--lock`, for example `composer "
"update mirrors` is exactly the same as `composer update --lock`."
msgstr ""
"引数として単語`mirrors`、`lock`、`nothing`からどれか1つを指定すると、オプショ"
"ン`--lock`を指定することと同じ効果があります。\n"
"例えば`composer update mirrors`は`composer update --lock`と全く同じです。"

#. type: Title ##
#: ../doc/03-cli.md:242
#, no-wrap
msgid "require / r"
msgstr "require / r"

#. type: Plain text
#: ../doc/03-cli.md:246
msgid ""
"The `require` command adds new packages to the `composer.json` file from the "
"current directory. If no file exists one will be created on the fly."
msgstr ""
"`require`コマンドは`composer.json`ファイルに現在のディレクトリから新しいパッ"
"ケージを追加します。1つもファイルが存在しなければ必要に応じて作られます。"

#. type: Plain text
#: ../doc/03-cli.md:249
msgid ""
"If you do not specify a package, Composer will prompt you to search for a "
"package, and given results, provide a list of matches to require."
msgstr ""
"パッケージを指定しない場合、Composerはパッケージを探すためにプロンプトを出"
"し、要件にするものに照合する一覧を提供します。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:250
#, no-wrap
msgid "php composer.phar require\n"
msgstr "php composer.phar require\n"

#. type: Plain text
#: ../doc/03-cli.md:256
msgid ""
"After adding/changing the requirements, the modified requirements will be "
"installed or updated."
msgstr ""
"要件を加えたり変えたりした後に、変更された要件がインストールされたり更新され"
"たりします。"

#. type: Plain text
#: ../doc/03-cli.md:259
msgid ""
"If you do not want to choose requirements interactively, you can pass them "
"to the command."
msgstr "対話的に要件を選びたくなければコマンドに渡すこともできます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:260
#, no-wrap
msgid "php composer.phar require \"vendor/package:2.*\" vendor/package2:dev-master\n"
msgstr "php composer.phar require \"vendor/package:2.*\" vendor/package2:dev-master\n"

#. type: Plain text
#: ../doc/03-cli.md:266
msgid ""
"If you do not specify a version constraint, composer will choose a suitable "
"one based on the available package versions."
msgstr ""
"バージョン制約を指定しなければ、composerは利用できるパッケージのバージョンに"
"基づいて相応しいものを選びます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:267
#, no-wrap
msgid "php composer.phar require vendor/package vendor/package2\n"
msgstr "php composer.phar require vendor/package vendor/package2\n"

#. type: Plain text
#: ../doc/03-cli.md:272
msgid ""
"If you do not want to install the new dependencies immediately you can call "
"it with --no-update"
msgstr ""
"すぐには新しい依存関係をインストールしたくない場合は--no-update付きで呼べま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317
msgid "**--dev:** Add packages to `require-dev`."
msgstr "**--dev:** パッケージを`require-dev`に追加します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317 ../doc/03-cli.md:363
msgid ""
"**--no-update:** Disables the automatic update of the dependencies (implies "
"--no-install)."
msgstr ""
"**--no-update:** 依存関係の自動的な更新を無効にします（--no-installを暗示しま"
"す）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317
msgid ""
"**--update-no-dev:** Run the dependency update with the `--no-dev` option. "
"Also see [COMPOSER_NO_DEV](#composer-no-dev)."
msgstr ""
"**--update-no-dev:** `--no-dev`オプションと共に依存関係の更新を走らせます。"
"[COMPOSER_NO_DEV](#composer-no-dev)も参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317
msgid ""
"**--update-with-dependencies (-w):** Also update dependencies of the newly "
"required packages, except those that are root requirements."
msgstr ""
"**--update-with-dependencies (-w):**\n"
"新しく要求するパッケージの依存関係も更新します。\n"
"ただし根幹要件は除きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317
msgid ""
"**--update-with-all-dependencies (-W):** Also update dependencies of the "
"newly required packages, including those that are root requirements."
msgstr ""
"**--update-with-all-dependencies (-W):**\n"
"新しく要求するパッケージの依存関係も更新します。\n"
"根幹要件も含まれます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317 ../doc/03-cli.md:363 ../doc/03-cli.md:616
#: ../doc/03-cli.md:963
msgid ""
"**--ignore-platform-req:** ignore a specific platform requirement(`php`, "
"`hhvm`, `lib-*` and `ext-*`) and force the installation even if the local "
"machine does not fulfill it. Multiple requirements can be ignored via "
"wildcard."
msgstr ""
"**--ignore-platform-req:**\n"
"特定のプラットフォーム要件（`php`、`hhvm`、`lib-*`、`ext-*`）を無視して、たと"
"えローカルマシンが満たしていなかったとしても、インストールを強行します。\n"
"ワイルドカードを使って複数の要件を無視できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317 ../doc/03-cli.md:363
msgid ""
"**--minimal-changes (-m):** During an update with `-w`/`-W`, only perform "
"absolutely necessary changes to transitive dependencies. Can also be set via "
"the COMPOSER_MINIMAL_CHANGES=1 env var."
msgstr ""
"**--minimal-changes (-m):**\n"
"`-w` / `-W`での更新の際に、遷移的な依存関係に関して絶対に必須の変更のみを実施"
"するようにします。\n"
"COMPOSER_MINIMAL_CHANGES=1環境変数を介して設定することもできます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:317
msgid "**--sort-packages:** Keep packages sorted in `composer.json`."
msgstr ""
"**--sort-packages:**\n"
"パッケージを`package.json`で整列した状態にします。"

#. type: Title ##
#: ../doc/03-cli.md:318
#, no-wrap
msgid "remove / rm / uninstall"
msgstr "remove / rm / uninstall"

#. type: Plain text
#: ../doc/03-cli.md:322
msgid ""
"The `remove` command removes packages from the `composer.json` file from the "
"current directory."
msgstr ""
"`remove`コマンドは現在のディレクトリにある`composer.json`ファイルからパッケー"
"ジを削除します。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:323
#, no-wrap
msgid "php composer.phar remove vendor/package vendor/package2\n"
msgstr "php composer.phar remove vendor/package vendor/package2\n"

#. type: Plain text
#: ../doc/03-cli.md:329
msgid ""
"After removing the requirements, the modified requirements will be "
"uninstalled."
msgstr "要件を削除した後は変更対象の要件がアンインストールされます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363
msgid ""
"**--unused** Remove unused packages that are not a direct or indirect "
"dependency (anymore)"
msgstr ""
"**--unused**（もう）直接ないし間接の依存関係ではない、使われていないパッケー"
"ジを削除します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363
msgid "**--dev:** Remove packages from `require-dev`."
msgstr "**--dev:** `require-dev`からパッケージを削除します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363 ../doc/03-cli.md:963
msgid ""
"**--no-audit:** Does not run the audit steps after installation is complete. "
"Also see [COMPOSER_NO_AUDIT](#composer-no-audit)."
msgstr ""
"**--no-audit:**\n"
"インストールが完了した後の監査過程を走らせないようにします。\n"
"[COMPOSER_NO_AUDIT](#composer-no-audit)も参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363
msgid ""
"**--update-no-dev:** Run the dependency update with the --no-dev option. "
"Also see [COMPOSER_NO_DEV](#composer-no-dev)."
msgstr ""
"**--update-no-dev:** --no-devオプションで依存関係の更新を走らせます。"
"[COMPOSER_NO_DEV](#composer-no-dev)も参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363
msgid ""
"**--update-with-dependencies (-w):** Also update dependencies of the removed "
"packages.  (Deprecated, is now default behavior)"
msgstr ""
"**--update-with-dependencies (-w):**\n"
"削除されたパッケージの依存関係も更新します（時代遅れのオプションです。現在は"
"既定の挙動になっています）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:363
msgid ""
"**--update-with-all-dependencies (-W):** Allows all inherited dependencies "
"to be updated, including those that are root requirements."
msgstr ""
"**--update-with-all-dependencies (-W):**\n"
"全ての継承する依存関係が更新されるようにします。\n"
"根幹依存関係のものも含みます。"

#. type: Title ##
#: ../doc/03-cli.md:364
#, no-wrap
msgid "bump"
msgstr "bump"

#. type: Plain text
#: ../doc/03-cli.md:371
msgid ""
"The `bump` command increases the lower limit of your composer.json "
"requirements to the currently installed versions. This helps to ensure your "
"dependencies do not accidentally get downgraded due to some other conflict, "
"and can slightly improve dependency resolution performance as it limits the "
"amount of package versions Composer has to look at."
msgstr ""
"`bump`コマンドはcomposer.jsonの要件の下限を現在インストールされているバージョ"
"ンに引き上げます。これにより依存関係が何らかの競合によりうっかりダウングレー"
"ドされてしまわないようになったり、Composerが探すパッケージのバージョンの数が"
"抑えられるため依存関係解決を僅かに向上させられます。"

#. type: Plain text
#: ../doc/03-cli.md:376
msgid ""
"Running this blindly on libraries is **NOT** recommended as it will narrow "
"down your allowed dependencies, which may cause dependency hell for your "
"users.  Running it with `--dev-only` on libraries may be fine however as dev "
"requirements are local to the library and do not affect consumers of the "
"package."
msgstr ""
"許される依存関係を狭めてしまうため、ライブラリでこれを無闇に走らせるのは推奨"
"**されません**。\n"
"依存関係を狭めることは利用者に依存関係地獄を招きかねません。\n"
"しかしライブラリで`--dev-only`を走らせるのは、開発用要件がライブラリに対して"
"局所的で、パッケージの消費者には影響しないため問題ないでしょう。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:382
msgid "**--dev-only:** Only bump requirements in \"require-dev\"."
msgstr "**--dev-only:** \"require-dev\" 中の要件のみbumpします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:382
msgid "**--no-dev-only:** Only bump requirements in \"require\"."
msgstr "**--no-dev-only:** \"require\" にある要件のみbumpします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:382
msgid ""
"**--dry-run:** Outputs the packages to bump, but will not execute anything."
msgstr "**--dry-run:** bumpするパッケージを出力しますが、何も実行しません。"

#. type: Title ##
#: ../doc/03-cli.md:383
#, no-wrap
msgid "reinstall"
msgstr "reinstall"

#. type: Plain text
#: ../doc/03-cli.md:389
msgid ""
"The `reinstall` command looks up installed packages by name, uninstalls them "
"and reinstalls them. This lets you do a clean install of a package if you "
"messed with its files, or if you wish to change the installation type using "
"--prefer-install."
msgstr ""
"`reinstall`コマンドは名前からインストールされているパッケージを見付けだし、ア"
"ンインストールと再インストールをします。\n"
"こうすることでファイルを散らかしたり--prefer-installを使ってインストールの種"
"類を変えたいと思ったりしたときにクリーンインストールできます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:390
#, no-wrap
msgid "php composer.phar reinstall acme/foo acme/bar\n"
msgstr "php composer.phar reinstall acme/foo acme/bar\n"

#. type: Plain text
#: ../doc/03-cli.md:396
msgid ""
"You can specify more than one package name to reinstall, or use a wildcard "
"to select several packages at once:"
msgstr ""
"再インストールするパッケージ名を1つ以上指定できます。\n"
"またはワイルドカードを使って複数パッケージの一括選択もできます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:397
#, no-wrap
msgid "php composer.phar reinstall \"acme/*\"\n"
msgstr "php composer.phar reinstall \"acme/*\"\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:428
msgid ""
"**--ignore-platform-reqs:** ignore all platform requirements. This only has "
"an effect in the context of the autoloader generation for the reinstall "
"command."
msgstr ""
"**--ignore-platform-reqs:** 全てのプラットフォーム要件を無視します。\n"
"再インストールコマンド用の自動読み込み器の生成のときにのみ効果があります。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:428
msgid ""
"**--ignore-platform-req:** ignore a specific platform requirement. This only "
"has an effect in the context of the autoloader generation for the reinstall "
"command.  Multiple requirements can be ignored via wildcard."
msgstr ""
"**--ignore-platform-req:** 特定のプラットフォーム要件を無視します。\n"
"再インストールコマンド用の自動読み込み器の生成のときにのみ効果があります。\n"
"複数の要件をワイルドカードで無視できます。"

#. type: Title ##
#: ../doc/03-cli.md:429
#, no-wrap
msgid "check-platform-reqs"
msgstr "check-platform-reqs"

#. type: Plain text
#: ../doc/03-cli.md:435
msgid ""
"The check-platform-reqs command checks that your PHP and extensions versions "
"match the platform requirements of the installed packages. This can be used "
"to verify that a production server has all the extensions needed to run a "
"project after installing it for example."
msgstr ""
"check-platform-reqsコマンドはPHPと拡張のバージョンがインストールされている"
"パッケージのプラットフォーム要件を満たしているかを確認します。\n"
"例えば実運用サーバーでインストール後に、プロジェクトを走らせるのに必要な全て"
"の拡張があることを検証したいときに使えます。"

#. type: Plain text
#: ../doc/03-cli.md:439
msgid ""
"Unlike update/install, this command will ignore config.platform settings and "
"check the real platform packages so you can be certain you have the required "
"platform dependencies."
msgstr ""
"updateやinstallとは異なり、このコマンドはconfig.platform設定を無視し、実際の"
"プラットフォームパッケージを検査します。\n"
"そのため要求されているプラットフォーム依存関係があることを確かめられます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:445
msgid ""
"**--lock:** Checks requirements only from the lock file, not from installed "
"packages."
msgstr ""
"**--lock:**\n"
"インストールされたパッケージからではなく、固定ファイルのみから要件を検査しま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:445
msgid "**--no-dev:** Disables checking of require-dev packages requirements."
msgstr "**--no-dev:** require-devのパッケージ要件の検査を無効にします。"

# textとjsonはキーワードのようなので訳しません。
#. type: Bullet: '* '
#: ../doc/03-cli.md:445
msgid "**--format (-f):** Format of the output: text (default) or json"
msgstr "**--format (-f):** 出力の書式です。text（既定）またはjsonです。"

#. type: Title ##
#: ../doc/03-cli.md:446
#, no-wrap
msgid "global"
msgstr "global"

#. type: Plain text
#: ../doc/03-cli.md:451
msgid ""
"The global command allows you to run other commands like `install`, "
"`remove`, `require` or `update` as if you were running them from the "
"[COMPOSER_HOME](#composer-home)  directory."
msgstr ""
"globalコマンドは`install`、`remove`、`require`、`update`のようなコマンドをあ"
"たかも[COMPOSER_HOME](#composer-home)ディレクトリから走らせているように実行で"
"きます。"

#. type: Plain text
#: ../doc/03-cli.md:454
msgid ""
"This is merely a helper to manage a project stored in a central location "
"that can hold CLI tools or Composer plugins that you want to have available "
"everywhere."
msgstr ""
"中心的な場所に保管されたプロジェクトを管理するためのただの補助であり、CLIツー"
"ルやComposerプラグインのような、どこでも使えるようにしたいものを置いておけま"
"す。"

#. type: Plain text
#: ../doc/03-cli.md:456
msgid "This can be used to install CLI utilities globally. Here is an example:"
msgstr ""
"大域的にCLIユーティリティをインストールするのに使えます。\n"
"以下は一例です。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:457
#, no-wrap
msgid "php composer.phar global require friendsofphp/php-cs-fixer\n"
msgstr "php composer.phar global require friendsofphp/php-cs-fixer\n"

#. type: Plain text
#: ../doc/03-cli.md:464
msgid ""
"Now the `php-cs-fixer` binary is available globally. Make sure your global "
"[vendor binaries](articles/vendor-binaries.md) directory is in your `$PATH` "
"environment variable, you can get its location with the following command :"
msgstr ""
"これで`php-cs-fixer`バイナリが大域的に使えるようになりました。大域的な[ベン"
"ダーバイナリ](articles/vendor-binaries.md)ディレクトリが`$PATH`環境変数の中に"
"あるようにしてください。インストールした場所は以下のコマンドで得られます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:465
#, no-wrap
msgid "php composer.phar global config bin-dir --absolute\n"
msgstr "php composer.phar global config bin-dir --absolute\n"

#. type: Plain text
#: ../doc/03-cli.md:470
msgid "If you wish to update the binary later on you can run a global update:"
msgstr ""
"後になってバイナリを更新したいと思ったら、global updateを走らせられます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:471
#, no-wrap
msgid "php composer.phar global update\n"
msgstr "php composer.phar global update\n"

#. type: Title ##
#: ../doc/03-cli.md:475
#, no-wrap
msgid "search"
msgstr "search"

#. type: Plain text
#: ../doc/03-cli.md:480
msgid ""
"The search command allows you to search through the current project's "
"package repositories. Usually this will be packagist. You pass it the terms "
"you want to search for."
msgstr ""
"searchコマンドを使うと、現在のプロジェクトのパッケージリポジトリ全体を検索で"
"きます。\n"
"大抵はpackagistです。\n"
"検索したい用語を渡せます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:481
#, no-wrap
msgid "php composer.phar search monolog\n"
msgstr "php composer.phar search monolog\n"

#. type: Plain text
#: ../doc/03-cli.md:486
msgid ""
"You can also search for more than one term by passing multiple arguments."
msgstr "複数の引数を渡すことで1つ以上の用語を探すこともできます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:498
msgid "**--only-name (-N):** Search only in package names."
msgstr "**--only-name (-N):** パッケージの名前のみから検索します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:498
msgid ""
"**--only-vendor (-O):** Search only for vendor / organization names, returns "
"only \"vendor\" as a result."
msgstr ""
"**--only-vendor (-O):**\n"
"ベンダー・組織名のみから検索します。\n"
"結果として「ベンダー」のみが返ります。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:498
msgid "**--type (-t):** Search for a specific package type."
msgstr "**--type (-t):** 特定のパッケージの種類から探します。"

# textとjsonはキーワードのようなので訳しません。
#. type: Bullet: '* '
#: ../doc/03-cli.md:498
msgid ""
"**--format (-f):** Lets you pick between text (default) or json output "
"format.  Note that in the json, only the name and description keys are "
"guaranteed to be present. The rest (`url`, `repository`, `downloads` and "
"`favers`) are available for Packagist.org search results and other "
"repositories may return more or less data."
msgstr ""
"**--format (-f):**\n"
"text（既定）かjson出力かのどちらかを選べます。\n"
"jsonではname及びdescriptionキーのみが存在することが保証されています。\n"
"残り（`url`、`repository`、`downloads`、`favers`）はPackagist.orgの検索結果で"
"得られるものであって、その他のリポジトリが返す情報はそれより多かったり少な"
"かったりします。"

#. type: Title ##
#: ../doc/03-cli.md:499
#, no-wrap
msgid "show / info"
msgstr "show / info"

#. type: Plain text
#: ../doc/03-cli.md:502
msgid "To list all of the available packages, you can use the `show` command."
msgstr "使えるパッケージの全てを一覧にするには`show`コマンドが使えます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:503
#, no-wrap
msgid "php composer.phar show\n"
msgstr "php composer.phar show\n"

#. type: Plain text
#: ../doc/03-cli.md:508
msgid "To filter the list you can pass a package mask using wildcards."
msgstr "一覧を絞り込むには、ワイルドカードを使ってパッケージマスクを渡せます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:509
#, no-wrap
msgid "php composer.phar show \"monolog/*\"\n"
msgstr "php composer.phar show \"monolog/*\"\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:512
#, no-wrap
msgid "monolog/monolog 2.4.0 Sends your logs to files, sockets, inboxes, databases and various web services\n"
msgstr "monolog/monolog 2.4.0 Sends your logs to files, sockets, inboxes, databases and various web services\n"

#. type: Plain text
#: ../doc/03-cli.md:518
msgid ""
"If you want to see the details of a certain package, you can pass the "
"package name."
msgstr "何かのパッケージの詳細を見たければ、パッケージ名を渡すことができます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:519
#, no-wrap
msgid "php composer.phar show monolog/monolog\n"
msgstr "php composer.phar show monolog/monolog\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:522
#, no-wrap
msgid ""
"name     : monolog/monolog\n"
"descrip. : Sends your logs to files, sockets, inboxes, databases and various web services\n"
"keywords : log, logging, psr-3\n"
"versions : * 1.27.1\n"
"type     : library\n"
"license  : MIT License (MIT) (OSI approved) https://spdx.org/licenses/MIT.html#licenseText\n"
"homepage : http://github.com/Seldaek/monolog\n"
"source   : [git] https://github.com/Seldaek/monolog.git 904713c5929655dc9b97288b69cfeedad610c9a1\n"
"dist     : [zip] https://api.github.com/repos/Seldaek/monolog/zipball/904713c5929655dc9b97288b69cfeedad610c9a1 904713c5929655dc9b97288b69cfeedad610c9a1\n"
"names    : monolog/monolog, psr/log-implementation\n"
"\n"
"support\n"
"issues : https://github.com/Seldaek/monolog/issues\n"
"source : https://github.com/Seldaek/monolog/tree/1.27.1\n"
"\n"
"autoload\n"
"psr-4\n"
"Monolog\\ => src/Monolog\n"
"\n"
"requires\n"
"php >=5.3.0\n"
"psr/log ~1.0\n"
msgstr ""
"name     : monolog/monolog\n"
"descrip. : Sends your logs to files, sockets, inboxes, databases and various web services\n"
"keywords : log, logging, psr-3\n"
"versions : * 1.27.1\n"
"type     : library\n"
"license  : MIT License (MIT) (OSI approved) https://spdx.org/licenses/MIT.html#licenseText\n"
"homepage : http://github.com/Seldaek/monolog\n"
"source   : [git] https://github.com/Seldaek/monolog.git 904713c5929655dc9b97288b69cfeedad610c9a1\n"
"dist     : [zip] https://api.github.com/repos/Seldaek/monolog/zipball/904713c5929655dc9b97288b69cfeedad610c9a1 904713c5929655dc9b97288b69cfeedad610c9a1\n"
"names    : monolog/monolog, psr/log-implementation\n"
"\n"
"support\n"
"issues : https://github.com/Seldaek/monolog/issues\n"
"source : https://github.com/Seldaek/monolog/tree/1.27.1\n"
"\n"
"autoload\n"
"psr-4\n"
"Monolog\\ => src/Monolog\n"
"\n"
"requires\n"
"php >=5.3.0\n"
"psr/log ~1.0\n"

#. type: Plain text
#: ../doc/03-cli.md:549
msgid ""
"You can even pass the package version, which will tell you the details of "
"that specific version."
msgstr ""
"パッケージのバージョンを渡すこともできます。\n"
"こうすると特定のバージョンでの詳細が分かります。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:550
#, no-wrap
msgid "php composer.phar show monolog/monolog 1.0.2\n"
msgstr "php composer.phar show monolog/monolog 1.0.2\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--all:** List all packages available in all your repositories."
msgstr ""
"**--all:**\n"
"リポジトリで使える全てのパッケージを一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--installed (-i):** List the packages that are installed (this is enabled "
"by default, and deprecated)."
msgstr ""
"**--installed (-i):** インストールされているパッケージを一覧にします（既定で"
"有効になっており、時代遅れのオプションです）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--locked:** List the locked packages from composer.lock."
msgstr "**--locked:** composer.lockから固定されたパッケージを一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--platform (-p):** List only platform packages (php & extensions)."
msgstr ""
"**--platform (-p):** プラットフォームパッケージ（phpと拡張）のみを一覧にしま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--available (-a):** List available packages only."
msgstr "**--available (-a):** 利用できるパッケージのみにします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--self (-s):** List the root package info."
msgstr ""
"**--self (-s):**\n"
"根幹パッケージ情報を一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--name-only (-N):** List package names only."
msgstr "**--name-only (-N):** パッケージ名のみを一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--path (-P):** List package paths."
msgstr "**--path (-P):** パッケージのパスを一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--tree (-t):** List your dependencies as a tree. If you pass a package "
"name it will show the dependency tree for that package."
msgstr ""
"**--tree (-t):** 依存関係を木構造で一覧にします。パッケージ名を渡した場合はそ"
"のパッケージの依存関係を示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--latest (-l):** List all installed packages including their latest "
"version."
msgstr ""
"**--latest (-l):** インストールされている全てのパッケージをその最新バージョン"
"と共に一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--outdated (-o):** Implies --latest, but this lists *only* packages that "
"have a newer version available."
msgstr ""
"**--outdated (-o):**\n"
"--latestを暗示しますが、新しいバージョンが手に入るパッケージ*のみ*を一覧にし"
"ます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--ignore:** Ignore specified package(s). Can contain wildcards (`*`). Use "
"it with the --outdated option if you don't want to be informed about new "
"versions of some packages"
msgstr ""
"**--ignore:**\n"
"ワイルドカード (`*`) を含められます。\n"
"指定されたパッケージを無視します。\n"
"パッケージの新しいバージョンについて通知を受けたくなければ--outdatedオプショ"
"ンと一緒に使ってください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid "**--no-dev:** Filters dev dependencies from the package list."
msgstr "**--no-dev:** パッケージ一覧から開発用の依存関係を除外します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--major-only (-M):** Use with --latest or --outdated. Only shows packages "
"that have major SemVer-compatible updates."
msgstr ""
"**--major-only (-M):**\n"
"--latestまたは--outdatedと一緒に使ってください。\n"
"メジャーなセマンティックバージョニング互換の更新があるパッケージのみ示されま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--minor-only (-m):** Use with --latest or --outdated. Only shows packages "
"that have minor SemVer-compatible updates."
msgstr ""
"**--minor-only (-m):**\n"
"--latestまたは--outdatedと一緒に使ってください。\n"
"マイナーなセマンティックバージョニング互換の更新があるパッケージのみ示されま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--patch-only:** Use with --latest or --outdated. Only shows packages that "
"have patch-level SemVer-compatible updates."
msgstr ""
"**--patch-only:**\n"
"--latestまたは--outdatedと一緒に使ってください。\n"
"パッチ水準のセマンティックバージョニング互換の更新があるパッケージのみが示さ"
"れます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--sort-by-age (-A):** Displays the installed version's age, and sorts "
"packages oldest first. Use with the --latest or --outdated option."
msgstr ""
"**--sort-by-age (-A):**\n"
"インストールされたバージョンの経過時間を表示し、古い順にパッケージを整列しま"
"す。\n"
"--latestないし--outdatedオプションと一緒に使ってください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583 ../doc/03-cli.md:616
msgid ""
"**--direct (-D):** Restricts the list of packages to your direct "
"dependencies."
msgstr "**--direct (-D):** パッケージの一覧を直接的な依存関係に限定します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--strict:** Return a non-zero exit code when there are outdated packages."
msgstr ""
"**--strict:** 時代遅れのパッケージがあるときは非ゼロの終了コードを返します。"

# textとjsonはキーワードのようなので訳しません。
#. type: Bullet: '* '
#: ../doc/03-cli.md:583 ../doc/03-cli.md:616 ../doc/03-cli.md:656
msgid ""
"**--format (-f):** Lets you pick between text (default) or json output "
"format."
msgstr "**--format (-f):** 出力形式としてtext（既定）ないしjsonを選びます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--ignore-platform-reqs:** ignore all platform requirements (`php`, `hhvm`, "
"`lib-*` and `ext-*`) and force the installation even if the local machine "
"does not fulfill these. Use with the --outdated option."
msgstr ""
"**--ignore-platform-reqs:** 全てのプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、たとえローカルマシンがこれらの要件を満たしていなくて"
"も、インストールを強行します。--outdatedオプションと一緒に使ってください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:583
msgid ""
"**--ignore-platform-req:** ignore a specific platform requirement(`php`, "
"`hhvm`, `lib-*` and `ext-*`) and force the installation even if the local "
"machine does not fulfill it. Multiple requirements can be ignored via "
"wildcard. Use with the --outdated option."
msgstr ""
"**--ignore-platform-req:** 特定のプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、たとえローカルマシンがその要件を満たしていなくても、イ"
"ンストールを強行します。\n"
"ワイルドカードを介して複数の要件を無視できます。\n"
"--outdatedオプションと一緒に使ってください。"

#. type: Title ##
#: ../doc/03-cli.md:584
#, no-wrap
msgid "outdated"
msgstr "outdated"

#. type: Plain text
#: ../doc/03-cli.md:589
msgid ""
"The `outdated` command shows a list of installed packages that have updates "
"available, including their current and latest versions. This is basically an "
"alias for `composer show -lo`."
msgstr ""
"`outdated`コマンドは、更新が利用できるインストール済みパッケージの一覧を、現"
"在のバージョンと最新のバージョンを含めて示します。\n"
"基本的に`composer show -lo`の別名になっています。"

#. type: Plain text
#: ../doc/03-cli.md:591
msgid "The color coding is as such:"
msgstr "色彩コードは以下の通り。"

#. type: Bullet: '- '
#: ../doc/03-cli.md:596
msgid "**green (=)**: Dependency is in the latest version and is up to date."
msgstr "**green (=)**: 依存関係は最新バージョンであり、最新式です。"

#. type: Bullet: '- '
#: ../doc/03-cli.md:596
msgid ""
"**yellow (`~`)**: Dependency has a new version available that includes "
"backwards compatibility breaks according to semver, so upgrade when you can "
"but it may involve work."
msgstr ""
"**yellow (`~`)**:\n"
"依存関係に新しいバージョンが利用できるものがありますが、セマンティックバー"
"ジョニングに於ける後方互換性の破壊が含まれます。\n"
"そのため更新できそうならしても良いですが、作業が発生する可能性があります。"

#. type: Bullet: '- '
#: ../doc/03-cli.md:596
msgid ""
"**red (!)**: Dependency has a new version that is semver-compatible and you "
"should upgrade it."
msgstr ""
"**red (!)**:\n"
"依存関係にセマンティックバージョニング上互換性のある新しいバージョンがあり、"
"更新するべきです。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--all (-a):** Show all packages, not just outdated (alias for `composer "
"show --latest`)."
msgstr ""
"**--all (-a):** 時代遅れのものだけでなく、全てのパッケージを示します"
"（`composer show --latest`の別名です）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid "**--strict:** Returns non-zero exit code if any package is outdated."
msgstr ""
"**--strict:**\n"
"1つもパッケージが時代遅れでなければ、非ゼロの終了コードを返します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--ignore:** Ignore specified package(s). Can contain wildcards (`*`). Use "
"it if you don't want to be informed about new versions of some packages"
msgstr ""
"**--ignore:**\n"
"指定されたパッケージを無視します。\n"
"ワイルドカード (`*`) を含められます。\n"
"何かしらのパッケージの新しいバージョンについて知らされたくないときに使ってく"
"ださい。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--major-only (-M):** Only shows packages that have major SemVer-compatible "
"updates."
msgstr ""
"**--major-only (-M):** メジャーなセマンティックバージョニング上の互換性を伴う"
"更新のみ示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--minor-only (-m):** Only shows packages that have minor SemVer-compatible "
"updates."
msgstr ""
"**--minor-only (-m):** マイナーなセマンティックバージョニング上の互換性を伴う"
"更新のみ示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--patch-only (-p):** Only shows packages that have patch-level SemVer-"
"compatible updates."
msgstr ""
"**--patch-only (-p):**\n"
"パッチ水準のセマンティックバージョニング上の互換性を伴う更新のみ示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--sort-by-age (-A):** Displays the installed version's age, and sorts "
"packages oldest first."
msgstr ""
"**--sort-by-age (-A):**\n"
"インストールされたバージョンの経過時間を表示し、古い順にパッケージを整列しま"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid "**--no-dev:** Do not show outdated dev dependencies."
msgstr "**--no-dev:** 時代遅れの開発用依存関係を表示しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--locked:** Shows updates for packages from the lock file, regardless of "
"what is currently in vendor dir."
msgstr ""
"**--locked:**\n"
"固定ファイルを元にしたパッケージの更新を示します。\n"
"現在のベンダーディレクトリの中身は措かれます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:616
msgid ""
"**--ignore-platform-reqs:** ignore all platform requirements (`php`, `hhvm`, "
"`lib-*` and `ext-*`) and force the installation even if the local machine "
"does not fulfill these."
msgstr ""
"**--ignore-platform-reqs:** 全てのプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、たとえローカルマシンがこれらの要件を満たしていなくて"
"も、インストールを強行します。"

#. type: Title ##
#: ../doc/03-cli.md:617
#, no-wrap
msgid "browse / home"
msgstr "browse / home"

#. type: Plain text
#: ../doc/03-cli.md:621
msgid ""
"The `browse` (aliased to `home`) opens a package's repository URL or "
"homepage in your browser."
msgstr ""
"`browse`（別名`home`）はパッケージのリポジトリURLまたはホームページをブラウザ"
"で開きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:626
msgid "**--homepage (-H):** Open the homepage instead of the repository URL."
msgstr "**--homepage (-H):** リポジトリではなくホームページのURLを開きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:626
msgid "**--show (-s):** Only show the homepage or repository URL."
msgstr ""
"**--show (-s):** ホームページないしリポジトリのURLを表示するだけにします。"

#. type: Title ##
#: ../doc/03-cli.md:627
#, no-wrap
msgid "suggests"
msgstr "suggests"

#. type: Plain text
#: ../doc/03-cli.md:632
msgid ""
"Lists all packages suggested by the currently installed set of packages. You "
"can optionally pass one or multiple package names in the format of `vendor/"
"package` to limit output to suggestions made by those packages only."
msgstr ""
"現在インストールされているパッケージの集合から提案される全てのパッケージを一"
"覧にします。\n"
"おまけとして複数のパッケージ名を`vendor/package`の形式で渡し、これらのパッ"
"ケージのみについて提案を出力するように制限できます。"

#. type: Plain text
#: ../doc/03-cli.md:635
msgid ""
"Use the `--by-package` (default) or `--by-suggestion` flags to group the "
"output by the package offering the suggestions or the suggested packages "
"respectively."
msgstr ""
"`--by-package`（既定）ないし`--by-suggestion`フラグを使って出力をグループ分け"
"できます。それぞれ提案を行うパッケージによるグループ分けと提案されたパッケー"
"ジによるグループ分けになっています。"

#. type: Plain text
#: ../doc/03-cli.md:637
msgid "If you only want a list of suggested package names, use `--list`."
msgstr "提案されたパッケージ名の一覧だけが欲しければ`--list`を使ってください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:646
msgid "**--by-package:** Groups output by suggesting package (default)."
msgstr ""
"**--by-package:** 提案を行ったパッケージによって出力をグループ分けします（既"
"定）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:646
msgid "**--by-suggestion:** Groups output by suggested package."
msgstr ""
"**--by-suggestion:** 提案されたパッケージによって出力をグループ分けします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:646
msgid ""
"**--all:** Show suggestions from all dependencies, including transitive ones "
"(by default only direct dependencies' suggestions are shown)."
msgstr ""
"**--all:** 推移的なものを含む全ての依存関係から提案を示します（既定では直接的"
"な依存関係の提案のみが示されます）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:646
msgid "**--list:** Show only list of suggested package names."
msgstr "**--list:** 提案されたパッケージ名のみを一覧として示します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:646
msgid "**--no-dev:** Excludes suggestions from `require-dev` packages."
msgstr "**--no-dev:** `require-dev`パッケージからの提案を除外します。"

#. type: Title ##
#: ../doc/03-cli.md:647
#, no-wrap
msgid "fund"
msgstr "fund"

#. type: Plain text
#: ../doc/03-cli.md:652
msgid ""
"Discover how to help fund the maintenance of your dependencies. This lists "
"all funding links from the installed dependencies. Use `--format=json` to "
"get machine-readable output."
msgstr ""
"依存関係の維持管理に投資して支援する方法が分かります。\n"
"このコマンドはインストールされている依存関係から全ての投資のリンクを一覧にし"
"ます。\n"
"機械で読むことのできる出力を得るには`--format=json`を使ってください。"

#. type: Title ##
#: ../doc/03-cli.md:657
#, no-wrap
msgid "depends / why"
msgstr "depends / why"

#. type: Plain text
#: ../doc/03-cli.md:662
msgid ""
"The `depends` command tells you which other packages depend on a certain "
"package. As with installation `require-dev` relationships are only "
"considered for the root package."
msgstr ""
"`depends`コマンドは特定のパッケージに依存する他のパッケージを教えてくれま"
"す。\n"
"インストールの際、`require-dev`の関係は根幹パッケージのみ考慮されます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:663
#, no-wrap
msgid "php composer.phar depends doctrine/lexer\n"
msgstr "php composer.phar depends doctrine/lexer\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:666
#, no-wrap
msgid ""
"doctrine/annotations  1.13.3 requires doctrine/lexer (1.*)\n"
"doctrine/common       2.13.3 requires doctrine/lexer (^1.0)\n"
msgstr ""
"doctrine/annotations  1.13.3 requires doctrine/lexer (1.*)\n"
"doctrine/common       2.13.3 requires doctrine/lexer (^1.0)\n"

#. type: Plain text
#: ../doc/03-cli.md:673
msgid ""
"You can optionally specify a version constraint after the package to limit "
"the search."
msgstr ""
"おまけとしてパッケージの後にバージョン制約を指定することで検索結果を絞り込む"
"ことができます。"

#. type: Plain text
#: ../doc/03-cli.md:676
msgid ""
"Add the `--tree` or `-t` flag to show a recursive tree of why the package is "
"depended upon, for example:"
msgstr ""
"`--tree`や`-t`フラグを加えると、なぜそのパッケージが依存されているのかの再帰"
"的な木構造が示されます。例えば以下の通りです。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:677
#, no-wrap
msgid "php composer.phar depends psr/log -t\n"
msgstr "php composer.phar depends psr/log -t\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:680
#, no-wrap
msgid ""
"psr/log 1.1.4 Common interface for logging libraries\n"
"├──composer/composer 2.4.x-dev (requires psr/log ^1.0 || ^2.0 || ^3.0)\n"
"├──composer/composer dev-main (requires psr/log ^1.0 || ^2.0 || ^3.0)\n"
"├──composer/xdebug-handler 3.0.3 (requires psr/log ^1 || ^2 || ^3)\n"
"│  ├──composer/composer 2.4.x-dev (requires composer/xdebug-handler ^2.0.2 || ^3.0.3)\n"
"│  └──composer/composer dev-main (requires composer/xdebug-handler ^2.0.2 || ^3.0.3)\n"
"└──symfony/console v5.4.11 (conflicts psr/log >=3) (circular dependency aborted here)\n"
msgstr ""
"psr/log 1.1.4 Common interface for logging libraries\n"
"├──composer/composer 2.4.x-dev (requires psr/log ^1.0 || ^2.0 || ^3.0)\n"
"├──composer/composer dev-main (requires psr/log ^1.0 || ^2.0 || ^3.0)\n"
"├──composer/xdebug-handler 3.0.3 (requires psr/log ^1 || ^2 || ^3)\n"
"│  ├──composer/composer 2.4.x-dev (requires composer/xdebug-handler ^2.0.2 || ^3.0.3)\n"
"│  └──composer/composer dev-main (requires composer/xdebug-handler ^2.0.2 || ^3.0.3)\n"
"└──symfony/console v5.4.11 (conflicts psr/log >=3) (circular dependency aborted here)\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:694 ../doc/03-cli.md:728
msgid "**--recursive (-r):** Recursively resolves up to the root package."
msgstr ""
"**--recursive (-r):**\n"
"再帰的に根幹パッケージまで木構造を解決します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:694 ../doc/03-cli.md:728
msgid "**--tree (-t):** Prints the results as a nested tree, implies -r."
msgstr "**--tree (-t):** 入れ子の木構造を結果に出力します。-rを暗示します。"

#. type: Title ##
#: ../doc/03-cli.md:695
#, no-wrap
msgid "prohibits / why-not"
msgstr "prohibits / why-not"

#. type: Plain text
#: ../doc/03-cli.md:701
msgid ""
"The `prohibits` command tells you which packages are blocking a given "
"package from being installed. Specify a version constraint to verify whether "
"upgrades can be performed in your project, and if not why not. See the "
"following example:"
msgstr ""
"`prohibits`コマンドを使うと与えられたパッケージがインストールされる上でどの"
"パッケージが障壁になっているのかが分かります。\n"
"バージョン制約を指定するとプロジェクトにおいて更新が実施できるかを検証し、も"
"しできなければその理由を示します。\n"
"以下の例をご覧ください。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:702
#, no-wrap
msgid "php composer.phar prohibits symfony/symfony 3.1\n"
msgstr "php composer.phar prohibits symfony/symfony 3.1\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:705
#, no-wrap
msgid "laravel/framework v5.2.16 requires symfony/var-dumper (2.8.*|3.0.*)\n"
msgstr "laravel/framework v5.2.16 requires symfony/var-dumper (2.8.*|3.0.*)\n"

#. type: Plain text
#: ../doc/03-cli.md:711
msgid ""
"Note that you can also specify platform requirements, for example to check "
"whether you can upgrade your server to PHP 8.0:"
msgstr ""
"なおプラットフォーム要件も指定できます。\n"
"例えばサーバーをPHP 8.0に更新できるかどうかを確認するにはこうします。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:712
#, no-wrap
msgid "php composer.phar prohibits php 8\n"
msgstr "php composer.phar prohibits php 8\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:715
#, no-wrap
msgid ""
"doctrine/cache        v1.6.0 requires php (~5.5|~7.0)\n"
"doctrine/common       v2.6.1 requires php (~5.5|~7.0)\n"
"doctrine/instantiator 1.0.5  requires php (>=5.3,<8.0-DEV)\n"
msgstr ""
"doctrine/cache        v1.6.0 requires php (~5.5|~7.0)\n"
"doctrine/common       v2.6.1 requires php (~5.5|~7.0)\n"
"doctrine/instantiator 1.0.5  requires php (>=5.3,<8.0-DEV)\n"

#. type: Plain text
#: ../doc/03-cli.md:723
msgid ""
"As with `depends` you can request a recursive lookup, which will list all "
"packages depending on the packages that cause the conflict."
msgstr ""
"`depends`と同様に再帰的な探索を求めることができます。その場合は競合を起こして"
"いるパッケージに依存している全てのパッケージを一覧にします。"

#. type: Title ##
#: ../doc/03-cli.md:729
#, no-wrap
msgid "validate"
msgstr "validate"

#. type: Plain text
#: ../doc/03-cli.md:733
msgid ""
"You should always run the `validate` command before you commit your "
"`composer.json` file (and `composer.lock` [if applicable](01-basic-usage."
"md#commit-your-composer-lock-file-to-version-control)), and before you tag a "
"release."
msgstr ""
"`composer.json`ファイル（と、[当てはまるとき](01-basic-usage.md#commit-your-"
"composer-lock-file-to-version-control)は`composer.lock`）をコミットしたり、リ"
"リースのタグ付けをしたりする前には、必ず`validate`コマンドを走らせるべきで"
"す。"

#. type: Plain text
#: ../doc/03-cli.md:736
msgid ""
"It will check if your `composer.json` is valid. If a `composer.lock` exists, "
"it will also check if it is up to date with the `composer.json`."
msgstr ""
"`composer.json`が正当であるか検査します。\n"
"`composer.lock`があるとき、`composer.json`に対して最新かも検査します。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:737
#, no-wrap
msgid "php composer.phar validate\n"
msgstr "php composer.phar validate\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--no-check-all:** Do not emit a warning if requirements in `composer.json` "
"use unbound or overly strict version constraints."
msgstr ""
"**--no-check-all:**\n"
"`composer.json`中の要件が範囲のないものであったり、過度に厳密なバージョン制約"
"であったりする場合について、警告を出しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--no-check-lock:** Do not emit an error if `composer.lock` exists and is "
"not up to date."
msgstr ""
"**--no-check-lock:**\n"
"`composer.lock`が存在し、且つ更新されていない場合について、警告を出しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--check-lock** Check if lock file is up to date (even when [config.lock]"
"(06-config.md#lock) is false)"
msgstr ""
"**--check-lock**\n"
"固定ファイルが最新か検査します（config.lockが偽の場合も含みます）"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--no-check-publish:** Do not emit an error if `composer.json` is "
"unsuitable for publishing as a package on Packagist but is otherwise valid."
msgstr ""
"**--no-check-publish:**\n"
"Packagistに投稿するには相応しくないが、そうでなければ妥当な`composer.json`に"
"なっている場合について、エラーを出しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--no-check-version:** Do not emit an error if the version field is present."
msgstr ""
"**--no-check-version:**\n"
"バージョンフィールドがあるとき、警告を出しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--with-dependencies:** Also validate the composer.json of all installed "
"dependencies."
msgstr ""
"**--with-dependencies:** 全てのインストールされた依存関係についてもcomposer."
"jsonを検証します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:750
msgid ""
"**--strict:** Return a non-zero exit code for warnings as well as errors."
msgstr ""
"**--strict:** エラーに加えて警告についても非ゼロの終了コードを返します。"

#. type: Title ##
#: ../doc/03-cli.md:751
#, no-wrap
msgid "status"
msgstr "status"

#. type: Plain text
#: ../doc/03-cli.md:756
msgid ""
"If you often need to modify the code of your dependencies and they are "
"installed from source, the `status` command allows you to check if you have "
"local changes in any of them."
msgstr ""
"依存関係のコードを変更したり、ソースからインストールしたりする必要がしばしば"
"ある場合は、`status`コマンドを使うとその中からローカルで加えた変更があるか確"
"認できます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:757
#, no-wrap
msgid "php composer.phar status\n"
msgstr "php composer.phar status\n"

#. type: Plain text
#: ../doc/03-cli.md:763
msgid ""
"With the `--verbose` option you get some more information about what was "
"changed:"
msgstr ""
"`--verbose`コマンドで変化したところについてのより詳しい情報を得られます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:764
#, no-wrap
msgid "php composer.phar status -v\n"
msgstr "php composer.phar status -v\n"

#. type: Fenced code block (text)
#: ../doc/03-cli.md:767
#, no-wrap
msgid ""
"You have changes in the following dependencies:\n"
"vendor/seld/jsonlint:\n"
"    M README.mdown\n"
msgstr ""
"You have changes in the following dependencies:\n"
"vendor/seld/jsonlint:\n"
"    M README.mdown\n"

#. type: Title ##
#: ../doc/03-cli.md:773
#, no-wrap
msgid "self-update / selfupdate"
msgstr "self-update / selfupdate"

#. type: Plain text
#: ../doc/03-cli.md:777
msgid ""
"To update Composer itself to the latest version, run the `self-update` "
"command. It will replace your `composer.phar` with the latest version."
msgstr ""
"Composer自体を最新版に更新したければ`self-update`コマンドを走らせてください。"
"`composer.phar`を最新版に置き換えます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:778
#, no-wrap
msgid "php composer.phar self-update\n"
msgstr "php composer.phar self-update\n"

#. type: Plain text
#: ../doc/03-cli.md:783
msgid "If you would like to instead update to a specific release specify it:"
msgstr "そうではなく特定のリリースに更新したければそのように指定してください。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:784
#, no-wrap
msgid "php composer.phar self-update 2.4.0-RC1\n"
msgstr "php composer.phar self-update 2.4.0-RC1\n"

#. type: Plain text
#: ../doc/03-cli.md:790
msgid ""
"If you have installed Composer for your entire system (see [global "
"installation](00-intro.md#globally)), you may have to run the command with "
"`root` privileges"
msgstr ""
"Composerをシステム全体にインストールしたときは（[大域的なインストール](00-"
"intro.md#globally)を参照）、コマンドを`root`権限で走らせなくてはならないかも"
"しれません。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:791
#, no-wrap
msgid "sudo -H composer self-update\n"
msgstr "sudo -H composer self-update\n"

#. type: Plain text
#: ../doc/03-cli.md:797
msgid ""
"If Composer was not installed as a PHAR, this command is not available.  "
"(This is sometimes the case when Composer was installed by an operating "
"system package manager.)"
msgstr ""
"ComposerがPHARとしてインストールされていなければこのコマンドは使えません"
"（Composerがオペレーティングシステムのパッケージ管理によってインストールされ"
"たときはこの場合に当たることがあります）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--rollback (-r):** Rollback to the last version you had installed."
msgstr "**--rollback (-r):** インストールした直近のバージョンに巻き戻します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid ""
"**--clean-backups:** Delete old backups during an update. This makes the "
"current version of Composer the only backup available after the update."
msgstr ""
"**--clean-backups:** 更新時に古いバックアップを削除します。更新後は現在の"
"Composerのバージョンのみがバックアップとして残ります。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--no-progress:** Do not output download progress."
msgstr ""
"**--no-progress:**\n"
"ダウンロードの進捗バーを出力しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--update-keys:** Prompt user for a key update."
msgstr "**--update-keys:** キーの更新を利用者に尋ねます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--stable:** Force an update to the stable channel."
msgstr "**--stable:** 更新を安定チャンネルに強制します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--preview:** Force an update to the preview channel."
msgstr "**--preview:** 更新をプレビューチャンネルに強制します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid "**--snapshot:** Force an update to the snapshot channel."
msgstr "**--snapshot:** 更新をスナップショットチャンネルに強制します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid ""
"**--1:** Force an update to the stable channel, but only use 1.x versions"
msgstr "**--1:** 更新を安定チャンネルに強制しますが、1.x版のみを使います。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid ""
"**--2:** Force an update to the stable channel, but only use 2.x versions"
msgstr "**--2:** 更新を安定チャンネルに強制しますが、2.x版のみを使います。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:811
msgid ""
"**--set-channel-only:** Only store the channel as the default one and then "
"exit"
msgstr ""
"**--set-channel-only:** チャンネルを既定のものとして保存するだけして終了しま"
"す。"

#. type: Title ##
#: ../doc/03-cli.md:812
#, no-wrap
msgid "config"
msgstr "config"

#. type: Plain text
#: ../doc/03-cli.md:816
msgid ""
"The `config` command allows you to edit Composer config settings and "
"repositories in either the local `composer.json` file or the global `config."
"json` file."
msgstr ""
"`config`コマンドではローカルの`composer.json`ファイルまたは大域的な`config."
"json`ファイルにあるComposerの設定やリポジトリを編集できます。"

#. type: Plain text
#: ../doc/03-cli.md:818
msgid ""
"Additionally it lets you edit most properties in the local `composer.json`."
msgstr "加えてローカルの`composer.json`にある殆どのプロパティを編集できます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:819
#, no-wrap
msgid "php composer.phar config --list\n"
msgstr "php composer.phar config --list\n"

#. type: Title ##
#: ../doc/03-cli.md:823 ../doc/faqs/how-to-use-composer-behind-a-proxy.md:15
#, no-wrap
msgid "Usage"
msgstr "使い方"

#. type: Plain text
#: ../doc/03-cli.md:826
msgid "`config [options] [setting-key] [setting-value1] ... [setting-valueN]`"
msgstr "`config [options] [setting-key] [setting-value1] ... [setting-valueN]`"

#. type: Plain text
#: ../doc/03-cli.md:830
msgid ""
"`setting-key` is a configuration option name and `setting-value1` is a "
"configuration value.  For settings that can take an array of values (like "
"`github-protocols`), multiple setting-value arguments are allowed."
msgstr ""
"`setting-key`は設定のオプション名で、`setting-value1`は設定値です。\n"
"（`github-protocols`のような）値の配列を取ることができる設定については、複数"
"の設定値の引数が可能です。"

#. type: Plain text
#: ../doc/03-cli.md:832
msgid "You can also edit the values of the following properties:"
msgstr "プロパティの値を編集することもできます。"

#. type: Plain text
#: ../doc/03-cli.md:835
msgid ""
"`description`, `homepage`, `keywords`, `license`, `minimum-stability`, "
"`name`, `prefer-stable`, `type` and `version`."
msgstr ""
"`description`、`homepage`、`keywords`、`license`、`minimum-stability`、"
"`name`、`prefer-stable`、`type`、`version`がそうです。"

#. type: Plain text
#: ../doc/03-cli.md:837
msgid "See the [Config](06-config.md) chapter for valid configuration options."
msgstr ""
"妥当な設定オプションについては[設定](06-config.md)の章を参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--global (-g):** Operate on the global config file located at "
"`$COMPOSER_HOME/config.json` by default.  Without this option, this command "
"affects the local composer.json file or a file specified by `--file`."
msgstr ""
"**--global (-g):**\n"
"既定では`$COMPOSER_HOME/config.json`に位置する大域設定ファイルを編集しま"
"す。\n"
"このオプションがなければ、このコマンドはローカルのcomposer.json`ファイルない"
"し`--file`により指定されたファイルに作用します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--editor (-e):** Open the local composer.json file using in a text editor "
"as defined by the `EDITOR` env variable.  With the `--global` option, this "
"opens the global config file."
msgstr ""
"**--editor (-e):** ローカルのcomposer.jsonファイルを`EDITOR`環境変数で定義さ"
"れたテキストエディタを使って開きます。`--global`オプションと一緒に使うと大域"
"設定ファイルを開きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid "**--auth (-a):** Affect auth config file (only used for --editor)."
msgstr ""
"**--auth (-a):**\n"
"認証設定ファイルに作用します（--editorの使用限定です）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid "**--unset:** Remove the configuration element named by `setting-key`."
msgstr "**--unset:** `setting-key`の名前が付いている設定要素を削除します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--list (-l):** Show the list of current config variables.  With the `--"
"global` option this lists the global configuration only."
msgstr ""
"**--list (-l):** 現在の設定変数の一覧を示します。`global`オプションと一緒に使"
"うと大域設定のみを一覧にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--file=\"...\" (-f):** Operate on a specific file instead of composer."
"json. Note that this cannot be used in conjunction with the `--global` "
"option."
msgstr ""
"**--file=\"...\" (-f):** composer.jsonではなく特定のファイルについて編集しま"
"す。\n"
"なお、`--global`オプションと織り交ぜて使うことはできません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--absolute:** Returns absolute paths when fetching `*-dir` config values "
"instead of relative."
msgstr ""
"**--absolute:**\n"
"`*-dir`設定値を取得するとき、相対パスではなく絶対パスを返します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--json:** JSON decode the setting value, to be used with `extra.*` keys."
msgstr ""
"**--json:** 設定値をJSONでデコードします。このデコード結果は`extra.*`キーで使"
"うことができます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--merge:** Merge the setting value with the current value, to be used with "
"`extra.*` keys in combination with `--json`."
msgstr ""
"**--merge:** 設定値を現在の値と統合します。`--json`と組み合わせて`extra.*`"
"キーに使えます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid ""
"**--append:** When adding a repository, append it (lowest priority) to the "
"existing ones instead of prepending it (highest priority)."
msgstr ""
"**--append:** リポジトリを追加するとき、既存のものの先頭に追加する（最優先）"
"のではなく末尾に付ける（低優先）ようにします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:858
msgid "**--source:** Display where the config value is loaded from."
msgstr "**--source:** 設定値がどこから読み込まれたのかを表示します。"

#. type: Title ###
#: ../doc/03-cli.md:859
#, no-wrap
msgid "Modifying Repositories"
msgstr "リポジトリを変更する"

#. type: Plain text
#: ../doc/03-cli.md:863
msgid ""
"In addition to modifying the config section, the `config` command also "
"supports making changes to the repositories section by using it the "
"following way:"
msgstr ""
"設定部分を変更することに加えて、`config`コマンドを以下のように使うことでリポ"
"ジトリ部分を変更することにも対応しています。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:864
#, no-wrap
msgid "php composer.phar config repositories.foo vcs https://github.com/foo/bar\n"
msgstr "php composer.phar config repositories.foo vcs https://github.com/foo/bar\n"

#. type: Plain text
#: ../doc/03-cli.md:869
msgid ""
"If your repository requires more configuration options, you can instead pass "
"its JSON representation :"
msgstr ""
"リポジトリにより多くの設定オプションが必要なら、代わりにそのJSON表現を渡すこ"
"とができます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:870
#, no-wrap
msgid "php composer.phar config repositories.foo '{\"type\": \"vcs\", \"url\": \"http://svn.example.org/my-project/\", \"trunk-path\": \"master\"}'\n"
msgstr "php composer.phar config repositories.foo '{\"type\": \"vcs\", \"url\": \"http://svn.example.org/my-project/\", \"trunk-path\": \"master\"}'\n"

#. type: Title ###
#: ../doc/03-cli.md:874
#, no-wrap
msgid "Modifying Extra Values"
msgstr "追加の値を変更する"

#. type: Plain text
#: ../doc/03-cli.md:878
msgid ""
"In addition to modifying the config section, the `config` command also "
"supports making changes to the extra section by using it the following way:"
msgstr ""
"設定部分を変更することに加えて、`config`コマンドを以下のように使って追加部分"
"を変更することにも対応しています。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:879
#, no-wrap
msgid "php composer.phar config extra.foo.bar value\n"
msgstr "php composer.phar config extra.foo.bar value\n"

#. type: Plain text
#: ../doc/03-cli.md:885
msgid ""
"The dots indicate array nesting, a max depth of 3 levels is allowed though. "
"The above would set `\"extra\": { \"foo\": { \"bar\": \"value\" } }`."
msgstr ""
"ドットは入れ子の連なりを表していますが、深さは3段階までです。上は`\"extra\": "
"{ \"foo\": { \"bar\": \"value\" } }`を設定します。"

#. type: Plain text
#: ../doc/03-cli.md:888
msgid ""
"If you have a complex value to add/modify, you can use the `--json` and `--"
"merge` flags to edit extra fields as json:"
msgstr ""
"複雑な値を加えたり変更したりする場合は`--json`や`--merge`フラグを使って追加の"
"フィールドをJSONとして編集できます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:889
#, no-wrap
msgid "php composer.phar config --json extra.foo.bar '{\"baz\": true, \"qux\": []}'\n"
msgstr "php composer.phar config --json extra.foo.bar '{\"baz\": true, \"qux\": []}'\n"

#. type: Title ##
#: ../doc/03-cli.md:893
#, no-wrap
msgid "create-project"
msgstr "create-project"

#. type: Plain text
#: ../doc/03-cli.md:898
msgid ""
"You can use Composer to create new projects from an existing package. This "
"is the equivalent of doing a git clone/svn checkout followed by a `composer "
"install` of the vendors."
msgstr ""
"Composerを使って既存のパッケージから新しいプロジェクトを作ることができま"
"す。\n"
"git cloneやsvn checkoutをしてから、ベンダーにあるものを`composer install`する"
"ことと等価です。"

#. type: Plain text
#: ../doc/03-cli.md:900
msgid "There are several applications for this:"
msgstr "このコマンドにはいくつかの活用法があります。"

#. type: Bullet: '1. '
#: ../doc/03-cli.md:905
msgid "You can deploy application packages."
msgstr "アプリケーションパッケージをデプロイできます。"

#. type: Bullet: '2. '
#: ../doc/03-cli.md:905
msgid ""
"You can check out any package and start developing on patches for example."
msgstr "任意のパッケージをチェックアウトして、例えばパッチを開発できます。"

#. type: Bullet: '3. '
#: ../doc/03-cli.md:905
msgid ""
"Projects with multiple developers can use this feature to bootstrap the "
"initial application for development."
msgstr ""
"複数人の開発者がいるプロジェクトでこの機能を使い、開発のための初期のアプリ"
"ケーションに着手できます。"

#. type: Plain text
#: ../doc/03-cli.md:909
msgid ""
"To create a new project using Composer you can use the `create-project` "
"command.  Pass it a package name, and the directory to create the project "
"in. You can also provide a version as a third argument, otherwise the latest "
"version is used."
msgstr ""
"Composerで新しいプロジェクトを作るためには`create-project`コマンドが使えま"
"す。パッケージ名とプロジェクトを作成するディレクトリを渡してください。また、3"
"つ目の引数としてバージョンを与えることもでき、与えない場合は最新版が使われま"
"す。"

#. type: Plain text
#: ../doc/03-cli.md:911
msgid ""
"If the directory does not currently exist, it will be created during "
"installation."
msgstr "ディレクトリがその時点で存在しなければインストールの過程で作られます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:912
#, no-wrap
msgid "php composer.phar create-project doctrine/orm path \"2.2.*\"\n"
msgstr "php composer.phar create-project doctrine/orm path \"2.2.*\"\n"

#. type: Plain text
#: ../doc/03-cli.md:918
msgid ""
"It is also possible to run the command without params in a directory with an "
"existing `composer.json` file to bootstrap a project."
msgstr ""
"プロジェクトに着手するための既存の`composer.json`があるディレクトリ内では、引"
"数がなくともコマンドを走らせることができます。"

#. type: Plain text
#: ../doc/03-cli.md:920
msgid "By default the command checks for the packages on packagist.org."
msgstr "既定ではコマンドはパッケージをpackagist.orgで確認します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--stability (-s):** Minimum stability of package. Defaults to `stable`."
msgstr "**--stability (-s):** パッケージの最小安定性です。`stable`が既定です。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--repository:** Provide a custom repository to search for the package, "
"which will be used instead of packagist. Can be either an HTTP URL pointing "
"to a `composer` repository, a path to a local `packages.json` file, or a "
"JSON string which similar to what the [repositories](04-schema."
"md#repositories)  key accepts. You can use this multiple times to configure "
"multiple repositories."
msgstr ""
"**--repository:** パッケージを探索するための独自のリポジトリを与えます。この"
"リポジトリはpackagistの代わりに使われます。`composer`ディレクトリを指すHTTP "
"URLでも、ローカルの`packages.json`ファイルへのパスでも、あるいは[リポジトリ]"
"(04-schema.md#repositories)キーが受け付けるものに似たJSON文字列でも大丈夫で"
"す。複数回使って複数のリポジトリを設定できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--add-repository:** Add the custom repository in the composer.json. If a "
"lock file is present, it will be deleted and an update will be run instead "
"of an install."
msgstr ""
"**--add-repository:**\n"
"composer.jsonの中に独自のリポジトリを加えます。\n"
"固定ファイルが存在している場合、一旦削除されインストールの代わりに更新が走り"
"ます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid "**--dev:** Install packages listed in `require-dev`."
msgstr "**--dev:** `require-dev`に挙げられたパッケージをインストールします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid "**--no-dev:** Disables installation of require-dev packages."
msgstr "**--no-dev:** require-devのパッケージのインストールを無効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--no-scripts:** Disables the execution of the scripts defined in the root "
"package."
msgstr ""
"**--no-scripts:**\n"
"根幹パッケージで定義されているスクリプトの実行を無効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--no-secure-http:** Disable the secure-http config option temporarily "
"while installing the root package. Use at your own risk. Using this flag is "
"a bad idea."
msgstr ""
"**--no-secure-http:**\n"
"根幹パッケージのインストール中、一時的にsecure-http設定オプションを無効にしま"
"す。\n"
"自己責任でご利用ください。\n"
"このフラグを使うのは関心しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--keep-vcs:** Skip the deletion of the VCS metadata for the created "
"project. This is mostly useful if you run the command in non-interactive "
"mode."
msgstr ""
"**--keep-vcs:**\n"
"作成されるプロジェクトのVCSメタデータの削除を飛ばします。\n"
"これが役に立つのはコマンドを非対話的なモードで走らせているときが殆どです。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid "**--remove-vcs:** Force-remove the VCS metadata without prompting."
msgstr "**--remove-vcs:** プロンプト無しにVCSメタデータを強制削除します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid "**--no-install:** Disables installation of the vendors."
msgstr "**--no-install:** ベンダーのインストールを無効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:963
msgid ""
"**--ask:** Ask the user to provide a target directory for the new project."
msgstr ""
"**--ask:** 利用者に新しいプロジェクトの対象ディレクトリを入れてもらうようにし"
"ます。"

#. type: Title ##
#: ../doc/03-cli.md:964
#, no-wrap
msgid "dump-autoload / dumpautoload"
msgstr "dump-autoload / dumpautoload"

#. type: Plain text
#: ../doc/03-cli.md:969
msgid ""
"If you need to update the autoloader because of new classes in a classmap "
"package for example, you can use `dump-autoload` to do that without having "
"to go through an install or update."
msgstr ""
"例えばクラスマップパッケージ中に新しいクラスができたことによって自動読み込み"
"器を更新する必要がある場合は、インストールや更新を行わずとも`dump-autoload`が"
"使えます。"

#. type: Plain text
#: ../doc/03-cli.md:976
msgid ""
"Additionally, it can dump an optimized autoloader that converts PSR-0/4 "
"packages into classmap ones for performance reasons. In large applications "
"with many classes, the autoloader can take up a substantial portion of every "
"request's time. Using classmaps for everything is less convenient in "
"development, but using this option you can still use PSR-0/4 for convenience "
"and classmaps for performance."
msgstr ""
"加えて、効率性の理由からPSR-0/4のパッケージをクラスマップのものに変換する、最"
"適化された自動読み込み器を吐き出すことができます。\n"
"多くのクラスがある比較的大規模なアプリケーションでは、自動読み込み器には毎回"
"のリクエストに掛かる時間のうち無視できない時間が掛かります。\n"
"開発時に常にクラスマップを使うことはあまり便利ではありませんが、このオプショ"
"ンを使えば便宜上PSR-0/4を使いつつも、効率性のためにクラスマップを使うことがで"
"きます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--optimize (-o):** Convert PSR-0/4 autoloading to classmap to get a faster "
"autoloader. This is recommended especially for production, but can take a "
"bit of time to run, so it is currently not done by default."
msgstr ""
"**--optimize (-o):**\n"
"PSR-0/4自動読み込みをクラスマップに変換し、より高速な自動読み込み器を得ま"
"す。\n"
"実運用で特に推奨されますが、走らせるのに少し時間が掛かるため、現時点では既定"
"で有効になっていません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--classmap-authoritative (-a):** Autoload classes from the classmap only.  "
"Implicitly enables `--optimize`."
msgstr ""
"**--classmap-authoritative (-a):** クラスマップからのみクラスを自動読み込みし"
"ます。暗に`--optimize`を有効します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid "**--apcu:** Use APCu to cache found/not-found classes."
msgstr "**--apcu:** APCuを使って、クラスの有無をキャッシュします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--apcu-prefix:** Use a custom prefix for the APCu autoloader cache.  "
"Implicitly enables `--apcu`."
msgstr ""
"**--apcu-prefix:** APCu自動読み込み器のキャッシュに独自の接頭辞を使います。暗"
"に`--apcu`を有効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid "**--dry-run:** Outputs the operations but will not execute anything."
msgstr ""
"**--dry-run:**\n"
"操作内容を出力しますが、何も実行しません。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--no-dev:** Disables autoload-dev rules. Composer will by default infer "
"this automatically according to the last `install` or `update` `--no-dev` "
"state."
msgstr ""
"**--no-dev:** autoload-dev規則を無効にします。\n"
"既定では、Composerは直近の`install --no-dev`または`update --no-dev`の状態に"
"随って自動的にこれを推測します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--dev:** Enables autoload-dev rules. Composer will by default infer this "
"automatically according to the last `install` or `update` `--no-dev` state."
msgstr ""
"**--dev:** autoload-dev規則を有効にします。\n"
"既定では、Composerは直近の`install --no-dev`または`update --no-dev`の状態に"
"随って自動的にこれを推測します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--ignore-platform-reqs:** ignore all `php`, `hhvm`, `lib-*` and `ext-*` "
"requirements and skip the [platform check](07-runtime.md#platform-check) for "
"these.  See also the [`platform`](06-config.md#platform) config option."
msgstr ""
"**--ignore-platform-reqs:** 全ての`php`、`hhvm`、`lib-*`、`ext-*`要件を無視"
"し、これらの[プラットフォーム検査](07-runtime.md#platform-check)を飛ばしま"
"す。[`platform`](06-config.md#platform)設定オプションも参照してください。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--ignore-platform-req:** ignore a specific platform requirement (`php`, "
"`hhvm`, `lib-*` and `ext-*`) and skip the [platform check](07-runtime."
"md#platform-check) for it.  Multiple requirements can be ignored via "
"wildcard."
msgstr ""
"**--ignore-platform-req:** 特定のプラットフォーム要件（`php`、`hhvm`、`lib-"
"*`、`ext-*`）を無視し、それについての[プラットフォーム検査](07-runtime."
"md#platform-check)を飛ばします。\n"
"ワイルドカードを使って複数の要件を無視できます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--strict-psr:** Return a failed exit code (1) if PSR-4 or PSR-0 mapping "
"errors are present. Requires --optimize to work."
msgstr ""
"**--strict-psr:** PSR-4またはPSR-0の対応付けでの失敗が存在する場合は、失敗の"
"終了コード (1) を返します。\n"
"動作には--optimizeが必要です。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1001
msgid ""
"**--strict-ambiguous:** Return a failed exit code (2) if the same class is "
"found in multiple files. Requires --optimize to work."
msgstr ""
"**--strict-ambiguous:**\n"
"複数ファイルに同じクラスがあるとき、失敗の終了コード (2) を返します。\n"
"動作には--optimizeが必要です。"

#. type: Title ##
#: ../doc/03-cli.md:1002
#, no-wrap
msgid "clear-cache / clearcache / cc"
msgstr "clear-cache / clearcache / cc"

#. type: Plain text
#: ../doc/03-cli.md:1005
msgid "Deletes all content from Composer's cache directories."
msgstr "Composerのキャッシュディレクトリから全ての内容を削除します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1009
msgid "**--gc:** Only run garbage collection, not a full cache clear"
msgstr ""
"**--gc:** ガベージコレクションのみを走らせます。完全なキャッシュの消去は行い"
"ません。"

#. type: Title ##
#: ../doc/03-cli.md:1010
#, no-wrap
msgid "licenses"
msgstr "licenses"

#. type: Plain text
#: ../doc/03-cli.md:1014
msgid ""
"Lists the name, version and license of every package installed. Use `--"
"format=json` to get machine-readable output."
msgstr ""
"インストールされている全てのパッケージの名前、バージョン、使用許諾を一覧にし"
"ます。\n"
"`--format-json`を使うと、機械で読み込みやすい出力が得られます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1019
msgid ""
"**--format:** Format of the output: text, json or summary (default: \"text\")"
msgstr ""
"**--format:** 出力の形式です。text、json、summaryの何れかです（既定では"
"「text」）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1019
msgid "**--no-dev:** Remove dev dependencies from the output"
msgstr "**--no-dev:** 出力から開発依存関係を除きます。"

#. type: Title ##
#: ../doc/03-cli.md:1020
#, no-wrap
msgid "run-script / run"
msgstr "run-script / run"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1028
msgid "**--timeout:** Set the script timeout in seconds, or 0 for no timeout."
msgstr ""
"**--timeout:** スクリプトの制限時間を秒単位で設定します。0は制限時間無しで"
"す。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1028
msgid "**--dev:** Sets the dev mode."
msgstr "**--dev:** 開発モードを設定します。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1028
msgid "**--no-dev:** Disable dev mode."
msgstr "**--no-dev:** 開発モードを無効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1028
msgid "**--list (-l):** List user defined scripts."
msgstr "**--list (-l):** 利用者が定義したスクリプトを一覧にします。"

#. type: Plain text
#: ../doc/03-cli.md:1031
msgid ""
"To run [scripts](articles/scripts.md) manually you can use this command, "
"give it the script name and optionally any required arguments."
msgstr ""
"[スクリプト](articles/scripts.md)を手動で走らせるにはこのコマンドを使うことが"
"できます。スクリプト名と任意で必要な引数を与えます。"

#. type: Title ##
#: ../doc/03-cli.md:1032
#, no-wrap
msgid "exec"
msgstr "exec"

#. type: Plain text
#: ../doc/03-cli.md:1037
msgid ""
"Executes a vendored binary/script. You can execute any command and this will "
"ensure that the Composer bin-dir is pushed on your PATH before the command "
"runs."
msgstr ""
"ベンダーのバイナリやスクリプトを実行します。\n"
"どんなコマンドも実行できますし、コマンドが走る前に必ずComposerのbin-dirがPATH"
"に加えられます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1041
msgid "**--list (-l):** List the available Composer binaries."
msgstr "**--list (-l):** 利用できるComposerのバイナリを一覧にします。"

#. type: Title ##
#: ../doc/03-cli.md:1042
#, no-wrap
msgid "diagnose"
msgstr "diagnose"

#. type: Plain text
#: ../doc/03-cli.md:1047
msgid ""
"If you think you found a bug, or something is behaving strangely, you might "
"want to run the `diagnose` command to perform automated checks for many "
"common problems."
msgstr ""
"バグや奇妙な挙動を発見したと思ったら、`diagnose`コマンドを走らせて、多くのよ"
"くある問題について自動化された検査を実施できます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:1048
#, no-wrap
msgid "php composer.phar diagnose\n"
msgstr "php composer.phar diagnose\n"

#. type: Title ###
#: ../doc/03-cli.md:1052 ../doc/04-schema.md:920
#, no-wrap
msgid "archive"
msgstr "archive"

#. type: Plain text
#: ../doc/03-cli.md:1057
msgid ""
"This command is used to generate a zip/tar archive for a given package in a "
"given version. It can also be used to archive your entire project without "
"excluded/ignored files."
msgstr ""
"このコマンドを使うと、与えられたバージョンの与えられたパッケージについてzip/"
"tarアーカイブを生成します。\n"
"除外・無視対象のファイルを除く、プロジェクト全体をアーカイブするために使うこ"
"ともできます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:1058
#, no-wrap
msgid "php composer.phar archive vendor/package 2.0.21 --format=zip\n"
msgstr "php composer.phar archive vendor/package 2.0.21 --format=zip\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1068
msgid ""
"**--format (-f):** Format of the resulting archive: tar, tar.gz, tar.bz2 or "
"zip (default: \"tar\")."
msgstr ""
"**--format (-f):** アーカイブ結果の形式です。tar、tar.gz、tar.bz2、zipのいず"
"れかです（既定：「tar」）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1068
msgid "**--dir:** Write the archive to this directory (default: \".\")"
msgstr "**--dir:** アーカイブをこのディレクトリに書き出します（既定：「.」）。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1068
msgid "**--file:** Write the archive with the given file name."
msgstr "**--file:** 与えられたファイル名でアーカイブを書き出します。"

#. type: Title ##
#: ../doc/03-cli.md:1069 ../doc/06-config.md:104
#, no-wrap
msgid "audit"
msgstr "audit"

#. type: Plain text
#: ../doc/03-cli.md:1075
msgid ""
"This command is used to audit the packages you have installed for possible "
"security issues. It checks for and lists security vulnerability advisories "
"according to the [Packagist.org api](https://packagist.org/apidoc#list-"
"security-advisories)."
msgstr ""
"このコマンドを使うと、インストールしたパッケージをセキュリティ上の問題がある"
"か監査できます。\n"
"[Packagist.org api](https://packagist.org/apidoc#list-security-advisories)に"
"従って、セキュリティ上の脆弱性に対する推奨事項を確認して一覧にします。"

#. type: Plain text
#: ../doc/03-cli.md:1077
msgid ""
"The audit command returns the amount of vulnerabilities found. `0` if "
"successful, and up to `255` otherwise."
msgstr ""
"auditコマンドは見付かった脆弱性の量を返します。\n"
"成功時は`0`を、それ以外は最大`255`の数を返します。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:1078
#, no-wrap
msgid "php composer.phar audit\n"
msgstr "php composer.phar audit\n"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1092
msgid "**--no-dev:** Disables auditing of require-dev packages."
msgstr "**--no-dev:** require-devのパッケージの監査を無効にします。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1092
msgid ""
"**--format (-f):** Audit output format. Must be \"table\" (default), "
"\"plain\", \"json\", or \"summary\"."
msgstr ""
"**--format (-f):** 出力の形式を監査します。監査の出力は「table」（既定）、"
"「plain」、「json」、「summary」の何れかです。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1092
msgid ""
"**--locked:** Audit packages from the lock file, regardless of what is "
"currently in vendor dir."
msgstr ""
"**--locked:**\n"
"固定ファイルのパッケージを監査します。\n"
"現時点でベンダーディレクトリに何があるかは無視されます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1092
msgid ""
"**--abandoned:** Behavior on abandoned packages. Must be \"ignore\", "
"\"report\", or \"fail\".  See also [audit.abandoned](06-config."
"md#abandoned).  Passing this flag will override the config value and the "
"environment variable."
msgstr ""
"**--abandoned:**\n"
"放棄されたパッケージに対して動作します。\n"
"「ignore」「report」「fail」のどれかでなければなりません。\n"
"[audit.abandoned](06-config.md#abandoned)もご参照ください。\n"
"このフラグを渡すと、構成値と環境変数がオーバーライドされます。"

#. type: Bullet: '* '
#: ../doc/03-cli.md:1092
msgid ""
"**--ignore-severity:** Ignore advisories of a certain severity level. Can be "
"passed one or more time to ignore multiple severities."
msgstr ""
"**--ignore-severity:**\n"
"特定の深刻度の水準の勧告を無視します。\n"
"複数の深刻度を無視するために1回以上渡せます。"

#. type: Title ##
#: ../doc/03-cli.md:1093
#, no-wrap
msgid "help"
msgstr "help"

#. type: Plain text
#: ../doc/03-cli.md:1096
msgid "To get more information about a certain command, you can use `help`."
msgstr "あるコマンドについて詳細が知りたければ`help`が使えます。"

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:1097
#, no-wrap
msgid "php composer.phar help install\n"
msgstr "php composer.phar help install\n"

#. type: Title ##
#: ../doc/03-cli.md:1101
#, no-wrap
msgid "Command-line completion"
msgstr "コマンドラインインターフェース"

#. type: Plain text
#: ../doc/03-cli.md:1105
msgid ""
"Command-line completion can be enabled by running the `composer completion --"
"help` command and following the instructions."
msgstr ""
"コマンドライン補完は、`composer completion --help`コマンドを走らせると有効に"
"できます。\n"
"また、以下の手順に従ってください。"

#. type: Title ##
#: ../doc/03-cli.md:1106
#, no-wrap
msgid "Environment variables"
msgstr "環境変数"

#. type: Plain text
#: ../doc/03-cli.md:1112
msgid ""
"You can set a number of environment variables that override certain "
"settings.  Whenever possible it is recommended to specify these settings in "
"the `config` section of `composer.json` instead. It is worth noting that the "
"env vars will always take precedence over the values specified in `composer."
"json`."
msgstr ""
"環境変数を設定して多くの設定を上書きできます。\n"
"できる限りこうした設定は環境変数ではなく`composer.json`の`config`部分で指定す"
"ることをお勧めします。\n"
"環境変数は`composer.json`で指定された値より常に優先されるということ以外に利点"
"はありません。"

#. type: Title ###
#: ../doc/03-cli.md:1113
#, no-wrap
msgid "COMPOSER"
msgstr "COMPOSER"

#. type: Plain text
#: ../doc/03-cli.md:1117
msgid ""
"By setting the `COMPOSER` env variable it is possible to set the filename of "
"`composer.json` to something else."
msgstr ""
"`COMPOSER`環境変数を設定することにより、`composer.json`のファイル名を何か別の"
"ものに設定できます。"

#. type: Plain text
#: ../doc/03-cli.md:1119
msgid "For example:"
msgstr "例えば："

#. type: Fenced code block (shell)
#: ../doc/03-cli.md:1120
#, no-wrap
msgid "COMPOSER=composer-other.json php composer.phar install\n"
msgstr "COMPOSER=composer-other.json php composer.phar install\n"

#. type: Plain text
#: ../doc/03-cli.md:1125
msgid ""
"The generated lock file will use the same name: `composer-other.lock` in "
"this example."
msgstr ""
"生成される固定ファイルは同じ名前を使います。\n"
"この例では`composer-other.lock`です。"

#. type: Title ###
#: ../doc/03-cli.md:1126
#, no-wrap
msgid "COMPOSER_ALLOW_SUPERUSER"
msgstr "COMPOSER_ALLOW_SUPERUSER"

#. type: Plain text
#: ../doc/03-cli.md:1131
msgid ""
"If set to 1, this env disables the warning about running commands as root/"
"super user.  It also disables automatic clearing of sudo sessions, so you "
"should really only set this if you use Composer as a super user at all times "
"like in docker containers."
msgstr ""
"1に設定すると、この環境変数はコマンドをルートないし特権のある利用者として走ら"
"せることについての警告を無効にします。\n"
"自動的なsudoセッションの消去も無効にするため、必ずDockerコンテナのような特権"
"のある利用者として、常時Composerを使うときにのみ設定するようにしてください。"

#. type: Title ###
#: ../doc/03-cli.md:1132
#, no-wrap
msgid "COMPOSER_ALLOW_XDEBUG"
msgstr "COMPOSER_ALLOW_XDEBUG"

#. type: Plain text
#: ../doc/03-cli.md:1135
msgid ""
"If set to 1, this env allows running Composer when the Xdebug extension is "
"enabled, without restarting PHP without it."
msgstr ""
"1に設定すると、Xdebug拡張を持たないPHPを再始動させることなく、環境変数は"
"Xdebug拡張が有効のときにComposerを走らせられるようにします。"

#. type: Title ###
#: ../doc/03-cli.md:1136
#, no-wrap
msgid "COMPOSER_AUTH"
msgstr "COMPOSER_AUTH"

#. type: Plain text
#: ../doc/03-cli.md:1143
msgid ""
"The `COMPOSER_AUTH` var allows you to set up authentication as an "
"environment variable.  The contents of the variable should be a JSON "
"formatted object containing [http-basic, github-oauth, bitbucket-oauth, ... "
"objects as needed](articles/authentication-for-private-packages.md), and "
"following the [spec from the config](06-config.md)."
msgstr ""
"`COMPOSER_AUTH`変数では、環境変数として認証を設定できます。\n"
"変数の内容はJSON形式のオブジェクトで、[http-basic、github-oauth、bitbucket-"
"oauth、……といった必要に応じたもの](articles/authentication-for-private-"
"packages.md)です。\n"
"オブジェクトは[設定の仕様](06-config.md)に従います。"

#. type: Title ###
#: ../doc/03-cli.md:1144
#, no-wrap
msgid "COMPOSER_BIN_DIR"
msgstr "COMPOSER_BIN_DIR"

#. type: Plain text
#: ../doc/03-cli.md:1148
msgid ""
"By setting this option you can change the `bin` ([Vendor Binaries](articles/"
"vendor-binaries.md))  directory to something other than `vendor/bin`."
msgstr ""
"このオプションを設定すると`bin`ディレクトリ（[ベンダーバイナリ](articles/"
"vendor-binaries.md)）を`vendor/bin`とは違う別のどこかに変更できます。"

#. type: Title ###
#: ../doc/03-cli.md:1149
#, no-wrap
msgid "COMPOSER_CACHE_DIR"
msgstr "COMPOSER_CACHE_DIR"

#. type: Plain text
#: ../doc/03-cli.md:1153
msgid ""
"The `COMPOSER_CACHE_DIR` var allows you to change the Composer cache "
"directory, which is also configurable via the [`cache-dir`](06-config."
"md#cache-dir) option."
msgstr ""
"`COMPOSER_CACHE_DIR`変数ではComposerのキャッシュディレクトリを変更できま"
"す。\n"
"[`cache-dir`](06-config.md#cache-dir)オプションを介しても設定できます。"

#. type: Plain text
#: ../doc/03-cli.md:1159
#, no-wrap
msgid ""
"By default, it points to `C:\\Users\\<user>\\AppData\\Local\\Composer` (or `%LOCALAPPDATA%/Composer`) on Windows.\n"
"On \\*nix systems that follow the [XDG Base\n"
"Directory Specifications](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html),\n"
"it points to `$XDG_CACHE_HOME/composer`. On other \\*nix systems and on macOS, it points to\n"
"`$COMPOSER_HOME/cache`.\n"
msgstr ""
"Windowsにおいて既定では`C:\\Users\\<user>\\AppData\\Local\\Composer`（もしくは`%LOCALAPPDATA%/Composer`）を指します。\n"
"\\*nixシステムでは[XDG Base Directory Specifications](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)に従い、`$XDG_CACHE_HOME/composer`を指します。他の\\*nixシステムとmacOSにおいては`$COMPOSER_HOME/cache`を指します。\n"

#. type: Title ###
#: ../doc/03-cli.md:1160
#, no-wrap
msgid "COMPOSER_CAFILE"
msgstr "COMPOSER_CAFILE"

#. type: Plain text
#: ../doc/03-cli.md:1164
msgid ""
"By setting this environmental value, you can set a path to a certificate "
"bundle file to be used during SSL/TLS peer verification."
msgstr ""
"この環境値を設定することで、パスを証明書バンドルファイルに設定してSSL/TLSピア"
"検証で使えるようにします。"

#. type: Title ###
#: ../doc/03-cli.md:1165
#, no-wrap
msgid "COMPOSER_DISABLE_XDEBUG_WARN"
msgstr "COMPOSER_DISABLE_XDEBUG_WARN"

#. type: Plain text
#: ../doc/03-cli.md:1168
msgid ""
"If set to 1, this env suppresses a warning when Composer is running with the "
"Xdebug extension enabled."
msgstr ""
"1に設定すると、ComposerがXdebug拡張が有効の状態で走っているときに出す警告をこ"
"の環境変数により抑制します。"

#. type: Title ###
#: ../doc/03-cli.md:1169
#, no-wrap
msgid "COMPOSER_DISCARD_CHANGES"
msgstr "COMPOSER_DISCARD_CHANGES"

#. type: Plain text
#: ../doc/03-cli.md:1172
msgid ""
"This env var controls the [`discard-changes`](06-config.md#discard-changes) "
"config option."
msgstr ""
"この環境変数は[`discard-changes`](06-config.md#discard-changes)設定オプション"
"を制御します。"

#. type: Title ###
#: ../doc/03-cli.md:1173
#, no-wrap
msgid "COMPOSER_FUND"
msgstr "COMPOSER_FUND"

#. type: Plain text
#: ../doc/03-cli.md:1176
msgid "If set to 0, this env suppresses funding notices when installing."
msgstr ""
"この環境変数を0に設定すると、インンストール時に投資のお知らせを抑制します。"

#. type: Title ###
#: ../doc/03-cli.md:1177
#, no-wrap
msgid "COMPOSER_HOME"
msgstr "COMPOSER_HOME"

#. type: Plain text
#: ../doc/03-cli.md:1182
msgid ""
"The `COMPOSER_HOME` var allows you to change the Composer home directory. "
"This is a hidden, global (per-user on the machine) directory that is shared "
"between all projects."
msgstr ""
"`COMPOSER_HOME`変数によりComposerのホームディレクトリを変えられます。\n"
"全てのプロジェクトで共有される、隠された（マシン上の使用者毎の）大域的なディ"
"レクトリです。"

#. type: Plain text
#: ../doc/03-cli.md:1184
msgid ""
"Use `composer config --global home` to see the location of the home "
"directory."
msgstr ""
"`composer config --global home`を使ってホームディレクトリの場所を確認してくだ"
"さい。"

#. type: Plain text
#: ../doc/03-cli.md:1190
#, no-wrap
msgid ""
"By default, it points to `C:\\Users\\<user>\\AppData\\Roaming\\Composer` on Windows\n"
"and `/Users/<user>/.composer` on macOS. On \\*nix systems that follow the [XDG Base\n"
"Directory Specifications](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html),\n"
"it points to `$XDG_CONFIG_HOME/composer`. On other \\*nix systems, it points to\n"
"`/home/<user>/.composer`.\n"
msgstr "既定では、Windowsにおいては`C:\\Users\\<user>\\AppData\\Roaming\\Composer`を、macOSにおいては`/Users/<user>/.composer`を指します。\\*nixシステムでは[XDG Base Directory Specifications](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)に従い、`$XDG_CONFIG_HOME/composer`を指します。他の\\*nixシステムでは`/home/<user>/.composer`を指します。\n"

#. type: Title ####
#: ../doc/03-cli.md:1191
#, no-wrap
msgid "COMPOSER_HOME/config.json"
msgstr "COMPOSER_HOME/config.json"

#. type: Plain text
#: ../doc/03-cli.md:1197
msgid ""
"You may put a `config.json` file into the location which `COMPOSER_HOME` "
"points to. Composer will partially (only `config` and `repositories` keys) "
"merge this configuration with your project's `composer.json` when you run "
"the `install` and `update` commands."
msgstr ""
"`config.json`ファイルを`COMPOSER_HOME`が指す場所に置くことができます。"
"Composerは`install`及び`update`コマンドを走らせたとき、部分的に（`config`およ"
"び`repositories`キーのみ）この設定をプロジェクトの`composer.json`と統合しま"
"す。"

#. type: Plain text
#: ../doc/03-cli.md:1200
msgid ""
"This file allows you to set [repositories](05-repositories.md) and "
"[configuration](06-config.md) for the user's projects."
msgstr ""
"このファイルがあれば使用者のプロジェクト用に[リポジトリ](05-repositories.md)"
"と[構成](06-config.md)を設定できます。"

#. type: Plain text
#: ../doc/03-cli.md:1203
msgid ""
"In case global configuration matches _local_ configuration, the _local_ "
"configuration in the project's `composer.json` always wins."
msgstr ""
"大域的な設定が*ローカルの*設定に合致した場合、プロジェクトの`composer.json`が"
"常に優先されます。"

#. type: Title ###
#: ../doc/03-cli.md:1204
#, no-wrap
msgid "COMPOSER_HTACCESS_PROTECT"
msgstr "COMPOSER_HTACCESS_PROTECT"

#. type: Plain text
#: ../doc/03-cli.md:1208
msgid ""
"Defaults to `1`. If set to `0`, Composer will not create `.htaccess` files "
"in the Composer home, cache, and data directories."
msgstr ""
"既定では`1`です。`0`に設定するとComposerはComposerのホーム、キャッシュ、デー"
"タディレクトリに`.htaccess`ファイルを作りません。"

#. type: Title ###
#: ../doc/03-cli.md:1209
#, no-wrap
msgid "COMPOSER_MEMORY_LIMIT"
msgstr "COMPOSER_MEMORY_LIMIT"

#. type: Plain text
#: ../doc/03-cli.md:1212
msgid "If set, the value is used as php's memory_limit."
msgstr "設定すると、その値がphpのメモリ上限として使われます。"

#. type: Title ###
#: ../doc/03-cli.md:1213
#, no-wrap
msgid "COMPOSER_MIRROR_PATH_REPOS"
msgstr "COMPOSER_MIRROR_PATH_REPOS"

#. type: Plain text
#: ../doc/03-cli.md:1218
msgid ""
"If set to 1, this env changes the default path repository strategy to "
"`mirror` instead of `symlink`. As it is the default strategy being set it "
"can still be overwritten by repository options."
msgstr ""
"1に設定すると、この環境変数は既定のパスリポジトリ戦略を`symlink`ではなく"
"`mirror`に変更します。既定の戦略が設定されているため、リポジトリオプションで"
"上書きすることもできます。"

#. type: Title ###
#: ../doc/03-cli.md:1219
#, no-wrap
msgid "COMPOSER_NO_INTERACTION"
msgstr "COMPOSER_NO_INTERACTION"

# TODO: build box/CIについてもう少し訳を考える
#. type: Plain text
#: ../doc/03-cli.md:1223
msgid ""
"If set to 1, this env var will make Composer behave as if you passed the `--"
"no-interaction` flag to every command. This can be set on build boxes/CI."
msgstr ""
"1に設定すると、この環境変数によりComposerがあたかも全てのコマンドについて`--"
"no-interaction`フラグを渡されたかのように動作します。\n"
"build box/CIで設定できます。"

#. type: Title ###
#: ../doc/03-cli.md:1224
#, no-wrap
msgid "COMPOSER_PROCESS_TIMEOUT"
msgstr "COMPOSER_PROCESS_TIMEOUT"

#. type: Plain text
#: ../doc/03-cli.md:1228
msgid ""
"This env var controls the time Composer waits for commands (such as git "
"commands) to finish executing. The default value is 300 seconds (5 minutes)."
msgstr ""
"この環境変数はコマンド（例えばgitコマンド）が実行終了するまでの待機時間を制御"
"します。既定値は300秒（5分）です。"

#. type: Title ###
#: ../doc/03-cli.md:1229
#, no-wrap
msgid "COMPOSER_ROOT_VERSION"
msgstr "COMPOSER_ROOT_VERSION"

#. type: Plain text
#: ../doc/03-cli.md:1233
msgid ""
"By setting this var you can specify the version of the root package, if it "
"cannot be guessed from VCS info and is not present in `composer.json`."
msgstr ""
"この変数を設定することで、根幹パッケージのバージョンがVCSの情報から推測でき"
"ず、`composer.json`にもないときに、そのバージョンを指定できます。"

#. type: Title ###
#: ../doc/03-cli.md:1234
#, no-wrap
msgid "COMPOSER_VENDOR_DIR"
msgstr "COMPOSER_VENDOR_DIR"

#. type: Plain text
#: ../doc/03-cli.md:1238
msgid ""
"By setting this var you can make Composer install the dependencies into a "
"directory other than `vendor`."
msgstr ""
"この変数を設定することでComposerに依存関係を`vendor`以外のディレクトリにイン"
"ストールさせられます。"

#. type: Title ###
#: ../doc/03-cli.md:1239
#, no-wrap
msgid "COMPOSER_RUNTIME_ENV"
msgstr "COMPOSER_RUNTIME_ENV"

#. type: Plain text
#: ../doc/03-cli.md:1247
msgid ""
"This lets you hint under which environment Composer is running, which can "
"help Composer work around some environment specific issues. The only value "
"currently supported is `virtualbox`, which then enables some short `sleep()` "
"calls to wait for the filesystem to have written files properly before we "
"attempt reading them. You can set the environment variable if you use "
"Vagrant or VirtualBox and experience issues with files not being found "
"during installation even though they should be present."
msgstr ""
"これによりどの環境でComposerが走っているのかの手掛かりが得られ、Composerで何"
"らかの環境特有の問題を回避するための助けになります。\n"
"現在対応している唯一の値は`virtualbox`で、こうするといくつかの短い`sleep()`呼"
"び出しを有効にして、ファイルシステムが適切にファイルに書き込むのを待ってから"
"そのファイルを読み込むようにします。\n"
"VagrantやVirtualboxを使っていてファイルが存在しているのにも関わらずインストー"
"ル時にファイルがない旨問題に遭遇したときは、この環境変数を設定すると良いで"
"しょう。"

#. type: Title ###
#: ../doc/03-cli.md:1248
#, no-wrap
msgid "http_proxy or HTTP_PROXY"
msgstr "http_proxyやHTTP_PROXY"

#. type: Title ###
#: ../doc/03-cli.md:1249
#, no-wrap
msgid "HTTP_PROXY_REQUEST_FULLURI"
msgstr "HTTP_PROXY_REQUEST_FULLURI"

#. type: Title ###
#: ../doc/03-cli.md:1250
#, no-wrap
msgid "HTTPS_PROXY_REQUEST_FULLURI"
msgstr "HTTPS_PROXY_REQUEST_FULLURI"

#. type: Title ###
#: ../doc/03-cli.md:1251
#, no-wrap
msgid "no_proxy or NO_PROXY"
msgstr "no_proxyやNO_PROXY"

#. type: Plain text
#: ../doc/03-cli.md:1255
msgid ""
"See the [proxy documentation](faqs/how-to-use-composer-behind-a-proxy.md) "
"for more details on how to use proxy env vars."
msgstr ""
"プロキシの環境変数の使い方についての詳細は、[プロキシのドキュメント](faqs/"
"how-to-use-composer-behind-a-proxy.md)を参照してください。"

#. type: Title ###
#: ../doc/03-cli.md:1256
#, no-wrap
msgid "COMPOSER_AUDIT_ABANDONED"
msgstr "COMPOSER_AUDIT_ABANDONED"

#. type: Plain text
#: ../doc/03-cli.md:1260
msgid ""
"Set to `ignore`, `report` or `fail` to override the [audit.abandoned](06-"
"config.md#abandoned)  config option."
msgstr ""
"`ignore`、`report`、`fail`に設定すると、[audit.abandoned](06-config."
"md#abandoned)構成オプションをオーバーライドします。"

#. type: Title ###
#: ../doc/03-cli.md:1261
#, no-wrap
msgid "COMPOSER_MAX_PARALLEL_HTTP"
msgstr "COMPOSER_MAX_PARALLEL_HTTP"

#. type: Plain text
#: ../doc/03-cli.md:1267
msgid ""
"Set to an integer to configure how many files can be downloaded in parallel. "
"This defaults to 12 and must be between 1 and 50. If your proxy has issues "
"with concurrency maybe you want to lower this. Increasing it should "
"generally not result in performance gains."
msgstr ""
"整数を指定し、並列で何個のファイルをダウンロードするか設定します。\n"
"既定で12になっており、1から50の間でなければいけません。\n"
"プロキシに並列性の問題があるときはこの値を下げたいかもしれません。\n"
"この値を増加させても一般には効率性が上がる結果にはならないでしょう。"

#. type: Title ###
#: ../doc/03-cli.md:1268
#, no-wrap
msgid "COMPOSER_IPRESOLVE"
msgstr "COMPOSER_IPRESOLVE"

#. type: Plain text
#: ../doc/03-cli.md:1272
msgid ""
"Set to `4` or `6` to force IPv4 or IPv6 DNS resolution. This only works when "
"the curl extension is used for downloads."
msgstr ""
"`4`ないし`6`に設定するとそれぞれIPv4ないしIPv6の解決を強制します。\n"
"ダウンロード用にcurl拡張が使用されている場合にのみ機能します。"

#. type: Title ###
#: ../doc/03-cli.md:1273
#, no-wrap
msgid "COMPOSER_SELF_UPDATE_TARGET"
msgstr "COMPOSER_SELF_UPDATE_TARGET"

#. type: Plain text
#: ../doc/03-cli.md:1276
msgid ""
"If set, makes the self-update command write the new Composer phar file into "
"that path instead of overwriting itself. Useful for updating Composer on a "
"read-only filesystem."
msgstr ""
"設定した場合、self-updateコマンドが元あるファイルではなく与えられたパスに新し"
"いComposerのpharファイルを書き込むようにします。読み込み専用のファイルシステ"
"ムでComposerを更新するときに便利です。"

#. type: Title ###
#: ../doc/03-cli.md:1277
#, no-wrap
msgid "COMPOSER_DISABLE_NETWORK"
msgstr "COMPOSER_DISABLE_NETWORK"

#. type: Plain text
#: ../doc/03-cli.md:1281
msgid ""
"If set to `1`, disables network access (best effort). This can be used for "
"debugging or to run Composer on a plane or a starship with poor connectivity."
msgstr ""
"`1`に設定するとネットワークアクセスを（最大限の努力で）無効にします。この変数"
"はComposerをデバッグしたり貧弱な接続環境下で走らせたりするのに使えます。"

#. type: Plain text
#: ../doc/03-cli.md:1284
msgid ""
"If set to `prime`, GitHub VCS repositories will prime the cache, so it can "
"then be used fully offline with `1`."
msgstr ""
"`prime`に設定した場合、GitHub VCSリポジトリはキャッシュに前もって溜め込んでお"
"くため、`1`で完全にオフラインで使えるようになります。"

#. type: Title ###
#: ../doc/03-cli.md:1285
#, no-wrap
msgid "COMPOSER_DEBUG_EVENTS"
msgstr "COMPOSER_DEBUG_EVENTS"

#. type: Plain text
#: ../doc/03-cli.md:1289
msgid ""
"If set to `1`, outputs information about events being dispatched, which can "
"be useful for plugin authors to identify what is firing when exactly."
msgstr ""
"`1`に設定するとディスパッチされたイベントについての情報を出力します。プラグイ"
"ンの作者にとって何が厳密にどの時点で発火しているのか特定するのに便利かもしれ"
"ません。"

#. type: Title ###
#: ../doc/03-cli.md:1290
#, no-wrap
msgid "COMPOSER_NO_AUDIT"
msgstr "COMPOSER_NO_AUDIT"

#. type: Plain text
#: ../doc/03-cli.md:1293
msgid ""
"If set to `1`, it is the equivalent of passing the `--no-audit` option to "
"`require`, `update`, `remove` or `create-project` command."
msgstr ""
"`1`に設定すると、`require`、`update`、`remove`、`create-project`コマンドに`--"
"no-audit`コマンドを渡すことと等価になります。"

#. type: Title ###
#: ../doc/03-cli.md:1294
#, no-wrap
msgid "COMPOSER_NO_DEV"
msgstr "COMPOSER_NO_DEV"

#. type: Plain text
#: ../doc/03-cli.md:1299
#, no-wrap
msgid ""
"If set to `1`, it is the equivalent of passing the `--update-no-dev` option to `require`\n"
" or the `--no-dev` option to `install` or `update`.  You can override this for a single\n"
"command by setting `COMPOSER_NO_DEV=0`.\n"
msgstr ""
"`1`に設定すると`--update-no-dev`を`require`に渡したり`install`、`update`に`--no-dev`オプションを渡すのと等価になります。\n"
"`COMPOSER_NO_DEV=0`を設定することで1回のコマンドについてこの設定を上書きできます。\n"

#. type: Title ###
#: ../doc/03-cli.md:1300
#, no-wrap
msgid "COMPOSER_PREFER_STABLE"
msgstr "COMPOSER_PREFER_STABLE"

#. type: Plain text
#: ../doc/03-cli.md:1304
msgid ""
"If set to `1`, it is the equivalent of passing the `--prefer-stable` option "
"to `update` or `require`."
msgstr ""
"`1`に設定すると`update`や`require`に`--prefer-stable`オプションを渡すことと等"
"価になります。"

#. type: Title ###
#: ../doc/03-cli.md:1305
#, no-wrap
msgid "COMPOSER_PREFER_LOWEST"
msgstr "COMPOSER_PREFER_LOWEST"

#. type: Plain text
#: ../doc/03-cli.md:1309
msgid ""
"If set to `1`, it is the equivalent of passing the `--prefer-lowest` option "
"to `update` or `require`."
msgstr ""
"`1`に設定すると`update`や`require`に`--prefer-lowest`オプションを渡すことと等"
"価になります。"

#. type: Title ###
#: ../doc/03-cli.md:1310
#, no-wrap
msgid "COMPOSER_MINIMAL_CHANGES"
msgstr "COMPOSER_MINIMAL_CHANGES"

#. type: Plain text
#: ../doc/03-cli.md:1314
msgid ""
"If set to `1`, it is the equivalent of passing the `--minimal-changes` "
"option to `update`, `require` or `remove`."
msgstr ""
"`1`に設定すると、`update`や`require`や`remove`に`--minimal-changes`オプション"
"を渡すことと等価になります。"

#. type: Title ###
#: ../doc/03-cli.md:1315
#, no-wrap
msgid "COMPOSER_IGNORE_PLATFORM_REQ or COMPOSER_IGNORE_PLATFORM_REQS"
msgstr "COMPOSER_IGNORE_PLATFORM_REQやCOMPOSER_IGNORE_PLATFORM_REQS"

#. type: Plain text
#: ../doc/03-cli.md:1319
msgid ""
"If `COMPOSER_IGNORE_PLATFORM_REQS` set to `1`, it is the equivalent of "
"passing the `--ignore-platform-reqs` argument.  Otherwise, specifying a "
"comma separated list in `COMPOSER_IGNORE_PLATFORM_REQ` will ignore those "
"specific requirements."
msgstr ""
"`COMPOSER_IGNORE_PLATFORM_REQS`を`1`に設定すると、`--ignore-platform-reqs`引"
"数を渡すことと等価になります。\n"
"他方で`COMPOSER_IGNORE_PLATFORM_REQ`でコンマ区切りのリストを指定すると、これ"
"らの特定の要件を無視します。"

#. type: Plain text
#: ../doc/03-cli.md:1321
msgid ""
"For example, if a development workstation will never run database queries, "
"this can be used to ignore the requirement for the database extensions to be "
"available. If you set `COMPOSER_IGNORE_PLATFORM_REQ=ext-oci8`, then composer "
"will allow packages to be installed even if the `oci8` PHP extension is not "
"enabled."
msgstr ""
"例えば開発ワークステーションが全くデータベースクエリを走らせない場合、データ"
"ベースの要件が利用できることの要件を無視するのに使うことができます。"
"`COMPOSER_IGNORE_PLATFORM_REQ=ext-oci8`を設定すると、Composerは`oci8`PHP拡張"
"が有効になっていなくともパッケージをインストールします。"

#. type: Plain text
#: ../doc/03-cli.md:1322
msgid "&larr; [Libraries](02-libraries.md)  | [Schema](04-schema.md) &rarr;"
msgstr ""
"&larr; [ライブラリ](02-libraries.md)  | [スキーマ](04-schema.md) &rarr;"

#. type: Title #
#: ../doc/04-schema.md:1
#, no-wrap
msgid "The composer.json schema"
msgstr "composer.jsonのスキーマ"

#. type: Plain text
#: ../doc/04-schema.md:4
msgid ""
"This chapter will explain all of the fields available in `composer.json`."
msgstr ""
"この章では`composer.json`で利用できる全てのフィールドについて説明します。"

#. type: Title ##
#: ../doc/04-schema.md:5
#, no-wrap
msgid "JSON schema"
msgstr "JSONスキーマ"

#. type: Plain text
#: ../doc/04-schema.md:10
msgid ""
"We have a [JSON schema](https://json-schema.org) that documents the format "
"and can also be used to validate your `composer.json`. In fact, it is used "
"by the `validate` command. You can find it at: https://getcomposer.org/"
"schema.json"
msgstr ""
"形式をドキュメント化する[JSON schema](https://json-schema.org)があり、"
"`composer.json`を検証するのにも使えます。実際、`validate`コマンドによって使わ"
"れています。 https://getcomposer.org/schema.json から取得できます。"

#. type: Title ##
#: ../doc/04-schema.md:11
#, no-wrap
msgid "Root Package"
msgstr "根幹パッケージ"

#. type: Plain text
#: ../doc/04-schema.md:16
msgid ""
"The root package is the package defined by the `composer.json` at the root "
"of your project. It is the main `composer.json` that defines your project "
"requirements."
msgstr ""
"根幹パッケージとは、`composer.json`でプロジェクトの根幹に定義されたパッケージ"
"のことです。\n"
"プロジェクトの要件を定義しているのが主眼の`composer.json`なのです。"

#. type: Plain text
#: ../doc/04-schema.md:21
msgid ""
"Certain fields only apply when in the root package context. One example of "
"this is the `config` field. Only the root package can define configuration.  "
"The config of dependencies is ignored. This makes the `config` field `root-"
"only`."
msgstr ""
"フィールドの中には根幹パッケージの文脈でのみ適用されるものがあります。\n"
"この一例は`config`フィールドです。\n"
"根幹パッケージのみが設定を定義できます。\n"
"依存関係の設定は無視されます。\n"
"このようにして`config`フィールドは`root-only`になるのです。"

#. type: Plain text
#: ../doc/04-schema.md:26
#, no-wrap
msgid ""
"> **Note:** A package can be the root package or not, depending on the context.\n"
"> For example, if your project depends on the `monolog` library, your project\n"
"> is the root package. However, if you clone `monolog` from GitHub in order to\n"
"> fix a bug in it, then `monolog` is the root package.\n"
msgstr ""
"> **補足：**\n"
"> パッケージは文脈によって根幹パッケージになったりならなかったりします。\n"
"> 例えばプロジェクトが`monolog`ライブラリに依存している場合、そのプロジェクトは根幹パッケージです。\n"
"> しかしもし不具合修正のためにGitHubから`monolog`をクローンしてきたとすれば、`monolog`が根幹パッケージになります。\n"

#. type: Title ##
#: ../doc/04-schema.md:27
#, no-wrap
msgid "Properties"
msgstr "プロパティ"

#. type: Bullet: '* '
#: ../doc/04-schema.md:29 ../doc/05-repositories.md:105
#, no-wrap
msgid "name"
msgstr "name"

#. type: Plain text
#: ../doc/04-schema.md:33
msgid ""
"The name of the package. It consists of vendor name and project name, "
"separated by `/`. Examples:"
msgstr ""
"パッケージ名です。ベンダー名とプロジェクト名から構成され、`/`で区切られます。"
"例えば："

#. type: Bullet: '* '
#: ../doc/04-schema.md:36
msgid "monolog/monolog"
msgstr "monolog/monolog"

#. type: Bullet: '* '
#: ../doc/04-schema.md:36
msgid "igorw/event-source"
msgstr "igorw/event-source"

#. type: Plain text
#: ../doc/04-schema.md:39
msgid ""
"The name must be lowercase and consist of words separated by `-`, `.` or "
"`_`.  The complete name should match `^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9]"
"(([_.]|-{1,2})?[a-z0-9]+)*$`."
msgstr ""
"名前は小文字で、単語は`-`や`.`や`_`で区切られていなくてはなりません。\n"
"名前全体は`^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9](([_.]|-{1,2})?[a-z0-9]+)*$`に"
"照合します。"

#. type: Plain text
#: ../doc/04-schema.md:41
msgid "The `name` property is required for published packages (libraries)."
msgstr "`name`プロパティは公開されるパッケージ（ライブラリ）には必須です。"

#. type: Plain text
#: ../doc/04-schema.md:43
#, no-wrap
msgid "> **Note:** Before Composer version 2.0, a name could contain any character, including white spaces.\n"
msgstr "> **補足：** Composerのバージョン2.0より前は、名前には空白込みでどんな文字も含められました。\n"

#. type: Title ###
#: ../doc/04-schema.md:44
#, no-wrap
msgid "description"
msgstr "description"

#. type: Plain text
#: ../doc/04-schema.md:47
msgid "A short description of the package. Usually this is one line long."
msgstr ""
"パッケージの短い説明です。\n"
"大抵1行分の長さです。"

#. type: Plain text
#: ../doc/04-schema.md:49
msgid "Required for published packages (libraries)."
msgstr "公開されるパッケージ（ライブラリ）には必須です。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:50 ../doc/05-repositories.md:105
#, no-wrap
msgid "version"
msgstr "version"

#. type: Plain text
#: ../doc/04-schema.md:54
msgid ""
"The version of the package. In most cases this is not required and should be "
"omitted (see below)."
msgstr ""
"パッケージのバージョンです。\n"
"殆どの場合は必須でなく、省略すべきです（後述）。"

#. type: Plain text
#: ../doc/04-schema.md:58
msgid ""
"This must follow the format of `X.Y.Z` or `vX.Y.Z` with an optional suffix "
"of `-dev`, `-patch` (`-p`), `-alpha` (`-a`), `-beta` (`-b`) or `-RC`.  The "
"patch, alpha, beta and RC suffixes can also be followed by a number."
msgstr ""
"`X.Y.Z`や`vX.Y.Z`の形式に従っていなければなりません。\n"
"オプションで`-dev`、`-patch` (`-p`)、`-alpha` (`-a`)、`-beta` (`-b`)、`-RC`を"
"接尾辞に付けても構いません。\n"
"また、patch、alpha、beta、RCの接尾辞には数字を続けても大丈夫です。"

#. type: Plain text
#: ../doc/04-schema.md:60 ../doc/04-schema.md:118 ../doc/04-schema.md:969
#: ../doc/articles/versions.md:139 ../doc/articles/versions.md:213
msgid "Examples:"
msgstr "例："

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0"
msgstr "1.0.0"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.2"
msgstr "1.0.2"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.1.0"
msgstr "1.1.0"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "0.2.5"
msgstr "0.2.5"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-dev"
msgstr "1.0.0-dev"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-alpha3"
msgstr "1.0.0-alpha3"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-beta2"
msgstr "1.0.0-beta2"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-RC5"
msgstr "1.0.0-RC5"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "v2.0.4-p1"
msgstr "v2.0.4-p1"

#. type: Plain text
#: ../doc/04-schema.md:74
msgid ""
"Optional if the package repository can infer the version from somewhere, "
"such as the VCS tag name in the VCS repository. In that case it is also "
"recommended to omit it."
msgstr ""
"パッケージのリポジトリのどこかしらからバージョンが推測できるのであれば、この"
"プロパティはオプションです。\n"
"例えばVCSリポジトリのVCSのタグ名などです。\n"
"その場合は省略することが推奨されます。"

#. type: Plain text
#: ../doc/04-schema.md:78
#, no-wrap
msgid ""
"> **Note:** Packagist uses VCS repositories, so the statement above is very\n"
"> much true for Packagist as well. Specifying the version yourself will\n"
"> most likely end up creating problems at some point due to human error.\n"
msgstr ""
"> **補足：** PackagistはVCSリポジトリを使うため、上の記載はPackagistにも全く同じことが言えます。\n"
"> 自分でバージョンを指定すると、ほぼ確実にいつか手作業による誤りにより問題が生じることでしょう。\n"

#. type: Title ###
#: ../doc/04-schema.md:79
#, no-wrap
msgid "type"
msgstr "type"

#. type: Plain text
#: ../doc/04-schema.md:82
msgid "The type of the package. It defaults to `library`."
msgstr "パッケージの種別です。既定は`library`です。"

#. type: Plain text
#: ../doc/04-schema.md:88
msgid ""
"Package types are used for custom installation logic. If you have a package "
"that needs some special logic, you can define a custom type. This could be a "
"`symfony-bundle`, a `wordpress-plugin` or a `typo3-cms-extension`. These "
"types will all be specific to certain projects, and they will need to "
"provide an installer capable of installing packages of that type."
msgstr ""
"パッケージの種別は独自のインストールの仕組みに使われます。\n"
"何らかの特別な仕組みが必要なパッケージがあるとき、`symfony-bundle`、"
"`wordpress-plugin`、`typo3-cms-extension`といった独自の種別を定義できます。\n"
"これらの種別は全て特定のプロジェクトに特有のものであって、その種別のパッケー"
"ジのインストールができるようなインストーラを提供する必要があります。"

#. type: Plain text
#: ../doc/04-schema.md:90
msgid "Out of the box, Composer supports four types:"
msgstr "その中でも特にComposerは4つの種別に対応しています。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:108
msgid "**library:** This is the default. It will copy the files to `vendor`."
msgstr ""
"**library:**\n"
"既定です。\n"
"ファイルを`vendor`に複製します。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:108
msgid ""
"**project:** This denotes a project rather than a library. For example "
"application shells like the [Symfony standard edition](https://github.com/"
"symfony/symfony-standard), CMSs like the [Silverstripe installer](https://"
"github.com/silverstripe/silverstripe-installer)  or full fledged "
"applications distributed as packages. This can for example be used by IDEs "
"to provide listings of projects to initialize when creating a new workspace."
msgstr ""
"**project:**\n"
"ライブラリではなくプロジェクトであることを示します。\n"
"例えば[標準版Symfony](https://github.com/symfony/symfony-standard)のようなア"
"プリケーションのシェル、[Silverstripeインストーラ](https://github.com/"
"silverstripe/silverstripe-installer)のようなCMS、あるいはパッケージとして配布"
"される完全なアプリケーションがこれにあたります。\n"
"例として、IDEから新しいワークスペースを作る際に、初期化するプロジェクトの一覧"
"を提供するのに使えます。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:108
msgid ""
"**metapackage:** An empty package that contains requirements and will "
"trigger their installation, but contains no files and will not write "
"anything to the filesystem. As such, it does not require a dist or source "
"key to be installable."
msgstr ""
"**metapackage:**\n"
"要件を含む空のパッケージでありインストールの条件になりますが、ファイルを含ん"
"でおらずファイルシステムに何も書き込まないものです。\n"
"そうしたわけで、インストールできるdistやsourceキーを必要としません。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:108
msgid ""
"**composer-plugin:** A package of type `composer-plugin` may provide an "
"installer for other packages that have a custom type. Read more in the "
"[dedicated article](articles/custom-installers.md)."
msgstr ""
"**composer-plugin:**\n"
"種別`composer-plugin`のパッケージは独自の種別を持つ他のパッケージのインストー"
"ラを提供することがあります。\n"
"詳細は[専門記事](articles/custom-installers.md)を参照してください。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:108
msgid ""
"**php-ext** and **php-ext-zend**: These names are reserved for PHP extension "
"packages which are written in C. Do not use these types for packages written "
"in PHP."
msgstr ""
"**php-ext**と**php-ext-zend**：\n"
"これらの名前はCで書かれたPHPの拡張パッケージ用に予約されています。\n"
"これらの種別はPHPで書かれたパッケージ用に使わないでください。"

#. type: Plain text
#: ../doc/04-schema.md:111
msgid ""
"Only use a custom type if you need custom logic during installation. It is "
"recommended to omit this field and have it default to `library`."
msgstr ""
"インストール時に独自の仕組みが必要な場合にのみ独自の種別を使ってください。\n"
"このフィールドを省略し、既定の`library`にするのがお勧めです。"

#. type: Title ###
#: ../doc/04-schema.md:112
#, no-wrap
msgid "keywords"
msgstr "keywords"

#. type: Plain text
#: ../doc/04-schema.md:116
msgid ""
"An array of keywords that the package is related to. These can be used for "
"searching and filtering."
msgstr "パッケージに関係するキーワードの配列です。検索と絞り込みに使えます。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:124
msgid "logging"
msgstr "logging"

#. type: Bullet: '- '
#: ../doc/04-schema.md:124
msgid "events"
msgstr "events"

#. type: Bullet: '- '
#: ../doc/04-schema.md:124
msgid "database"
msgstr "database"

#. type: Bullet: '- '
#: ../doc/04-schema.md:124
msgid "redis"
msgstr "redis"

#. type: Bullet: '- '
#: ../doc/04-schema.md:124
msgid "templating"
msgstr "templating"

#. type: Plain text
#: ../doc/04-schema.md:128
#, no-wrap
msgid ""
"> **Note**: Some special keywords trigger `composer require` without the\n"
"> `--dev` option to prompt users if they would like to add these packages to\n"
"> `require-dev` instead of `require`. These are: `dev`, `testing`, `static analysis`.\n"
msgstr ""
"> **補足**：`--dev`オプション無しで`composer require`するようにし、パッケージを`require`ではなく`require-dev`に追加しても良いか利用者にプロンプトを出す特別なキーワードがあります。\n"
"`dev`、`testing`、`static analysis`がそれです。\n"

#. type: Plain text
#: ../doc/04-schema.md:133
#, no-wrap
msgid ""
"> **Note**: The range of characters allowed inside the string is restricted to\n"
"> unicode letters or numbers, space `\" \"`, dot `.`, underscore `_` and dash `-`. (Regex: `'{^[\\p{N}\\p{L} ._-]+$}u'`)\n"
"> Using other characters will emit a warning when running `composer validate` and\n"
"> will cause the package to fail updating on Packagist.org.\n"
msgstr ""
"> **補足**：文字列内で許される文字の範囲には、ユニコードの英数字、空白`\" \"`、ドット`.`、下線`_`、ダッシュ`-`（正規表現：`'{^[\\p{N}\\p{L} ._-]+$}u'`）の制限があります。\n"
"> その他の文字を使うと、`composer validate`を走らせるときに警告が出ます。\n"
"> またパッケージのPackagist.orgへの更新が失敗する原因となります。\n"

#. type: Plain text
#: ../doc/04-schema.md:135 ../doc/04-schema.md:141 ../doc/04-schema.md:149
#: ../doc/04-schema.md:157 ../doc/04-schema.md:275 ../doc/04-schema.md:308
#: ../doc/04-schema.md:743 ../doc/04-schema.md:774 ../doc/04-schema.md:910
#: ../doc/04-schema.md:919 ../doc/04-schema.md:961 ../doc/04-schema.md:977
#: ../doc/04-schema.md:994 ../doc/04-schema.md:1029
msgid "Optional."
msgstr "省略可能です。"

#. type: Title ###
#: ../doc/04-schema.md:136
#, no-wrap
msgid "homepage"
msgstr "homepage"

#. type: Plain text
#: ../doc/04-schema.md:139
msgid "A URL to the website of the project."
msgstr "プロジェクトのwebサイトへのURLです。"

#. type: Title ###
#: ../doc/04-schema.md:142
#, no-wrap
msgid "readme"
msgstr "readme"

#. type: Plain text
#: ../doc/04-schema.md:145
msgid "A relative path to the readme document. Defaults to `README.md`."
msgstr ""
"readmeドキュメントへの相対パスです。\n"
"既定では`README.md`です。"

#. type: Plain text
#: ../doc/04-schema.md:147
msgid ""
"This is mainly useful for packages not on GitHub, as for GitHub packages "
"Packagist.org will use the readme API to fetch the one detected by GitHub."
msgstr ""
"主にパッケージがGitHubにないときに有用です。\n"
"GitHubのパッケージの場合、Packagist.orgではGitHub側で検出されたものを取得する"
"readme APIを使うからです。"

#. type: Title ###
#: ../doc/04-schema.md:150
#, no-wrap
msgid "time"
msgstr "time"

#. type: Plain text
#: ../doc/04-schema.md:153
msgid "Release date of the version."
msgstr "当該バージョンのリリース日です。"

#. type: Plain text
#: ../doc/04-schema.md:155
msgid "Must be in `YYYY-MM-DD` or `YYYY-MM-DD HH:MM:SS` format."
msgstr "`YYYY-MM-DD`または`YYYY-MM-DD HH:MM:SS`の形式でなければなりません。"

#. type: Title ###
#: ../doc/04-schema.md:158
#, no-wrap
msgid "license"
msgstr "license"

#. type: Plain text
#: ../doc/04-schema.md:161
msgid ""
"The license of the package. This can be either a string or an array of "
"strings."
msgstr ""
"パッケージの利用許諾です。\n"
"文字列または文字列の配列にできます。"

#. type: Plain text
#: ../doc/04-schema.md:163
msgid ""
"The recommended notation for the most common licenses is (alphabetical):"
msgstr "最頻出の利用許諾についての推奨される記法は以下の通り（辞書順）。"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "Apache-2.0"
msgstr "Apache-2.0"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "BSD-2-Clause"
msgstr "BSD-2-Clause"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "BSD-3-Clause"
msgstr "BSD-3-Clause"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "BSD-4-Clause"
msgstr "BSD-4-Clause"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "GPL-2.0-only / GPL-2.0-or-later"
msgstr "GPL-2.0-only / GPL-2.0-or-later"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "GPL-3.0-only / GPL-3.0-or-later"
msgstr "GPL-3.0-only / GPL-3.0-or-later"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "LGPL-2.1-only / LGPL-2.1-or-later"
msgstr "LGPL-2.1-only / LGPL-2.1-or-later"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "LGPL-3.0-only / LGPL-3.0-or-later"
msgstr "LGPL-3.0-only / LGPL-3.0-or-later"

#. type: Bullet: '- '
#: ../doc/04-schema.md:173
msgid "MIT"
msgstr "MIT"

#. type: Plain text
#: ../doc/04-schema.md:176
msgid ""
"Optional, but it is highly recommended to supply this. More identifiers are "
"listed at the [SPDX Open Source License Registry](https://spdx.org/"
"licenses/)."
msgstr ""
"オプションにはなりますが、このプロパティを付けることは強く推奨されます。他の"
"識別子は[SPDX Open Source License Registry](https://spdx.org/licenses/)に一覧"
"になっています。"

#. type: Plain text
#: ../doc/04-schema.md:178
#, no-wrap
msgid "> **Note:** For closed-source software, you may use `\"proprietary\"` as the license identifier.\n"
msgstr ""
"> **Note:**\n"
"> ソースが閉鎖的なソフトウェアについては、利用許諾の識別子として `\"proprietary\"` を使うことができます。\n"

#. type: Plain text
#: ../doc/04-schema.md:180
msgid "An Example:"
msgstr "一例："

#. type: Fenced code block (json)
#: ../doc/04-schema.md:181
#, no-wrap
msgid ""
"{\n"
"    \"license\": \"MIT\"\n"
"}\n"
msgstr ""
"{\n"
"    \"license\": \"MIT\"\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:189
msgid ""
"For a package, when there is a choice between licenses (\"disjunctive "
"license\"), multiple can be specified as an array."
msgstr ""
"あるパッケージについて、複数の利用許諾から選択できる場合（「離接的利用許"
"諾」）、複数のものを配列として指定できます。"

#. type: Plain text
#: ../doc/04-schema.md:191
msgid "An Example for disjunctive licenses:"
msgstr "離接的利用許諾の例です。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:192
#, no-wrap
msgid ""
"{\n"
"    \"license\": [\n"
"        \"LGPL-2.1-only\",\n"
"        \"GPL-3.0-or-later\"\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"license\": [\n"
"        \"LGPL-2.1-only\",\n"
"        \"GPL-3.0-or-later\"\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:202
msgid ""
"Alternatively they can be separated with \"or\" and enclosed in parentheses;"
msgstr "代わりに「or」で区切って括弧で囲むこともできます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:203
#, no-wrap
msgid ""
"{\n"
"    \"license\": \"(LGPL-2.1-only or GPL-3.0-or-later)\"\n"
"}\n"
msgstr ""
"{\n"
"    \"license\": \"(LGPL-2.1-only or GPL-3.0-or-later)\"\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:211
msgid ""
"Similarly, when multiple licenses need to be applied (\"conjunctive "
"license\"), they should be separated with \"and\" and enclosed in "
"parentheses."
msgstr ""
"これに似ていますが、複数の利用許諾が適用される必要があるときは（「結合的利用"
"許諾」）、「and」で区切って（）で囲むことになります。"

#. type: Title ###
#: ../doc/04-schema.md:212
#, no-wrap
msgid "authors"
msgstr "authors"

#. type: Plain text
#: ../doc/04-schema.md:215
msgid "The authors of the package. This is an array of objects."
msgstr ""
"パッケージの作者です。\n"
"オブジェクトの配列です。"

#. type: Plain text
#: ../doc/04-schema.md:217
msgid "Each author object can have following properties:"
msgstr "それぞれの作者オブジェクトは以下のプロパティを持つことができます。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:222
msgid "**name:** The author's name. Usually their real name."
msgstr "**name:** 作者名です。大抵は実名です。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:222
msgid "**email:** The author's email address."
msgstr "**email:** 作者のEメールアドレスです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:222
msgid "**homepage:** URL to the author's website."
msgstr "**homepage:** 作者のwebサイトへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:222
msgid ""
"**role:** The author's role in the project (e.g. developer or translator)"
msgstr ""
"**role:**\n"
"プロジェクトに於ける作者の役割です（例：開発者や翻訳者）"

#. type: Plain text
#: ../doc/04-schema.md:224 ../doc/04-schema.md:264 ../doc/04-schema.md:287
#: ../doc/04-schema.md:1014 ../doc/05-repositories.md:165
#: ../doc/05-repositories.md:262
msgid "An example:"
msgstr "一例："

#. type: Fenced code block (json)
#: ../doc/04-schema.md:225
#, no-wrap
msgid ""
"{\n"
"    \"authors\": [\n"
"        {\n"
"            \"name\": \"Nils Adermann\",\n"
"            \"email\": \"naderman@naderman.de\",\n"
"            \"homepage\": \"https://www.naderman.de\",\n"
"            \"role\": \"Developer\"\n"
"        },\n"
"        {\n"
"            \"name\": \"Jordi Boggiano\",\n"
"            \"email\": \"j.boggiano@seld.be\",\n"
"            \"homepage\": \"https://seld.be\",\n"
"            \"role\": \"Developer\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"authors\": [\n"
"        {\n"
"            \"name\": \"Nils Adermann\",\n"
"            \"email\": \"naderman@naderman.de\",\n"
"            \"homepage\": \"https://www.naderman.de\",\n"
"            \"role\": \"Developer\"\n"
"        },\n"
"        {\n"
"            \"name\": \"Jordi Boggiano\",\n"
"            \"email\": \"j.boggiano@seld.be\",\n"
"            \"homepage\": \"https://seld.be\",\n"
"            \"role\": \"Developer\"\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:245
msgid "Optional, but highly recommended."
msgstr "省略可能なプロパティですが、付けることを強く推奨します。"

#. type: Title ###
#: ../doc/04-schema.md:246
#, no-wrap
msgid "support"
msgstr "support"

#. type: Plain text
#: ../doc/04-schema.md:249
msgid "Various information to get support about the project."
msgstr "プロジェクトについてのサポートを得るための様々な情報です。"

#. type: Plain text
#: ../doc/04-schema.md:251
msgid "Support information includes the following:"
msgstr "サポート情報には以下が含まれます。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**email:** Email address for support."
msgstr "**email:** サポート用Eメールアドレスです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**issues:** URL to the issue tracker."
msgstr "**issues:** 課題管理表へのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**forum:** URL to the forum."
msgstr "**forum:** フォーラムへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**wiki:** URL to the wiki."
msgstr "**wiki:** wikiへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**irc:** IRC channel for support, as irc://server/channel."
msgstr "**irc:** <irc://server/channel>のような、サポート用IRCチャンネルです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**source:** URL to browse or download the sources."
msgstr "**source:** ソースを閲覧したりダウンロードしたりするURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**docs:** URL to the documentation."
msgstr "**docs:** ドキュメントへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**rss:** URL to the RSS feed."
msgstr "**rss:** RSSフィードへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**chat:** URL to the chat channel."
msgstr "**chat:** チャットチャンネルへのURLです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:262
msgid "**security:** URL to the vulnerability disclosure policy (VDP)."
msgstr ""
"**security:** 脆弱性公表ポリシー (vulnerability disclosure policy; VDP) への"
"URLです。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:265
#, no-wrap
msgid ""
"{\n"
"    \"support\": {\n"
"        \"email\": \"support@example.org\",\n"
"        \"irc\": \"irc://irc.freenode.org/composer\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"support\": {\n"
"        \"email\": \"support@example.org\",\n"
"        \"irc\": \"irc://irc.freenode.org/composer\"\n"
"    }\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:276
#, no-wrap
msgid "funding"
msgstr "funding"

#. type: Plain text
#: ../doc/04-schema.md:280
msgid ""
"A list of URLs to provide funding to the package authors for maintenance and "
"development of new functionality."
msgstr ""
"パッケージの作者が維持管理と新しい機能の開発を行えるよう、投資を提供するため"
"のURLの一覧です。"

#. type: Plain text
#: ../doc/04-schema.md:282
msgid "Each entry consists of the following"
msgstr "それぞれの項目は以下のものからなります。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:285
msgid ""
"**type:** The type of funding, or the platform through which funding can be "
"provided, e.g. patreon, opencollective, tidelift or github."
msgstr ""
"**type:** 投資の種別、または投資を行えるプラットフォームです。例えばpatreon、"
"opencollective、tidelift、githubです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:285
msgid "**url:** URL to a website with details, and a way to fund the package."
msgstr ""
"**url:**\n"
"詳細が記載されたwebサイトへのURLと、パッケージに投資する方法です。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:288
#, no-wrap
msgid ""
"{\n"
"    \"funding\": [\n"
"        {\n"
"            \"type\": \"patreon\",\n"
"            \"url\": \"https://www.patreon.com/phpdoctrine\"\n"
"        },\n"
"        {\n"
"            \"type\": \"tidelift\",\n"
"            \"url\": \"https://tidelift.com/subscription/pkg/packagist-doctrine_doctrine-bundle\"\n"
"        },\n"
"        {\n"
"            \"type\": \"other\",\n"
"            \"url\": \"https://www.doctrine-project.org/sponsorship.html\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"funding\": [\n"
"        {\n"
"            \"type\": \"patreon\",\n"
"            \"url\": \"https://www.patreon.com/phpdoctrine\"\n"
"        },\n"
"        {\n"
"            \"type\": \"tidelift\",\n"
"            \"url\": \"https://tidelift.com/subscription/pkg/packagist-doctrine_doctrine-bundle\"\n"
"        },\n"
"        {\n"
"            \"type\": \"other\",\n"
"            \"url\": \"https://www.doctrine-project.org/sponsorship.html\"\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:309
#, no-wrap
msgid "Package links"
msgstr "パッケージのリンク"

#. type: Plain text
#: ../doc/04-schema.md:314
msgid ""
"All of the following take an object which maps package names to versions of "
"the package via version constraints. Read more about versions [here]"
"(articles/versions.md)."
msgstr ""
"以下の全ては、バージョン制約を介してパッケージ名とパッケージのバージョンを対"
"応付けるオブジェクトを取ります。\n"
"バージョンについての詳細は[こちら](articles/versions.md)をお読みください。"

#. type: Plain text
#: ../doc/04-schema.md:316 ../doc/04-schema.md:335 ../doc/04-schema.md:349
#: ../doc/04-schema.md:371 ../doc/04-schema.md:396 ../doc/04-schema.md:483
#: ../doc/04-schema.md:520 ../doc/04-schema.md:567 ../doc/04-schema.md:627
#: ../doc/04-schema.md:639 ../doc/04-schema.md:655 ../doc/04-schema.md:686
#: ../doc/04-schema.md:714 ../doc/04-schema.md:735 ../doc/04-schema.md:826
#: ../doc/04-schema.md:931 ../doc/04-schema.md:948 ../doc/06-config.md:451
msgid "Example:"
msgstr "例："

#. type: Fenced code block (json)
#: ../doc/04-schema.md:317
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:326
msgid "All links are optional fields."
msgstr "全てのリンクは省略可能なフィールドです。"

#. type: Plain text
#: ../doc/04-schema.md:333
msgid ""
"`require` and `require-dev` additionally support _stability flags_ ([root-"
"only](04-schema.md#root-package)).  They take the form "
"\"_constraint_@_stability flag_\".  These allow you to further restrict or "
"expand the stability of a package beyond the scope of the [minimum-stability]"
"(#minimum-stability) setting. You can apply them to a constraint, or apply "
"them to an empty _constraint_ if you want to allow unstable packages of a "
"dependency for example."
msgstr ""
"`require`と`require-dev`は追加で*安定性フラグ*（[根幹限定](04-schema.md#root-"
"package)）に対応しています。\n"
"\"*constraint*@*stability flag*\" の形式を取っています。\n"
"これらによりパッケージの安定性を、[最小安定性](#minimum-stability)の範疇を超"
"え、更に制限したり拡張したりできます。\n"
"こうしたフラグは制約や空の*制約*に適用できます。\n"
"後者は例えば依存関係に不安定なパッケージを許容したい場合などです。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:336
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*@beta\",\n"
"        \"acme/foo\": \"@dev\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*@beta\",\n"
"        \"acme/foo\": \"@dev\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:347
msgid ""
"If one of your dependencies has a dependency on an unstable package you need "
"to explicitly require it as well, along with its sufficient stability flag."
msgstr ""
"依存関係のうち、不安定なパッケージに依存しているものがあれば、同様に明示的に"
"必要安定性フラグと共に要件に加えなければなりません。"

#. type: Plain text
#: ../doc/04-schema.md:353
msgid ""
"Assuming `doctrine/doctrine-fixtures-bundle` requires `\"doctrine/data-"
"fixtures\": \"dev-master\"` then inside the root composer.json you need to "
"add the second line below to allow dev releases for the `doctrine/data-"
"fixtures` package :"
msgstr ""
"`doctrine/doctrine-fixtures-bundle`が`\"doctrine/data-fixtures\": \"dev-"
"master\"`を要件としているとすると、根幹のcomposer.jsonの中で以下の2行目を加え"
"て`doctrine/data-fixtures`パッケージの開発版リリースを許容する必要がありま"
"す。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:354
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"doctrine/doctrine-fixtures-bundle\": \"dev-master\",\n"
"        \"doctrine/data-fixtures\": \"@dev\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"doctrine/doctrine-fixtures-bundle\": \"dev-master\",\n"
"        \"doctrine/data-fixtures\": \"@dev\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:369
#, no-wrap
msgid ""
"`require` and `require-dev` additionally support explicit references (i.e.\n"
"commit) for dev versions to make sure they are locked to a given state, even\n"
"when you run update. These only work if you explicitly require a dev version\n"
"and append the reference with `#<ref>`. This is also a\n"
"[root-only](04-schema.md#root-package) feature and will be ignored in\n"
"dependencies.\n"
msgstr ""
"`require`と`require-dev`は追加で明示的な参照（つまりコミット）に対応しており、たとえ更新を走らせたとしても、開発版のバージョンが与えられた状態で確実に固定されているようにします。\n"
"明示的に開発版を要件にして、参照に`#<ref>`を付けたときにのみ動作します。\n"
"また[根幹限定](04-schema.md#root-package)の機能であり、依存関係では無視されます。\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:372
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"dev-master#2eb0c0978d290a1c45346a1955188929cb4e5db7\",\n"
"        \"acme/foo\": \"1.0.x-dev#abc123\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"dev-master#2eb0c0978d290a1c45346a1955188929cb4e5db7\",\n"
"        \"acme/foo\": \"1.0.x-dev#abc123\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:387
#, no-wrap
msgid ""
"> **Note:** This feature has severe technical limitations, as the\n"
"> composer.json metadata will still be read from the branch name you specify\n"
"> before the hash. You should therefore only use this as a temporary solution\n"
"> during development to remediate transient issues, until you can switch to\n"
"> tagged releases. The Composer team does not actively support this feature\n"
"> and will not accept bug reports related to it.\n"
msgstr ""
"> **補足：**\n"
"> この機能には厳しい技術的制約があり、composer.jsonのメタデータはハッシュの前に指定されたブランチ名から読み込んでしまいます。\n"
"> したがって、この機能は開発時に一時的に取る解決法とするべきです。\n"
"> 一時的な問題を矯正するための、タグ付けされたリリースに切り替えるまでの対処法なのです。\n"
"> Composerチームはこの機能に活発に対応しておらずこれに関するバグ報告を受け付けません。\n"

#. type: Plain text
#: ../doc/04-schema.md:391
msgid ""
"It is also possible to inline-alias a package constraint so that it matches "
"a constraint that it otherwise would not. For more information [see the "
"aliases article](articles/aliases.md)."
msgstr ""
"パッケージ制約をインラインエイリアスすることも可能で、そうでなければ合致しな"
"い制約に合致させられます。詳細については[エイリアスの記事を参照してください]"
"(articles/aliases.md)。"

#. type: Plain text
#: ../doc/04-schema.md:394
msgid ""
"`require` and `require-dev` also support references to specific PHP versions "
"and PHP extensions your project needs to run successfully."
msgstr ""
"`require`と`require-dev`はまた、プロジェクトを正常に走らせるために必要な特定"
"のPHPとPHPの拡張のバージョンとへの参照に対応しています。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:397
#, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"php\": \">=7.4\",\n"
"        \"ext-mbstring\": \"*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"require\": {\n"
"        \"php\": \">=7.4\",\n"
"        \"ext-mbstring\": \"*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:416
#, no-wrap
msgid ""
"> **Note:** It is important to list PHP extensions your project requires.\n"
"> Not all PHP installations are created equal: some may miss extensions you\n"
"> may consider as standard (such as `ext-mysqli` which is not installed by\n"
"> default in Fedora/CentOS minimal installation systems). Failure to list\n"
"> required PHP extensions may lead to a bad user experience: Composer will\n"
"> install your package without any errors but it will then fail at run-time.\n"
"> The `composer show --platform` command lists all PHP extensions available on\n"
"> your system. You may use it to help you compile the list of extensions you\n"
"> use and require. Alternatively you may use third party tools to analyze\n"
"> your project for the list of extensions used.\n"
msgstr ""
"> **補足：** プロジェクトが要件とするPHP拡張を一覧にすることは重要です。\n"
"> PHPのインストールが全て同じようになされるとは限りません。\n"
"> 標準と考えている拡張が欠けているものもあるでしょう（例えば`ext-mysqli`は、Fedora/CentOSの最小インストールシステムでは既定ではインストールされません）。\n"
"> 必要なPHPの要件を一覧にし損ねると、利用者体験が悪化することに繋がります。\n"
"> Composerはパッケージをインストールするときは失敗することなく、実行時に失敗するからです。\n"
"> `composer show --platform`コマンドはシステムで利用できる全てのPHP拡張を一覧にします。\n"
"> これを使えば、使用する拡張の一覧をコンパイルして要件に加える補助になるでしょう。\n"
"> 代えてサードパーティーツールを使ってプロジェクトを解析し、使用されている拡張の一覧が得られるかもしれません。\n"

#. type: Title ####
#: ../doc/04-schema.md:417
#, no-wrap
msgid "require"
msgstr "require"

#. type: Plain text
#: ../doc/04-schema.md:421
msgid ""
"Map of packages required by this package. The package will not be installed "
"unless those requirements can be met."
msgstr ""
"このパッケージが必要とするパッケージの対応付けです。\n"
"これらの要件が満たされない限り、パッケージはインストールされません。"

#. type: Title ####
#: ../doc/04-schema.md:422
#, no-wrap
msgid "require-dev <span>([root-only](04-schema.md#root-package))</span>"
msgstr "require-dev <span>([根幹限定](04-schema.md#root-package))</span>"

#. type: Plain text
#: ../doc/04-schema.md:428
msgid ""
"Map of packages required for developing this package, or running tests, etc. "
"The dev requirements of the root package are installed by default.  Both "
"`install` or `update` support the `--no-dev` option that prevents dev "
"dependencies from being installed."
msgstr ""
"このパッケージを開発したり、テストを走らせたりなどするのに必要なパッケージへ"
"の対応付けです。\n"
"根幹パッケージの開発要件は既定でインストールされます。\n"
"`install`と`update`の両方とも`--no-dev`オプションに対応しており、開発依存関係"
"がインストールされるのを阻止できます。"

#. type: Title ####
#: ../doc/04-schema.md:429
#, no-wrap
msgid "conflict"
msgstr "conflict"

#. type: Plain text
#: ../doc/04-schema.md:433
msgid ""
"Map of packages that conflict with this version of this package. They will "
"not be allowed to be installed together with your package."
msgstr ""
"このバージョンのパッケージと競合するパッケージへの対応付けです。\n"
"それらのパッケージがこのパッケージと共にインストールされるのを許容しないよう"
"にします。"

#. type: Plain text
#: ../doc/04-schema.md:438
#, no-wrap
msgid ""
"Note that when specifying ranges like `<1.0 >=1.1` in a `conflict` link,\n"
"this will state a conflict with all versions that are less than 1.0 *and* equal\n"
"or newer than 1.1 at the same time, which is probably not what you want. You\n"
"probably want to go for `<1.0 || >=1.1` in this case.\n"
msgstr ""
"なお、`conflict`リンクで`<1.0 >=1.1`のような範囲を指定する場合、1.0より小さく*且つ*同時に1.1かそれより新しい全てのバージョンと競合しているという意味になります。\n"
"恐らくやりたいことではないでしょう。\n"
"この場合は`<1.0 || >=1.1`としたいことでしょう。\n"

#. type: Title ####
#: ../doc/04-schema.md:439
#, no-wrap
msgid "replace"
msgstr "replace"

#. type: Plain text
#: ../doc/04-schema.md:445
msgid ""
"Map of packages that are replaced by this package. This allows you to fork a "
"package, publish it under a different name with its own version numbers, "
"while packages requiring the original package continue to work with your "
"fork because it replaces the original package."
msgstr ""
"このパッケージが置き換えるパッケージへの対応付けです。\n"
"これによりパッケージをフォークし、独自のバージョン番号を持つ異なる名前で公開"
"できます。\n"
"また元のパッケージが置き換わっているため、元のパッケージを要件とするパッケー"
"ジはフォークしたパッケージを使って動作し続けることになります。"

#. type: Plain text
#: ../doc/04-schema.md:451
msgid ""
"This is also useful for packages that contain sub-packages, for example the "
"main symfony/symfony package contains all the Symfony Components which are "
"also available as individual packages. If you require the main package it "
"will automatically fulfill any requirement of one of the individual "
"components, since it replaces them."
msgstr ""
"副パッケージを含むパッケージについても有用です。\n"
"例えば主眼のsymfony/symfonyパッケージには個々のパッケージとしても使える全ての"
"Symfony Componentが含まれています。\n"
"主眼のパッケージを要件にすると、自動的に個々のコンポーネントのうち、どれか1つ"
"の要件が充足されます。\n"
"主眼のパッケージがコンポーネントを置き換えるからです。"

#. type: Plain text
#: ../doc/04-schema.md:456
msgid ""
"Caution is advised when using replace for the sub-package purpose explained "
"above. You should then typically only replace using `self.version` as a "
"version constraint, to make sure the main package only replaces the sub-"
"packages of that exact version, and not any other version, which would be "
"incorrect."
msgstr ""
"上記で説明した副パッケージの目的で置き換えを使う際は忠告があります。\n"
"その場合は通常、`self.version`をバージョン制約として使うことで置き換えるだけ"
"にしておくべきです。\n"
"主眼のパッケージが厳密なバージョンの副パッケージのみを置き換えるようにするた"
"めです。\n"
"他のバージョンになるとおかしなことになるでしょう。"

#. type: Title ####
#: ../doc/04-schema.md:457
#, no-wrap
msgid "provide"
msgstr "provide"

#. type: Plain text
#: ../doc/04-schema.md:464
msgid ""
"Map of packages that are provided by this package. This is mostly useful for "
"implementations of common interfaces. A package could depend on some virtual "
"package e.g. `psr/log-implementation`, any library that implements this "
"logger interface would list it in `provide`. Implementors can then be [found "
"on Packagist.org](https://packagist.org/providers/psr/log-implementation)."
msgstr ""
"このパッケージにより提供されるパッケージの対応付けです。\n"
"これが最も役立つのは、共通化されたインターフェースの実装です。\n"
"パッケージは仮想パッケージに依存できます。\n"
"例としては`psr/log-implementation`で、このロガーインターフェースを実装する任"
"意のライブラリは`provide`の一覧に加えます。\n"
"実装しているパッケージは[Packagist.orgで探せます](https://packagist.org/"
"providers/psr/log-implementation)。"

#. type: Plain text
#: ../doc/04-schema.md:471
msgid ""
"Using `provide` with the name of an actual package rather than a virtual one "
"implies that the code of that package is also shipped, in which case "
"`replace` is generally a better choice. A common convention for packages "
"providing an interface and relying on other packages to provide an "
"implementation (for instance the PSR interfaces) is to use a `-"
"implementation` suffix for the name of the virtual package corresponding to "
"the interface package."
msgstr ""
"仮想的なパッケージではなく、実際のパッケージの名前で`provide`を使うことは、そ"
"のパッケージのコードも世に出ているということを暗示します。\n"
"その場合、一般的には`replace`がより良い選択です。\n"
"インターフェースを提供して実装を提供する他のパッケージに任せる際（例えばPSRの"
"インターフェース）のよくある慣習は、インターフェースパッケージに対応する仮想"
"パッケージの名前に`-implementation`後置詞を使うことです。"

#. type: Title ####
#: ../doc/04-schema.md:472
#, no-wrap
msgid "suggest"
msgstr "suggest"

#. type: Plain text
#: ../doc/04-schema.md:478
msgid ""
"Suggested packages that can enhance or work well with this package. These "
"are informational and are displayed after the package is installed, to give "
"your users a hint that they could add more packages, even though they are "
"not strictly required."
msgstr ""
"このパッケージを向上させたりいい感じに動かせたりするようなお勧めのパッケージ"
"です。\n"
"これらは通知のようなもので、パッケージがインストールされた後に表示されま"
"す。\n"
"利用者にもっとパッケージを加えてもらえるような手掛かりを与えるためのもので、"
"厳密には必要でなかったとしても大丈夫です。"

#. type: Plain text
#: ../doc/04-schema.md:481
msgid ""
"The format is like package links above, except that the values are free text "
"and not version constraints."
msgstr ""
"形式は上述のパッケージリンクと同様ですが、値が自由な内容のテキストで、バー"
"ジョン制約ではない点は異なります。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:484
#, no-wrap
msgid ""
"{\n"
"    \"suggest\": {\n"
"        \"monolog/monolog\": \"Allows more advanced logging of the application flow\",\n"
"        \"ext-xml\": \"Needed to support XML format in class Foo\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"suggest\": {\n"
"        \"monolog/monolog\": \"Allows more advanced logging of the application flow\",\n"
"        \"ext-xml\": \"Needed to support XML format in class Foo\"\n"
"    }\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:493
#, no-wrap
msgid "autoload"
msgstr "autoload"

#. type: Plain text
#: ../doc/04-schema.md:496
msgid "Autoload mapping for a PHP autoloader."
msgstr "PHPの自動読み込み器用の自動読み込みの対応付けです。"

#. type: Plain text
#: ../doc/04-schema.md:499
msgid ""
"[`PSR-4`](https://www.php-fig.org/psr/psr-4/) and [`PSR-0`](http://www.php-"
"fig.org/psr/psr-0/)  autoloading, `classmap` generation and `files` includes "
"are supported."
msgstr ""
"[`PSR-4`](https://www.php-fig.org/psr/psr-4/)と[`PSR-0`](http://www.php-fig."
"org/psr/psr-0/)の自動読み込み、`classmap`生成、`files`による包含に対応してい"
"ます。"

#. type: Plain text
#: ../doc/04-schema.md:502
msgid ""
"PSR-4 is the recommended way since it offers greater ease of use (no need to "
"regenerate the autoloader when you add classes)."
msgstr ""
"PSR-4はずっと簡単に使えるためお勧めの方法です（クラスを追加したときに自動読み"
"込み器を再生成する必要がありません）。"

#. type: Title ####
#: ../doc/04-schema.md:503
#, no-wrap
msgid "PSR-4"
msgstr "PSR-4"

#. type: Plain text
#: ../doc/04-schema.md:510
msgid ""
"Under the `psr-4` key you define a mapping from namespaces to paths, "
"relative to the package root. When autoloading a class like `Foo\\\\Bar\\"
"\\Baz` a namespace prefix `Foo\\\\` pointing to a directory `src/` means "
"that the autoloader will look for a file named `src/Bar/Baz.php` and include "
"it if present. Note that as opposed to the older PSR-0 style, the prefix "
"(`Foo\\\\`) is **not** present in the file path."
msgstr ""
"`psr-4`キー配下では名前空間からパスへの対応付けを定義します。\n"
"パスはパッケージの根幹から相対的なものです。\n"
"`Foo\\\\Bar\\\\Baz`のようなクラスを自動読み込みする場合、ディレクトリ`src/`を"
"指す名前空間の前部分`Foo\\\\`は、自動読み込み器が`src/Bar/Baz.php`という名前"
"のファイルを探索し、もしあれば含めるという意味です。\n"
"なお、比較的古いPSR-0の様式とは反対に、前部分 (`Foo\\\\`) はファイルパスに存"
"在**しません**。"

#. type: Plain text
#: ../doc/04-schema.md:514
msgid ""
"Namespace prefixes must end in `\\\\` to avoid conflicts between similar "
"prefixes.  For example `Foo` would match classes in the `FooBar` namespace "
"so the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` "
"are distinct."
msgstr ""
"名前空間の前置詞は、似た前置詞との競合を避けるため、`\\\\`で終わっていなけれ"
"ばなりません。\n"
"例えば`Foo`は`FooBar`名前空間のクラスに照合するので、後ろにバックスラッシュを"
"付けると問題が解決します。\n"
"`Foo\\\\`と`FooBar\\\\`は独立しています。"

#. type: Plain text
#: ../doc/04-schema.md:518
#, no-wrap
msgid ""
"The PSR-4 references are all combined, during install/update, into a single\n"
"key => value array which may be found in the generated file\n"
"`vendor/composer/autoload_psr4.php`.\n"
msgstr "PSR-4の参照は、installやupdateの際に、単一のキー=>バリュー配列に全て結合されます。生成されるファイル`vendor/composer/autoload_psr4.php`で確認できます。\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:521
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:534 ../doc/04-schema.md:582
msgid ""
"If you need to search for a same prefix in multiple directories, you can "
"specify them as an array as such:"
msgstr ""
"複数のディレクトリで同じ前置詞を検索する必要がある場合は、以下のように配列と"
"して指定できます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:535
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:545
msgid ""
"If you want to have a fallback directory where any namespace will be looked "
"for, you can use an empty prefix like:"
msgstr ""
"任意の名前空間が探索されるようなフォールバックディレクトリを持たせたければ、"
"次のように空の前置詞が使えます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:546
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"

#. type: Title ####
#: ../doc/04-schema.md:554
#, no-wrap
msgid "PSR-0"
msgstr "PSR-0"

#. type: Plain text
#: ../doc/04-schema.md:558
msgid ""
"Under the `psr-0` key you define a mapping from namespaces to paths, "
"relative to the package root. Note that this also supports the PEAR-style "
"non-namespaced convention."
msgstr ""
"`psr-0`キーの配下では名前空間からパスへの対応付けを定義します。\n"
"このパスはパッケージの根幹から相対的です。\n"
"なお、PEARの様式の名前空間が付いていない変換にも対応しています。"

#. type: Plain text
#: ../doc/04-schema.md:562
msgid ""
"Please note namespace declarations should end in `\\\\` to make sure the "
"autoloader responds exactly. For example `Foo` would match in `FooBar` so "
"the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are "
"distinct."
msgstr ""
"注意していただきたいのは、自動読み込み器が厳密に応答するよう、名前空間の宣言"
"が`\\\\`で終わるようにすべきということです。\n"
"例えば`Foo`は`FooBar`に照合してしまうため、後ろにバックスラッシュを付けると問"
"題が解決するでしょう。\n"
"`Foo\\\\`と`FooBar\\\\`は独立しています。"

#. type: Plain text
#: ../doc/04-schema.md:565
#, no-wrap
msgid ""
"The PSR-0 references are all combined, during install/update, into a single key => value\n"
"array which may be found in the generated file `vendor/composer/autoload_namespaces.php`.\n"
msgstr ""
"PSR-0の参照はinstallやupdateの際に全て単一のキー=>配列値に束ねられます。\n"
"生成されたファイル`vendor/composer/autoload_namespaces.php`で確認できます。\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:568
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"src/\",\n"
"            \"Vendor_Namespace_\": \"src/\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"src/\",\n"
"            \"Vendor_Namespace_\": \"src/\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:583
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:595
msgid ""
"The PSR-0 style is not limited to namespace declarations only but may be "
"specified right down to the class level. This can be useful for libraries "
"with only one class in the global namespace. If the php source file is also "
"located in the root of the package, for example, it may be declared like "
"this:"
msgstr ""
"PSR-0の様式は名前空間の宣言のみに留まらず、クラス水準にまで指定できます。\n"
"大域的な名前空間で、ただ1つのクラスを持つライブラリについては便利かもしれませ"
"ん。\n"
"例えばphpのソースファイルがパッケージの根幹に位置している場合、このように宣言"
"できます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:596
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"UniqueGlobalClass\": \"\" }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"UniqueGlobalClass\": \"\" }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:606
msgid ""
"If you want to have a fallback directory where any namespace can be, you can "
"use an empty prefix like:"
msgstr ""
"どの名前空間にもなれるフォールバックディレクトリを持たせたければ、次のような"
"空の前置詞を使うことができます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:607
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"

#. type: Title ####
#: ../doc/04-schema.md:615
#, no-wrap
msgid "Classmap"
msgstr "クラスマップ"

#. type: Plain text
#: ../doc/04-schema.md:621
#, no-wrap
msgid ""
"The `classmap` references are all combined, during install/update, into a single\n"
"key => value array which may be found in the generated file\n"
"`vendor/composer/autoload_classmap.php`. This map is built by scanning for\n"
"classes in all `.php` and `.inc` files in the given directories/files.\n"
msgstr "`classmap`参照はinstall/update中に単一のキー=>バリュー配列に全て束ねられ、`vendor/composer/autoload_classmap.php`にファイルが生成されます。この対応付けは与えられたディレクトリやファイルにある全ての`.php`または`.inc`ファイル中のクラスを読み取ることによって構築されます。\n"

#. type: Plain text
#: ../doc/04-schema.md:625
msgid ""
"You can use the classmap generation support to define autoloading for all "
"libraries that do not follow PSR-0/4. To configure this you specify all "
"directories or files to search for classes."
msgstr ""
"クラスマップ生成を使ってPSR-4に従わない全てのライブラリ用の自動読み込み器を定"
"義できます。\n"
"これを設定するには、クラスを検索する全てのディレクトリないしファイルを指定し"
"ます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:628
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:637
msgid ""
"Wildcards (`*`) are also supported in a classmap paths, and expand to match "
"any directory name:"
msgstr ""
"クラスマップのパスではワイルドカード (`*`) にも対応しており、任意のディレクト"
"リ名に照合するよう展開されます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:640
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/addons/*/lib/\", \"3rd-party/*\", \"Something.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/addons/*/lib/\", \"3rd-party/*\", \"Something.php\"]\n"
"    }\n"
"}\n"

#. type: Title ####
#: ../doc/04-schema.md:648
#, no-wrap
msgid "Files"
msgstr "ファイル"

#. type: Plain text
#: ../doc/04-schema.md:653
msgid ""
"If you want to require certain files explicitly on every request then you "
"can use the `files` autoloading mechanism. This is useful if your package "
"includes PHP functions that cannot be autoloaded by PHP."
msgstr ""
"必要に応じて特定のファイルを明示的にrequireしたい場合は、`files`自動読み込み"
"機構を使うことができます。\n"
"PHPによって自動読み込みできないPHPの関数を含むパッケージがあるときに便利で"
"す。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:656
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"files\": [\"src/MyLibrary/functions.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"files\": [\"src/MyLibrary/functions.php\"]\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:668
msgid ""
"Files autoload rules are included whenever `vendor/autoload.php` is "
"included, right after the autoloader is registered. The order of inclusion "
"depends on package dependencies so that if package A depends on B, files in "
"package B will be included first to ensure package B is fully initialized "
"and ready to be used when files from package A are included."
msgstr ""
"filesの自動読み込みの規則は`vendor/autoload.php`が含まれたときは常に取り込ま"
"れ、ちょうど自動読み込み器が登録された後になります。\n"
"取り込み順序はパッケージの依存関係によります。\n"
"そのためパッケージAがBに依存している場合、パッケージBにあるファイルが最初に取"
"り込まれます。\n"
"パッケージAのファイルが取り込まれた時点でパッケージBが完全に取り込まれて準備"
"ができているようにするためです。"

#. type: Plain text
#: ../doc/04-schema.md:670
msgid ""
"If two packages have the same amount of dependents or no dependencies, the "
"order is alphabetical."
msgstr ""
"2つのパッケージが同量の依存関係を持つ、あるいは依存関係がない場合、順番は辞書"
"順になります。"

#. type: Plain text
#: ../doc/04-schema.md:674
msgid ""
"Files from the root package are always loaded last, and you cannot use files "
"autoloading yourself to override functions from your dependencies. If you "
"want to achieve that we recommend you include your own functions *before* "
"including Composer's `vendor/autoload.php`."
msgstr ""
"根幹パッケージのfilesは常に最後に読み込まれるため、filesを使って依存関係由来"
"の関数を上書きするために自身を自動読み込みさせることはできません。\n"
"そうしたい場合はComposerの`vendor/autoload.php`を取り込む*前に*独自の関数を取"
"り込むことをお勧めします。"

#. type: Title ####
#: ../doc/04-schema.md:675
#, no-wrap
msgid "Exclude files from classmaps"
msgstr "クラスマップからファイルを除外する"

#. type: Plain text
#: ../doc/04-schema.md:680
msgid ""
"If you want to exclude some files or folders from the classmap you can use "
"the `exclude-from-classmap` property.  This might be useful to exclude test "
"classes in your live environment, for example, as those will be skipped from "
"the classmap even when building an optimized autoloader."
msgstr ""
"クラスマップから何らかのファイルやディレクトリを除外したければ`exclude-from-"
"classmap`プロパティを使うことができます。\n"
"例えば、実環境でテストクラスを除外するのに便利かもしれません。\n"
"最適化された自動読み込み器を構築しているときでも、クラスマップから読み飛ばさ"
"れるからです。"

#. type: Plain text
#: ../doc/04-schema.md:684
msgid ""
"The classmap generator will ignore all files in the paths configured here. "
"The paths are absolute from the package root directory (i.e. composer.json "
"location), and support `*` to match anything but a slash, and `**` to match "
"anything. `**` is implicitly added to the end of the paths."
msgstr ""
"クラスマップ生成器はここで設定されたパスにある全てのファイルを無視します。\n"
"パスはパッケージの根幹ディレクトリからの絶対位置にあり、スラッシュ以外の全て"
"に照合する`*`と任意のものに照合する`**`に対応しています。\n"
"`**`はパスの末尾に暗黙に追加されます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:687
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"exclude-from-classmap\": [\"/Tests/\", \"/test/\", \"/tests/\"]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"exclude-from-classmap\": [\"/Tests/\", \"/test/\", \"/tests/\"]\n"
"    }\n"
"}\n"

#. type: Title ####
#: ../doc/04-schema.md:695
#, no-wrap
msgid "Optimizing the autoloader"
msgstr "自動読み込み器を最適化する"

#. type: Plain text
#: ../doc/04-schema.md:701
msgid ""
"The autoloader can have quite a substantial impact on your request time "
"(50-100ms per request in large frameworks using a lot of classes). See the "
"[article about optimizing the autoloader](articles/autoloader-optimization."
"md)  for more details on how to reduce this impact."
msgstr ""
"自動読み込み器がリクエスト時間にかなり無視できない影響があることがあります"
"（沢山のクラスを使う大きなフレームワークではリクエストあたり50-100msで"
"す）。\n"
"この影響を低減する方法についての詳細は[自動読み込み器の最適化についての記事]"
"(articles/autoloader-optimization.md)を参照してください。"

#. type: Title ###
#: ../doc/04-schema.md:702
#, no-wrap
msgid "autoload-dev <span>([root-only](04-schema.md#root-package))</span>"
msgstr "autoload-dev <span>（[根幹限定](04-schema.md#root-package)）</span>"

#. type: Plain text
#: ../doc/04-schema.md:705
msgid "This section allows defining autoload rules for development purposes."
msgstr "この節では開発目的の自動読み込み規則を定義できます。"

#. type: Plain text
#: ../doc/04-schema.md:709
msgid ""
"Classes needed to run the test suite should not be included in the main "
"autoload rules to avoid polluting the autoloader in production and when "
"other people use your package as a dependency."
msgstr ""
"テストスートを走らせるのに必要なクラスは、主眼のの自動読み込み規則に含めるべ"
"きではありません。\n"
"実運用や他の人がパッケージを依存関係として使う際に、自動読み込み器を汚染する"
"のを避けるためです。"

#. type: Plain text
#: ../doc/04-schema.md:712
msgid ""
"Therefore, it is a good idea to rely on a dedicated path for your unit tests "
"and to add it within the autoload-dev section."
msgstr ""
"したがって単体試験専用のパスを用意してautoload-dev節内に追加するのは良いこと"
"です。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:715
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\\": \"src/\" }\n"
"    },\n"
"    \"autoload-dev\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\Tests\\\\\": \"tests/\" }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\\": \"src/\" }\n"
"    },\n"
"    \"autoload-dev\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\Tests\\\\\": \"tests/\" }\n"
"    }\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:726
#, no-wrap
msgid "include-path"
msgstr "include-path"

#. type: Plain text
#: ../doc/04-schema.md:731
#, no-wrap
msgid ""
"> **DEPRECATED**: This is only present to support legacy projects, and all new code\n"
"> should preferably use autoloading. As such it is a deprecated practice, but the\n"
"> feature itself will not likely disappear from Composer.\n"
msgstr ""
"> **時代遅れ** ：\n"
"古びたプロジェクトに対応するためだけに存在し、全ての新しいコードでは自動読み込み器の方を使うべきです。\n"
"そうしたわけで時代遅れなものですが、機能自体はComposerから消えることはきっとないでしょう。\n"

#. type: Plain text
#: ../doc/04-schema.md:733
msgid "A list of paths which should get appended to PHP's `include_path`."
msgstr "PHPの`include_path`に後付けされるパスのリストです。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:736
#, no-wrap
msgid ""
"{\n"
"    \"include-path\": [\"lib/\"]\n"
"}\n"
msgstr ""
"{\n"
"    \"include-path\": [\"lib/\"]\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:744
#, no-wrap
msgid "target-dir"
msgstr "target-dir"

#. type: Plain text
#: ../doc/04-schema.md:749
#, no-wrap
msgid ""
"> **DEPRECATED**: This is only present to support legacy PSR-0 style autoloading,\n"
"> and all new code should preferably use PSR-4 without target-dir and projects\n"
"> using PSR-0 with PHP namespaces are encouraged to migrate to PSR-4 instead.\n"
msgstr ""
"> **時代遅れ** ：\n"
"> 古びたPSR-0様式の自動読み込みに対応するためだけに存在しており、全ての新しいコードはtarget-dir無しのPSR-4を使うべきです。\n"
"> PHPの名前空間と共にPSR-0を使っているプロジェクトは代わりにPSR-4への移行が推奨されます。\n"

#. type: Plain text
#: ../doc/04-schema.md:751
msgid "Defines the installation target."
msgstr "インストール対象を定義します。"

#. type: Plain text
#: ../doc/04-schema.md:754
msgid ""
"In case the package root is below the namespace declaration you cannot "
"autoload properly. `target-dir` solves this problem."
msgstr ""
"パッケージの根幹が名前空間宣言の元にある場合は適切に自動読み込みできませ"
"ん。\n"
"`target-dir`はこの問題を解決します。"

#. type: Plain text
#: ../doc/04-schema.md:761
msgid ""
"An example is Symfony. There are individual packages for the components. The "
"Yaml component is under `Symfony\\Component\\Yaml`. The package root is that "
"`Yaml` directory. To make autoloading possible, we need to make sure that it "
"is not installed into `vendor/symfony/yaml`, but instead into `vendor/"
"symfony/yaml/Symfony/Component/Yaml`, so that the autoloader can load it "
"from `vendor/symfony/yaml`."
msgstr ""
"一例はSymfonyです。これにはコンポーネント毎に独立のパッケージがあります。\n"
"Yamlコンポーネントは`Symfony\\Component\\Yaml`以下にあります。\n"
"パッケージの根幹はその`Yaml`ディレクトリです。\n"
"自動読み込みできるようにするには、必ず`vendor/symfony/yaml`ではなく`vendor/"
"symfony/yaml/Symfony/Component/Yaml`にインストールされるようにしなければいけ"
"ません。\n"
"自動読み込み器が`vendor/symfony/yaml`から読み込めるようにするためです。"

#. type: Plain text
#: ../doc/04-schema.md:763
msgid "To do that, `autoload` and `target-dir` are defined as follows:"
msgstr ""
"そうするために、`autoload`と`target-dir`は以下のように定義されています。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:764
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Symfony\\\\Component\\\\Yaml\\\\\": \"\" }\n"
"    },\n"
"    \"target-dir\": \"Symfony/Component/Yaml\"\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Symfony\\\\Component\\\\Yaml\\\\\": \"\" }\n"
"    },\n"
"    \"target-dir\": \"Symfony/Component/Yaml\"\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:775
#, no-wrap
msgid "minimum-stability <span>([root-only](04-schema.md#root-package))</span>"
msgstr "minimum-stability <span>([根幹限定](04-schema.md#root-package))</span>"

#. type: Plain text
#: ../doc/04-schema.md:780
msgid ""
"This defines the default behavior for filtering packages by stability. This "
"defaults to `stable`, so if you rely on a `dev` package, you should specify "
"it in your file to avoid surprises."
msgstr ""
"安定性によってパッケージの絞り込みをする既定の挙動を定義します。\n"
"この既定は`stable`になっているので、`dev`のパッケージに依っている場合は、驚く"
"ようなことになるのを避けるためにファイルを指定しておくべきです。"

#. type: Plain text
#: ../doc/04-schema.md:786
msgid ""
"All versions of each package are checked for stability, and those that are "
"less stable than the `minimum-stability` setting will be ignored when "
"resolving your project dependencies. (Note that you can also specify "
"stability requirements on a per-package basis using stability flags in the "
"version constraints that you specify in a `require` block (see [package "
"links](#package-links) for more details)."
msgstr ""
"各パッケージの全バージョンについて安定性が検査され、`minimum-stability`設定よ"
"り安定していないものは、プロジェクトの依存関係の解決の際に無視されます（な"
"お、`require`ブロック中で指定するバージョン制約中の安定性フラグを使って、パッ"
"ケージ毎に安定性の要件を指定することもできます（詳細は[パッケージリンク]"
"(#package-links)を参照））。"

#. type: Plain text
#: ../doc/04-schema.md:789
msgid ""
"Available options (in order of stability) are `dev`, `alpha`, `beta`, `RC`, "
"and `stable`."
msgstr ""
"使えるオプションは（安定性の順番で）`dev`、`alpha`、`beta`、`RC`、`stable`で"
"す。"

#. type: Title ###
#: ../doc/04-schema.md:790
#, no-wrap
msgid "prefer-stable <span>([root-only](04-schema.md#root-package))</span>"
msgstr "prefer-stable <span>（[根幹限定](04-schema.md#root-package)）</span>"

#. type: Plain text
#: ../doc/04-schema.md:796
msgid ""
"When this is enabled, Composer will prefer more stable packages over "
"unstable ones when finding compatible stable packages is possible. If you "
"require a dev version or only alphas are available for a package, those will "
"still be selected granted that the minimum-stability allows for it."
msgstr ""
"これが有効になっているとき、互換性のある安定的なパッケージが使える場合に、不"
"安定なものより安定なパッケージを贔屓します。\n"
"開発版が必要だったりパッケージでアルファ版しか使えなかったりする場合について"
"は、minimum-stabilityが許容するかどうかが考慮された上で選択されます。"

#. type: Plain text
#: ../doc/04-schema.md:798
msgid "Use `\"prefer-stable\": true` to enable."
msgstr "有効にするには`\"prefer-stable\": true`を使ってください。"

#. type: Title ###
#: ../doc/04-schema.md:799
#, no-wrap
msgid "repositories <span>([root-only](04-schema.md#root-package))</span>"
msgstr "repositories <span>（[根幹限定](04-schema.md#root-package)）</span>"

#. type: Plain text
#: ../doc/04-schema.md:802
msgid "Custom package repositories to use."
msgstr "独自に使用するパッケージリポジトリです。"

#. type: Plain text
#: ../doc/04-schema.md:805
msgid ""
"By default Composer only uses the packagist repository. By specifying "
"repositories you can get packages from elsewhere."
msgstr ""
"既定ではComposerはpackagistリポジトリのみを使います。\n"
"リポジトリを指定することによって、パッケージをどこからでも取得できます。"

#. type: Plain text
#: ../doc/04-schema.md:809
msgid ""
"Repositories are not resolved recursively. You can only add them to your "
"main `composer.json`. Repository declarations of dependencies' `composer."
"json`s are ignored."
msgstr ""
"リポジトリは再帰的に解決されません。\n"
"主眼の`composer.json`に加えることができるだけです。\n"
"依存関係のリポジトリの`composer.json`にある宣言は無視されます。"

#. type: Plain text
#: ../doc/04-schema.md:811
msgid "The following repository types are supported:"
msgstr "以下のリポジトリの種別に対応しています。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:822
msgid ""
"**composer:** A Composer repository is a `packages.json` file served via the "
"network (HTTP, FTP, SSH), that contains a list of `composer.json` objects "
"with additional `dist` and/or `source` information. The `packages.json` file "
"is loaded using a PHP stream. You can set extra options on that stream using "
"the `options` parameter."
msgstr ""
"**composer:** Composerリポジトリはネットワーク（HTTP、FTP、SSH）越しに提供さ"
"れている`packages.json`であり、追加の`dist`ないし`source`の情報付きの"
"`composer.json`のリストを含みます。\n"
"`packages.json`ファイルはPHPのストリームを使って読み込まれます。\n"
"`options`パラメータを使ってストリームについての追加のオプションを設定できま"
"す。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:822
msgid ""
"**vcs:** The version control system repository can fetch packages from git, "
"svn, fossil and hg repositories."
msgstr ""
"**vcs:** パッケージをgit、svn、fossil、hgのリポジトリから取得できるバージョン"
"管理システムリポジトリです。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:822
msgid ""
"**package:** If you depend on a project that does not have any support for "
"Composer whatsoever you can define the package inline using a `package` "
"repository. You basically inline the `composer.json` object."
msgstr ""
"**package:** 何らのComposer対応がされていないプロジェクトに依存する場合、"
"`package`リポジトリを使ってパッケージの定義を書き下すことができます。基本的に"
"`composer.json`オブジェクトを書き下します。"

#. type: Plain text
#: ../doc/04-schema.md:824
msgid ""
"For more information on any of these, see [Repositories](05-repositories.md)."
msgstr ""
"これらについての詳細な情報については[リポジトリ](05-repositories.md)を参照し"
"てください。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:827
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.example.com\"\n"
"        },\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://packages.example.com\",\n"
"            \"options\": {\n"
"                \"ssl\": {\n"
"                    \"verify_peer\": \"true\"\n"
"                }\n"
"            }\n"
"        },\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/Seldaek/monolog\"\n"
"        },\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": {\n"
"                \"name\": \"smarty/smarty\",\n"
"                \"version\": \"3.1.7\",\n"
"                \"dist\": {\n"
"                    \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                    \"type\": \"zip\"\n"
"                },\n"
"                \"source\": {\n"
"                    \"url\": \"https://smarty-php.googlecode.com/svn/\",\n"
"                    \"type\": \"svn\",\n"
"                    \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                }\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.example.com\"\n"
"        },\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://packages.example.com\",\n"
"            \"options\": {\n"
"                \"ssl\": {\n"
"                    \"verify_peer\": \"true\"\n"
"                }\n"
"            }\n"
"        },\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/Seldaek/monolog\"\n"
"        },\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": {\n"
"                \"name\": \"smarty/smarty\",\n"
"                \"version\": \"3.1.7\",\n"
"                \"dist\": {\n"
"                    \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                    \"type\": \"zip\"\n"
"                },\n"
"                \"source\": {\n"
"                    \"url\": \"https://smarty-php.googlecode.com/svn/\",\n"
"                    \"type\": \"svn\",\n"
"                    \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                }\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:871
#, no-wrap
msgid ""
"> **Note:** Order is significant here. When looking for a package, Composer\n"
"will look from the first to the last repository, and pick the first match.\n"
"By default Packagist is added last which means that custom repositories can\n"
"override packages from it.\n"
msgstr ""
"> **補足：** ここでは順番に意味があります。\n"
"> パッケージを探すとき、Composerは最初から最後までリポジトリを探し、最初に照合したものを拾います。\n"
"> 既定ではPackagistが最後に加えられており、つまり独自のリポジトリがPackagistのパッケージより優先されるのです。\n"

#. type: Plain text
#: ../doc/04-schema.md:874
msgid ""
"Using JSON object notation is also possible. However, JSON key/value pairs "
"are to be considered unordered so consistent behaviour cannot be guaranteed."
msgstr ""
"JSONオブジェクト記法を使うこともできます。\n"
"しかしJSONのキーバリュー対は順序なしとして見做されるため、一貫した挙動は保証"
"されません。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:875
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": {\n"
"        \"foo\": {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.foo.com\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": {\n"
"        \"foo\": {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.foo.com\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Title ###
#: ../doc/04-schema.md:886
#, no-wrap
msgid "config <span>([root-only](04-schema.md#root-package))</span>"
msgstr "config <span>（[根幹限定](04-schema.md#root-package)）</span>"

#. type: Plain text
#: ../doc/04-schema.md:890
msgid ""
"A set of configuration options. It is only used for projects. See [Config]"
"(06-config.md) for a description of each individual option."
msgstr ""
"設定オプションの集合です。プロジェクト限定で使われます。それぞれのオプション"
"についての説明については[設定](06-config.md)を参照してください。"

#. type: Title ###
#: ../doc/04-schema.md:891
#, no-wrap
msgid "scripts <span>([root-only](04-schema.md#root-package))</span>"
msgstr "scripts <span>（[根幹限定](04-schema.md#root-package)）</span>"

#. type: Plain text
#: ../doc/04-schema.md:895
msgid ""
"Composer allows you to hook into various parts of the installation process "
"through the use of scripts."
msgstr ""
"Composerではスクリプトの使用を通じてインストールの過程の様々な部分でフックを"
"掛けることができます。"

#. type: Plain text
#: ../doc/04-schema.md:897
msgid "See [Scripts](articles/scripts.md) for events details and examples."
msgstr ""
"イベントについての詳細と例については[スクリプト](articles/scripts.md)を参照し"
"てください。"

#. type: Title ###
#: ../doc/04-schema.md:898
#, no-wrap
msgid "extra"
msgstr "extra"

#. type: Plain text
#: ../doc/04-schema.md:901
msgid "Arbitrary extra data for consumption by `scripts`."
msgstr "`scripts`によって消費される任意の追加データです。"

#. type: Plain text
#: ../doc/04-schema.md:904
msgid ""
"This can be virtually anything. To access it from within a script event "
"handler, you can do:"
msgstr ""
"理論上何でも構いません。\n"
"スクリプトのイベント制御子中でアクセスするには以下のようにします。"

#. type: Fenced code block (php)
#: ../doc/04-schema.md:905
#, no-wrap
msgid "$extra = $event->getComposer()->getPackage()->getExtra();\n"
msgstr "$extra = $event->getComposer()->getPackage()->getExtra();\n"

#. type: Title ###
#: ../doc/04-schema.md:911
#, no-wrap
msgid "bin"
msgstr "bin"

#. type: Plain text
#: ../doc/04-schema.md:915
msgid ""
"A set of files that should be treated as binaries and made available into "
"the `bin-dir` (from config)."
msgstr ""
"バイナリとして扱われるべきファイルの集合で、（設定の）`bin-dir`で使えるように"
"します。"

#. type: Plain text
#: ../doc/04-schema.md:917
msgid "See [Vendor Binaries](articles/vendor-binaries.md) for more details."
msgstr ""
"詳細は[ベンダーバイナリ](articles/vendor-binaries.md)を参照してください。"

#. type: Plain text
#: ../doc/04-schema.md:923
msgid "A set of options for creating package archives."
msgstr "パッケージアーカイブをつくるためのオプションの集合です。"

#. type: Plain text
#: ../doc/04-schema.md:925
msgid "The following options are supported:"
msgstr "以下のオプションに対応しています。"

#. type: Bullet: '* '
#: ../doc/04-schema.md:929
msgid ""
"**name:** Allows configuring base name for archive.  By default (if not "
"configured, and `--file` is not passed as command-line argument), "
"`preg_replace('#[^a-z0-9-_]#i', '-', name)` is used."
msgstr ""
"**name:** アーカイブの基底名を設定できます。既定（設定されていない場合で、か"
"つコマンドライン引数として`--file`が渡されていない場合）では"
"`preg_replace('#[^a-z0-9-_]#i', '-', name)`が使われます。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:932
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"org/strangeName\",\n"
"    \"archive\": {\n"
"        \"name\": \"Strange_name\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"name\": \"org/strangeName\",\n"
"    \"archive\": {\n"
"        \"name\": \"Strange_name\"\n"
"    }\n"
"}\n"

#. type: Bullet: '* '
#: ../doc/04-schema.md:946
msgid ""
"**exclude:** Allows configuring a list of patterns for excluded paths. The "
"pattern syntax matches .gitignore files. A leading exclamation mark (!) will "
"result in any matching files to be included even if a previous pattern "
"excluded them. A leading slash will only match at the beginning of the "
"project relative path. An asterisk will not expand to a directory separator."
msgstr ""
"**exclude:** 除外されるパス用のパターンのリストを設定できます。\n"
"パターンの構文は.gitignoreファイルのものと同一です。\n"
"先頭のびっくりマーク (!) はそれ以前のパターンが除外していたとしても照合した"
"ファイルを含めることになります。\n"
"先頭のスラッシュはプロジェクトの相対パスの開始部分にのみ照合します。\n"
"アスタリスクはディレクトリの区切りに展開されません。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:949
#, no-wrap
msgid ""
"{\n"
"    \"archive\": {\n"
"        \"exclude\": [\"/foo/bar\", \"baz\", \"/*.test\", \"!/foo/bar/baz\"]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"archive\": {\n"
"        \"exclude\": [\"/foo/bar\", \"baz\", \"/*.test\", \"!/foo/bar/baz\"]\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:959
msgid ""
"The example will include `/dir/foo/bar/file`, `/foo/bar/baz`, `/file.php`, `/"
"foo/my.test` but it will exclude `/foo/bar/any`, `/foo/baz`, and `/my.test`."
msgstr ""
"例では`/dir/foo/bar/file`、`/foo/bar/baz`、`/file.php`、`/foo/my.test`を含み"
"ますが、`/foo/bar/any`、`/foo/baz`、`/my.test`は除外します。"

# プロパティ名なので訳しません。
#. type: Title ###
#: ../doc/04-schema.md:962 ../doc/06-config.md:138
#, no-wrap
msgid "abandoned"
msgstr "abandoned"

#. type: Plain text
#: ../doc/04-schema.md:965
msgid "Indicates whether this package has been abandoned."
msgstr "このパッケージが放棄されたものかどうかを示します。"

#. type: Plain text
#: ../doc/04-schema.md:967
msgid ""
"It can be boolean or a package name/URL pointing to a recommended "
"alternative."
msgstr "真偽値または推奨される代替を指すパッケージ名やURLです。"

#. type: Plain text
#: ../doc/04-schema.md:973
msgid ""
"Use `\"abandoned\": true` to indicate this package is abandoned.  Use "
"`\"abandoned\": \"monolog/monolog\"` to indicate this package is abandoned, "
"and that the recommended alternative is `monolog/monolog`."
msgstr ""
"`\"abandoned\": true`を使うと、このパッケージが放棄されたことを示します。\n"
"`\"abandoned\": \"monolog/monolog\"`を使うと、このパッケージが放棄され、推奨"
"される代替が`monolog/monolog`であることが示されます。"

#. type: Plain text
#: ../doc/04-schema.md:975
msgid "Defaults to false."
msgstr "既定では偽です。"

#. type: Title ###
#: ../doc/04-schema.md:978
#, no-wrap
msgid "_comment"
msgstr "_comment"

#. type: Plain text
#: ../doc/04-schema.md:981
msgid ""
"Top level key used as a place to store comments (it can be a string or array "
"of strings)."
msgstr ""
"コメントを入れておく場所として使える最上位のキーです（文字列または文字列の配"
"列にできます）。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:982
#, no-wrap
msgid ""
"{\n"
"    \"_comment\": [\n"
"        \"The package foo/bar was required for business logic\",\n"
"        \"Remove package foo/baz when removing foo/bar\"\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"_comment\": [\n"
"        \"パッケージfoo/barはビジネスロジックに必要でした\",\n"
"        \"foo/barを削除するときはfoo/bazパッケージを削除してください\"\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:992
msgid "Defaults to empty."
msgstr "既定では空です。"

# プロパティ名なので訳しません。
#. type: Title ###
#: ../doc/04-schema.md:995
#, no-wrap
msgid "non-feature-branches"
msgstr "non-feature-branches"

#. type: Plain text
#: ../doc/04-schema.md:999
msgid ""
"A list of regex patterns of branch names that are non-numeric (e.g. "
"\"latest\" or something), that will NOT be handled as feature branches. This "
"is an array of strings."
msgstr ""
"数値でないブランチ名の正規表現パターン（例：「latest」など）のリストです。\n"
"機能用ブランチを決して扱いません。\n"
"文字列の配列です。"

#. type: Plain text
#: ../doc/04-schema.md:1005
msgid ""
"If you have non-numeric branch names, for example like \"latest\", "
"\"current\", \"latest-stable\" or something, that do not look like a version "
"number, then Composer handles such branches as feature branches. This means "
"it searches for parent branches, that look like a version or ends at special "
"branches (like master), and the root package version number becomes the "
"version of the parent branch or at least master or something."
msgstr ""
"数値でないブランチ名がある場合、例えば「latest」「current」「latest-stable」"
"などについては、バージョン番号には見えないので、Composerはそうしたブランチを"
"機能用ブランチとして制御します。\n"
"つまりバージョンや特別なブランチ（masterなど）で終わっているような親ブランチ"
"を探し、根幹パッケージのバージョン数が親ブランチのバージョンまたは少なくとも"
"masterなどになるということです。"

#. type: Plain text
#: ../doc/04-schema.md:1009
msgid ""
"To handle non-numeric named branches as versions instead of searching for a "
"parent branch with a valid version or special branch name like master, you "
"can set patterns for branch names that should be handled as dev version "
"branches."
msgstr ""
"数値でない名前のブランチを、妥当なバージョンやmasterのような特別なブランチ名"
"の親ブランチを探す代わりに、バージョンとして扱うようにするには、開発版ブラン"
"チとして制御されるべきブランチ名のパターンを設定できます。"

#. type: Plain text
#: ../doc/04-schema.md:1012
msgid ""
"This is really helpful when you have dependencies using \"self.version\", so "
"that not dev-master, but the same branch is installed (in the example: "
"latest-testing)."
msgstr ""
"「self.version」を使う依存関係があるときは本当に便利です。\n"
"このときdev-masterでなくとも同じブランチがインストールされます（例：latest-"
"testing）。"

#. type: Plain text
#: ../doc/04-schema.md:1017
msgid ""
"If you have a testing branch, that is heavily maintained during a testing "
"phase and is deployed to your staging environment, normally `composer show -"
"s` will give you `versions : * dev-master`."
msgstr ""
"テストブランチがある場合で、そのブランチがテストフェーズで手厚く維持管理さ"
"れ、ステージング環境にデプロイされるのであれば、通常`composer show -s`とする"
"と`versions : * dev-master`になります。"

#. type: Plain text
#: ../doc/04-schema.md:1019
msgid ""
"If you configure `latest-.*` as a pattern for non-feature-branches like this:"
msgstr ""
"機能用ブランチではないもの用に`latest-.*`をパターンとして設定する場合はこのよ"
"うにします。"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:1020
#, no-wrap
msgid ""
"{\n"
"    \"non-feature-branches\": [\"latest-.*\"]\n"
"}\n"
msgstr ""
"{\n"
"    \"non-feature-branches\": [\"latest-.*\"]\n"
"}\n"

#. type: Plain text
#: ../doc/04-schema.md:1027
msgid ""
"Then `composer show -s` will give you `versions : * dev-latest-testing`."
msgstr ""
"それから`composer show -s`とすると`versions : * dev-latest-testing`になりま"
"す。"

#. type: Plain text
#: ../doc/04-schema.md:1030
msgid ""
"&larr; [Command-line interface](03-cli.md)  | [Repositories](05-repositories."
"md) &rarr;"
msgstr ""
"&larr; [コマンドラインインターフェース](03-cli.md)  | [リポジトリ](05-"
"repositories.md) &rarr;"

#. type: Title #
#: ../doc/05-repositories.md:1
#, no-wrap
msgid "Repositories"
msgstr "リポジトリ"

#. type: Plain text
#: ../doc/05-repositories.md:5
msgid ""
"This chapter will explain the concept of packages and repositories, what "
"kinds of repositories are available, and how they work."
msgstr ""
"この章ではパッケージとリポジトリの概念、利用できるリポジトリの種類に何がある"
"か、そしてどういう仕組みになっているのかを解説します。"

#. type: Title ##
#: ../doc/05-repositories.md:6
#, no-wrap
msgid "Concepts"
msgstr "概念"

#. type: Plain text
#: ../doc/05-repositories.md:10
msgid ""
"Before we look at the different types of repositories that exist, we need to "
"understand some basic concepts that Composer is built on."
msgstr ""
"リポジトリのそれぞれの存在する種別を見ていく前に、Composerが立脚する基礎概念"
"を理解する必要があります。"

#. type: Title ###
#: ../doc/05-repositories.md:11 ../doc/05-repositories.md:507
#, no-wrap
msgid "Package"
msgstr "パッケージ"

#. type: Plain text
#: ../doc/05-repositories.md:18
msgid ""
"Composer is a dependency manager. It installs packages locally. A package is "
"essentially a directory containing something. In this case it is PHP code, "
"but in theory it could be anything. And it contains a package description "
"which has a name and a version. The name and the version are used to "
"identify the package."
msgstr ""
"Composerは依存関係管理ツールです。\n"
"パッケージをローカルにインストールします。\n"
"パッケージは本質的には何かを含むディレクトリです。\n"
"この場合はその何かがPHPのコードですが、理論上何でも良いわけです。\n"
"そしてパッケージの名前とバージョンを持つパッケージの説明を含みます。\n"
"名前とバージョンはパッケージを特定するのに使われます。"

#. type: Plain text
#: ../doc/05-repositories.md:22
msgid ""
"In fact, internally, Composer sees every version as a separate package. "
"While this distinction does not matter when you are using Composer, it's "
"quite important when you want to change it."
msgstr ""
"実際、内部的にはComposerはそれぞれのバージョンを個別のパッケージとして見做し"
"ます。\n"
"この区別はComposerを使っているときは問題になりませんが、Composer自体を変更し"
"たいと思ったときはかなり重要になります。"

#. type: Plain text
#: ../doc/05-repositories.md:27
msgid ""
"In addition to the name and the version, there is useful metadata. The "
"information most relevant for installation is the source definition, which "
"describes where to get the package contents. The package data points to the "
"contents of the package. And there are two options here: dist and source."
msgstr ""
"名前とバージョンに加えて有用なメタデータがあります。\n"
"インストールに最も関係する情報はソースの定義で、どこかでパッケージの内容を取"
"得するのかを記述します。\n"
"パッケージのデータはパッケージの内容を指します。\n"
"そしてここで2つの選択肢があります。\n"
"distとsourceです。"

#. type: Plain text
#: ../doc/05-repositories.md:30
#, no-wrap
msgid ""
"**Dist:** The dist is a packaged version of the package data. Usually a\n"
"released version, usually a stable release.\n"
msgstr "**dist:** distはパッケージデータのパッケージ化されたバージョンです。大抵はリリースバージョンで、中でも大抵は安定リリースです。\n"

#. type: Plain text
#: ../doc/05-repositories.md:34
#, no-wrap
msgid ""
"**Source:** The source is used for development. This will usually originate\n"
"from a source code repository, such as git. You can fetch this when you want\n"
"to modify the downloaded package.\n"
msgstr ""
"**source:** ソースは開発に使われます。\n"
"大抵gitのようなソースコードリポジトリを起源とします。\n"
"ダウンロードされたパッケージを変更したいときはこれを取得できます。\n"

#. type: Plain text
#: ../doc/05-repositories.md:38
msgid ""
"Packages can supply either of these, or even both. Depending on certain "
"factors, such as user-supplied options and stability of the package, one "
"will be preferred."
msgstr ""
"パッケージはこれらの何れか、または両方を与えられます。\n"
"利用者により与えられたオプションやパッケージの安定性などの何らかの要因によ"
"り、どちらかが相応ということになるでしょう。"

#. type: Title ###
#: ../doc/05-repositories.md:39
#, no-wrap
msgid "Repository"
msgstr "リポジトリ"

#. type: Plain text
#: ../doc/05-repositories.md:43
msgid ""
"A repository is a package source. It's a list of packages/versions. Composer "
"will look in all your repositories to find the packages your project "
"requires."
msgstr ""
"リポジトリはパッケージソースで、パッケージとバージョンのリストです。\n"
"Composerは全てのリポジトリを見て回り、プロジェクトに必要なパッケージを見付け"
"てきます。"

#. type: Plain text
#: ../doc/05-repositories.md:46
msgid ""
"By default, only the Packagist.org repository is registered in Composer. You "
"can add more repositories to your project by declaring them in `composer."
"json`."
msgstr ""
"既定ではPackagist.orgリポジトリがComposerに登録されています。`composer.json`"
"に宣言することでプロジェクトにもっとリポジトリを加えることができます。"

#. type: Plain text
#: ../doc/05-repositories.md:51
msgid ""
"Repositories are only available to the root package and the repositories "
"defined in your dependencies will not be loaded. Read the [FAQ entry](faqs/"
"why-cant-composer-load-repositories-recursively.md) if you want to learn why."
msgstr ""
"リポジトリは根幹パッケージでのみ利用でき、依存関係で定義されたリポジトリは読"
"み込まれません。\n"
"なぜそうなっているかを知りたければ[FAQの項目](faqs/why-cant-composer-load-"
"repositories-recursively.md)をお読みください。"

#. type: Plain text
#: ../doc/05-repositories.md:57
msgid ""
"When resolving dependencies, packages are looked up from repositories from "
"top to bottom, and by default, as soon as a package is found in one, "
"Composer stops looking in other repositories. Read the [repository "
"priorities](articles/repository-priorities.md) article for more details and "
"to see how to change this behavior."
msgstr ""
"依存関係解決をするとき、パッケージはリポジトリを上から下への順で見ていき、ど"
"こかにパッケージがあったらComposerは他のリポジトリを見るのを止めます。\n"
"詳細は[リポジトリの優先度](articles/repository-priorities.md)の記事を読んで、"
"この挙動を変える方法を見てください。"

#. type: Title ##
#: ../doc/05-repositories.md:58
#, no-wrap
msgid "Types"
msgstr "種別"

#. type: Title ###
#: ../doc/05-repositories.md:60
#, no-wrap
msgid "Composer"
msgstr "composer"

#. type: Plain text
#: ../doc/05-repositories.md:64
msgid ""
"The main repository type is the `composer` repository. It uses a single "
"`packages.json` file that contains all of the package metadata."
msgstr ""
"主なリポジトリの種別は`composer`リポジトリです。全てのパッケージメタデータを"
"含む単一の`packages.json`ファイルを使っています。"

#. type: Plain text
#: ../doc/05-repositories.md:70
msgid ""
"This is also the repository type that packagist uses. To reference a "
"`composer` repository, supply the path before the `packages.json` file.  In "
"the case of packagist, that file is located at `/packages.json`, so the URL "
"of the repository would be `repo.packagist.org`. For `example.org/packages."
"json` the repository URL would be `example.org`."
msgstr ""
"packagistが使っているリポジトリの種別でもあります。\n"
"`composer`リポジトリを参照するには、`packages.json`ファイルの前にパスを与えて"
"ください。\n"
"packagistの場合、そのファイルは`/packages.json`に配置されるので、リポジトリの"
"URLは`repo.packagist.org`となります。\n"
"`example.org/packages.json`についてはリポジトリのURLは`example.org`になりま"
"す。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:71
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://example.org\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://example.org\"\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Title ####
#: ../doc/05-repositories.md:82
#, no-wrap
msgid "packages"
msgstr "packages"

#. type: Plain text
#: ../doc/05-repositories.md:85
msgid ""
"The only required field is `packages`. The JSON structure is as follows:"
msgstr ""
"唯一必要なフィールドは`packages`です。JSONの構造は以下のようなものです。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:86
#, no-wrap
msgid ""
"{\n"
"    \"packages\": {\n"
"        \"vendor/package-name\": {\n"
"            \"dev-master\": { @composer.json },\n"
"            \"1.0.x-dev\": { @composer.json },\n"
"            \"0.0.1\": { @composer.json },\n"
"            \"1.0.0\": { @composer.json }\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"packages\": {\n"
"        \"vendor/package-name\": {\n"
"            \"dev-master\": { @composer.json },\n"
"            \"1.0.x-dev\": { @composer.json },\n"
"            \"0.0.1\": { @composer.json },\n"
"            \"1.0.0\": { @composer.json }\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:101
msgid ""
"The `@composer.json` marker would be the contents of the `composer.json` "
"from that package version including as a minimum:"
msgstr ""
"`@composer.json`の印は、最小のものとして含むパッケージのバージョンに由来する"
"`composer.json`の内容になります。"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:105
msgid "dist or source"
msgstr "distまたはsource"

#. type: Plain text
#: ../doc/05-repositories.md:107
msgid "Here is a minimal package definition:"
msgstr "以下は最小限のパッケージの定義です。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:108
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"smarty/smarty\",\n"
"    \"version\": \"3.1.7\",\n"
"    \"dist\": {\n"
"        \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"        \"type\": \"zip\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"name\": \"smarty/smarty\",\n"
"    \"version\": \"3.1.7\",\n"
"    \"dist\": {\n"
"        \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"        \"type\": \"zip\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:120
msgid ""
"It may include any of the other fields specified in the [schema](04-schema."
"md)."
msgstr ""
"[スキーマ](04-schema.md)には指定される他のフィールドの何れかを含められます。"

# フィールド名なので訳しません。
#. type: Title ####
#: ../doc/05-repositories.md:121
#, no-wrap
msgid "notify-batch"
msgstr "notify-batch"

#. type: Plain text
#: ../doc/05-repositories.md:126
msgid ""
"The `notify-batch` field allows you to specify a URL that will be called "
"every time a user installs a package. The URL can be either an absolute path "
"(that will use the same domain as the repository), or a fully qualified URL."
msgstr ""
"`notify-batch`フィールドでは利用者がパッケージをインストールするときに毎回呼"
"ばれるURLを指定できます。\n"
"URLは絶対パス（リポジトリと同じドメイン）ないし完全に修飾されたURLです。"

#. type: Plain text
#: ../doc/05-repositories.md:128
msgid "An example value:"
msgstr "値の一例："

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:129
#, no-wrap
msgid ""
"{\n"
"    \"notify-batch\": \"/downloads/\"\n"
"}\n"
msgstr ""
"{\n"
"    \"notify-batch\": \"/downloads/\"\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:138
msgid ""
"For `example.org/packages.json` containing a `monolog/monolog` package, this "
"would send a `POST` request to `example.org/downloads/` with following JSON "
"request body:"
msgstr ""
"`monolog/monolog`パッケージを含む`example.org/packages.json`について、このよ"
"うにすると以下のJSON要求本文とともに`example.org/downloads/`へPOST要求を送り"
"ます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:139
#, no-wrap
msgid ""
"{\n"
"    \"downloads\": [\n"
"        {\"name\": \"monolog/monolog\", \"version\": \"1.2.1.0\"}\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"downloads\": [\n"
"        {\"name\": \"monolog/monolog\", \"version\": \"1.2.1.0\"}\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:149
msgid ""
"The version field will contain the normalized representation of the version "
"number."
msgstr "バージョンフィールドはバージョン数の正規化された表現を含みます。"

#. type: Plain text
#: ../doc/05-repositories.md:151 ../doc/05-repositories.md:206
#: ../doc/05-repositories.md:224 ../doc/05-repositories.md:247
msgid "This field is optional."
msgstr "このフィールドは省略できます。"

#. type: Title ####
#: ../doc/05-repositories.md:152
#, no-wrap
msgid "metadata-url, available-packages and available-package-patterns"
msgstr "metadata-url、available-packages、available-package-patterns"

#. type: Plain text
#: ../doc/05-repositories.md:157
msgid ""
"The `metadata-url` field allows you to provide a URL template to serve all "
"packages which are in the repository. It must contain the placeholder "
"`%package%`."
msgstr ""
"`metadata-url`フィールドでは、リポジトリにある全てのパッケージを提供するURLテ"
"ンプレートを与えます。\n"
"プレースホルダー`%package%`を含まなければなりません。"

#. type: Plain text
#: ../doc/05-repositories.md:163
msgid ""
"This field is new in Composer v2, and is prioritised over the `provider-"
"includes` and `providers-url` fields if both are present.  For compatibility "
"with both Composer v1 and v2 you ideally want to provide both. New "
"repository implementations may only need to support v2 however."
msgstr ""
"このフィールドはComposer v2で新しく登場したもので、`provider-includes`と"
"`providers-url`が両方とも存在する場合、これらより優先されます。\n"
"Composer v1とComposer v2両方の互換性のため、理想的には両方とも提供したいで"
"しょう。\n"
"しかし新しいリポジトリの実装はv2対応のみに対応しさえすれば良いです。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:166
#, no-wrap
msgid ""
"{\n"
"    \"metadata-url\": \"/p2/%package%.json\"\n"
"}\n"
msgstr ""
"{\n"
"    \"metadata-url\": \"/p2/%package%.json\"\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:176
msgid ""
"Whenever Composer looks for a package, it will replace `%package%` by the "
"package name, and fetch that URL. If dev stability is allowed for the "
"package, it will also load the URL again with `$packageName~dev` (e.g.  `/p2/"
"foo/bar~dev.json` to look for `foo/bar`'s dev versions)."
msgstr ""
"Composerがパッケージを探すときは毎回`%package%`をパッケージ名で置き換え、その"
"URLを取得します。開発安定性がそのパッケージについて許容される場合、"
"`$packageName~dev`で再びURLを読み込むことができます（例：`/p2/foo/bar~dev."
"json`は`foo/bar`の開発版を探します）。"

#. type: Plain text
#: ../doc/05-repositories.md:180
msgid ""
"The `foo/bar.json` and `foo/bar~dev.json` files containing package versions "
"MUST contain only versions for the foo/bar package, as `{\"packages\":{\"foo/"
"bar\":[ ... versions here ... ]}}`."
msgstr ""
"パッケージのバージョンを含む`foo/bar.json`と`foo/bar~dev.json`ファイルはfoo/"
"barパッケージのバージョンのみを含まなければなりません。`{\"packages\":{\"foo/"
"bar\":[……ここにバージョン……]}}`のような感じです。"

#. type: Plain text
#: ../doc/05-repositories.md:183
msgid ""
"Caching is done via the use of If-Modified-Since header, so make sure you "
"return Last-Modified headers and that they are accurate."
msgstr ""
"キャッシュはIf-Modified-Sinceヘッダを使うことで行われます。ですから必ずLast-"
"Modifiedヘッダを返して正確な内容であるようにしてください。"

#. type: Plain text
#: ../doc/05-repositories.md:191
msgid ""
"The array of versions can also optionally be minified using "
"`Composer\\MetadataMinifier\\MetadataMinifier::minify()` from [composer/"
"metadata-minifier](https://packagist.org/packages/composer/metadata-"
"minifier).  If you do that, you should add a `\"minified\": "
"\"composer/2.0\"` key at the top level to indicate to Composer it must "
"expand the version list back into the original data. See https://repo."
"packagist.org/p2/monolog/monolog.json for an example."
msgstr ""
"バージョンの配列は[composer/metadata-minifier](https://packagist.org/"
"packages/composer/metadata-minifier)の"
"`Composer\\MetadataMinifier\\MetadataMinifier::minify()`を使って最小化するこ"
"ともできます。\n"
"もしそうした場合、最上位に`\"minified\": \"composer/2.0\"`キーを付け、"
"Composerにバージョンのリストを展開して元のデータに戻さなければいけないことを"
"示すべきです。\n"
"一例として https://repo.packagist.org/p2/monolog/monolog.json を参照してくだ"
"さい。"

#. type: Plain text
#: ../doc/05-repositories.md:196
msgid ""
"Any requested package which does not exist MUST return a 404 status code, "
"which will indicate to Composer that this package does not exist in your "
"repository. Make sure the 404 response is fast to avoid blocking Composer.  "
"Avoid redirects to alternative 404 pages."
msgstr ""
"存在しないパッケージを要求されたら404ステータスコードを返さなければなりませ"
"ん。このステータスコードによりComposerにこのパッケージがリポジトリに存在しな"
"いことが示されます。404応答は早く返してComposerがブロックされるのを回避するよ"
"うにしてください。代替の404ページへのリダイレクトは避けてください。"

#. type: Plain text
#: ../doc/05-repositories.md:204
msgid ""
"If your repository only has a small number of packages, and you want to "
"avoid the 404-requests, you can also specify an `\"available-packages\"` key "
"in `packages.json` which should be an array with all the package names that "
"your repository contains. Alternatively you can specify an `\"available-"
"package-patterns\"` key which is an array of package name patterns (with `*` "
"matching any string, e.g. `vendor/*` would make Composer look up every "
"matching package name in this repository)."
msgstr ""
"リポジトリにごく少数のパッケージしかなく、404になる要求を避けたければ"
"`packages.json`にリポジトリに含まれる全てのパッケージ名が配列になった"
"`\"available-packages\"`キーを指定することもできます。代わりにパッケージ名の"
"パターンの配列である`\"available-package-patterns\"`キーを指定することもでき"
"ます（`*`だと任意の文字列に照合します。例：`vendor/*`ではComposerはこのリポジ"
"トリにある全ての照合したパッケージ名を探します）。"

# フィールド名なので訳しません。
#. type: Title ####
#: ../doc/05-repositories.md:207
#, no-wrap
msgid "providers-api"
msgstr "providers-api"

#. type: Plain text
#: ../doc/05-repositories.md:212
msgid ""
"The `providers-api` field allows you to provide a URL template to serve all "
"packages which provide a given package name, but not the package which has "
"that name. It must contain the placeholder `%package%`."
msgstr ""
"`providers-api`フィールドでは与えられたパッケージ名を提供する全てのパッケー"
"ジ、ただしその名前のパッケージ以外、を返すURLテンプレートを与えられます。\n"
"プレースホルダー`%package%`を含まなければなりません。"

#. type: Plain text
#: ../doc/05-repositories.md:216
msgid ""
"For example https://packagist.org/providers/monolog/monolog.json lists some "
"package which have a \"provide\" rule for monolog/monolog, but it does not "
"list monolog/monolog itself."
msgstr ""
"例えば https://packagist.org/providers/monolog/monolog.json はmonolog/monolog"
"に \"provide\" 規則を持つパッケージを一覧にしますが、monolog/monolog自体は一"
"覧に挙がりません。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:217
#, no-wrap
msgid ""
"{\n"
"    \"providers-api\": \"https://packagist.org/providers/%package%.json\",\n"
"}\n"
msgstr ""
"{\n"
"    \"providers-api\": \"https://packagist.org/providers/%package%.json\",\n"
"}\n"

# フィールド名なので訳しません。
#. type: Title ####
#: ../doc/05-repositories.md:225
#, no-wrap
msgid "list"
msgstr "list"

#. type: Plain text
#: ../doc/05-repositories.md:231
msgid ""
"The `list` field allows you to return the names of packages which match a "
"given filter (or all names if no filter is present). It should accept an "
"optional `?filter=xx` query param, which can contain `*` as wildcards "
"matching any substring."
msgstr ""
"`list`フィールドでは与えられたフィールド（もしくはフィルタが存在しなければ全"
"ての名前）に照合するパッケージの名前を返せます。\n"
"任意で`?filter=xx`クエリパラメータを受け付けますが、これには任意の部分文字列"
"に照合するワイルドカードとして`*`を含められます。"

#. type: Plain text
#: ../doc/05-repositories.md:233
msgid "Replace/provide rules should not be considered here."
msgstr "replace/provide規則はここでは考慮すべきではありません。"

#. type: Plain text
#: ../doc/05-repositories.md:235
msgid "It must return an array of package names:"
msgstr "パッケージ名の配列を返さねばなりません。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:235
#, no-wrap
msgid ""
"{\n"
"    \"packageNames\": [\n"
"        \"a/b\",\n"
"        \"c/d\"\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"packageNames\": [\n"
"        \"a/b\",\n"
"        \"c/d\"\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:245
msgid ""
"See <https://packagist.org/packages/list.json?filter=composer/*> for example."
msgstr ""
"例については<https://packagist.org/packages/list.json?filter=composer/*>を参"
"照してください。"

#. type: Title ####
#: ../doc/05-repositories.md:248
#, no-wrap
msgid "provider-includes and providers-url"
msgstr "provider-includesとproviders-url"

#. type: Plain text
#: ../doc/05-repositories.md:253
msgid ""
"The `provider-includes` field allows you to list a set of files that list "
"package names provided by this repository. The hash should be a sha256 of "
"the files in this case."
msgstr ""
"`provider-includes`フィールドでは、このリポジトリから提供されるパッケージ名を"
"一覧にするファイルの集まりを列挙できます。\n"
"この場合ハッシュはファイルのsha256になります。"

#. type: Plain text
#: ../doc/05-repositories.md:257
msgid ""
"The `providers-url` describes how provider files are found on the server. It "
"is an absolute path from the repository root. It must contain the "
"placeholders `%package%` and `%hash%`."
msgstr ""
"`providers-url`は提供するファイルをサーバーで見付ける方法を記述します。\n"
"リポジトリの根幹からの絶対パスです。\n"
"`%package%`と`%hash%`のプレースホルダーを含まなければいけません。"

#. type: Plain text
#: ../doc/05-repositories.md:260
msgid ""
"These fields are used by Composer v1, or if your repository does not have "
"the `metadata-url` field set."
msgstr ""
"これらのフィールドは、Composer v1かリポジトリが`metadata-url`フィールドを設定"
"していない場合に使われます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:263
#, no-wrap
msgid ""
"{\n"
"    \"provider-includes\": {\n"
"        \"providers-a.json\": {\n"
"            \"sha256\": \"f5b4bc0b354108ef08614e569c1ed01a2782e67641744864a74e788982886f4c\"\n"
"        },\n"
"        \"providers-b.json\": {\n"
"            \"sha256\": \"b38372163fac0573053536f5b8ef11b86f804ea8b016d239e706191203f6efac\"\n"
"        }\n"
"    },\n"
"    \"providers-url\": \"/p/%package%$%hash%.json\"\n"
"}\n"
msgstr ""
"{\n"
"    \"provider-includes\": {\n"
"        \"providers-a.json\": {\n"
"            \"sha256\": \"f5b4bc0b354108ef08614e569c1ed01a2782e67641744864a74e788982886f4c\"\n"
"        },\n"
"        \"providers-b.json\": {\n"
"            \"sha256\": \"b38372163fac0573053536f5b8ef11b86f804ea8b016d239e706191203f6efac\"\n"
"        }\n"
"    },\n"
"    \"providers-url\": \"/p/%package%$%hash%.json\"\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:279
msgid ""
"Those files contain lists of package names and hashes to verify the file "
"integrity, for example:"
msgstr ""
"これらのファイルにはファイルの完全性を検証するハッシュが含まれます。例えば次"
"の通りです。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:280
#, no-wrap
msgid ""
"{\n"
"    \"providers\": {\n"
"        \"acme/foo\": {\n"
"            \"sha256\": \"38968de1305c2e17f4de33aea164515bc787c42c7e2d6e25948539a14268bb82\"\n"
"        },\n"
"        \"acme/bar\": {\n"
"            \"sha256\": \"4dd24c930bd6e1103251306d6336ac813b563a220d9ca14f4743c032fb047233\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"providers\": {\n"
"        \"acme/foo\": {\n"
"            \"sha256\": \"38968de1305c2e17f4de33aea164515bc787c42c7e2d6e25948539a14268bb82\"\n"
"        },\n"
"        \"acme/bar\": {\n"
"            \"sha256\": \"4dd24c930bd6e1103251306d6336ac813b563a220d9ca14f4743c032fb047233\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:298
msgid ""
"The file above declares that acme/foo and acme/bar can be found in this "
"repository, by loading the file referenced by `providers-url`, replacing "
"`%package%` by the vendor namespaced package name and `%hash%` by the sha256 "
"field. Those files themselves contain package definitions as described "
"[above](#packages)."
msgstr ""
"上のファイルは`providers-url`で参照されたファイルを読み込むことにより、このリ"
"ポジトリにacme/fooとacme/barがあることを宣言しています。\n"
"ベンダーの名前空間が付いたパッケージ名で`%package%`を、`%hash%`をsha256フィー"
"ルドを、それぞれ置き換えます。\n"
"これらのファイル自体には[上](#packages)で前述したパッケージの定義が含まれま"
"す。"

#. type: Plain text
#: ../doc/05-repositories.md:301
msgid ""
"These fields are optional. You probably don't need them for your own custom "
"repository."
msgstr ""
"これらのフィールドは省略可能です。\n"
"恐らく独自のリポジトリでは必要ないでしょう。"

#. type: Title ####
#: ../doc/05-repositories.md:302
#, no-wrap
msgid "cURL or stream options"
msgstr "cURLとストリームオプション"

#. type: Plain text
#: ../doc/05-repositories.md:310
msgid ""
"The repository is accessed either using cURL (Composer 2 with ext-curl "
"enabled)  or PHP streams. You can set extra options using the `options` "
"parameter. For PHP streams, you can set any valid PHP stream context option. "
"See [Context options and parameters](https://php.net/manual/en/context.php) "
"for more information. When cURL is used, only a limited set of `http` and "
"`ssl` options can be configured."
msgstr ""
"リポジトリへはcURL（ext-curlが有効なComposer 2）またはPHPストリームの何れかを"
"使ってアクセスします。\n"
"`options`パラメータを使って追加のオプションを設定できます。\n"
"PHPストリームについては、任意の妥当なPHPストリームコンテキストオプションを設"
"定できます。\n"
"詳細は[コンテキストオプションとパラメータ](https://php.net/manual/en/context."
"php)を参照してください。\n"
"cURLが使われているとき、ごく一部の`http`と`ssl`オプションしか設定できないよう"
"に制限されます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:311
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://example.org\",\n"
"            \"options\": {\n"
"                \"http\": {\n"
"                    \"timeout\": 60\n"
"                }\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"acme/package\": \"^1.0\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://example.org\",\n"
"            \"options\": {\n"
"                \"http\": {\n"
"                    \"timeout\": 60\n"
"                }\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"acme/package\": \"^1.0\"\n"
"    }\n"
"}\n"

#. type: Title ###
#: ../doc/05-repositories.md:330
#, no-wrap
msgid "VCS"
msgstr "VCS"

#. type: Plain text
#: ../doc/05-repositories.md:335
msgid ""
"VCS stands for version control system. This includes versioning systems like "
"git, svn, fossil or hg. Composer has a repository type for installing "
"packages from these systems."
msgstr ""
"VCSはバージョンコントロールシステム (Version Control System) から来ています。"
"これにはgit、svn、fossil、hgのようなバージョニングシステムが含まれます。"
"Composerにはこれらのシステムからパッケージをインストールするリポジトリ種別が"
"あります。"

#. type: Title ####
#: ../doc/05-repositories.md:336
#, no-wrap
msgid "Loading a package from a VCS repository"
msgstr "VCSリポジトリからパッケージを読み込む"

#. type: Plain text
#: ../doc/05-repositories.md:349
msgid ""
"There are a few use cases for this. The most common one is maintaining your "
"own fork of a third party library. If you are using a certain library for "
"your project, and you decide to change something in the library, you will "
"want your project to use the patched version. If the library is on GitHub "
"(this is the case most of the time), you can fork it there and push your "
"changes to your fork. After that you update the project's `composer.json`. "
"All you have to do is add your fork as a repository and update the version "
"constraint to point to your custom branch. In `composer.json` only, you "
"should prefix your custom branch name with `\"dev-\"` (without making it "
"part of the actual branch name). For version constraint naming conventions "
"see [Libraries](02-libraries.md) for more information."
msgstr ""
"これにはいくつかの使い途があります。\n"
"一番よくあるものとしては、サードパーティライブラリの独自のフォークを維持管理"
"することです。\n"
"プロジェクトで或るライブラリを使用していて、ライブラリ内の何かを変更し、プロ"
"ジェクトでパッチを適用したバージョンを使用しようと思ったとします。\n"
"ライブラリがGitHubにある場合（殆どのライブラリが当てはまります）、フォークし"
"て、変更をフォークにプッシュできます。\n"
"その後、プロジェクトの`composer.json`を更新します。\n"
"する必要があるのは、フォークをリポジトリとして追加し、バージョン制約を更新し"
"てカスタム ブランチを指すようにすることだけです。\n"
"`composer.json` でのみ、カスタムブランチ名の前に`\"dev-\"`を付けるべきです"
"（実際のブランチ名の一部にしないでください）。\n"
"バージョン制約の命名規則については、[ライブラリ](02-libraries.md)を参照してく"
"ださい。"

#. type: Plain text
#: ../doc/05-repositories.md:351
msgid ""
"Example assuming you patched monolog to fix a bug in the `bugfix` branch:"
msgstr ""
"`bugfix`ブランチのバグを修正するためにmonologにパッチを当てたときの例は以下で"
"す。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:352
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/igorw/monolog\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"dev-bugfix\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/igorw/monolog\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"dev-bugfix\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:368
msgid ""
"When you run `php composer.phar update`, you should get your modified "
"version of `monolog/monolog` instead of the one from packagist."
msgstr ""
"`php composer.phar update`を実行すると、修正したバージョンの`monolog/monolog`"
"が取得されます。packagistからのものではありません。"

#. type: Plain text
#: ../doc/05-repositories.md:375
msgid ""
"Note that you should not rename the package unless you really intend to fork "
"it in the long term, and completely move away from the original package.  "
"Composer will correctly pick your package over the original one since the "
"custom repository has priority over packagist. If you want to rename the "
"package, you should do so in the default (often master) branch and not in a "
"feature branch, since the package name is taken from the default branch."
msgstr ""
"長期的にフォークするつもりがない限り、パッケージを改名しないでください。\n"
"また、もし変更するならするで、元のパッケージから完全に離れたものにする必要が"
"あります。\n"
"独自リポジトリはpackagistよりも優先されるため、Composerは元のパッケージではな"
"く自前のパッケージを正しく選択します。\n"
"パッケージを改名する場合、パッケージ名が既定のブランチから取得されるため、機"
"能ブランチではなく、既定の（多くの場合master）ブランチで行う必要があります。"

#. type: Plain text
#: ../doc/05-repositories.md:379
msgid ""
"Also note that the override will not work if you change the `name` property "
"in your forked repository's `composer.json` file as this needs to match the "
"original for the override to work."
msgstr ""
"また、フォークされたリポジトリの`composer.json`ファイルの`name`プロパティを変"
"更すると、上書きが機能しないことに注意してください。\n"
"上書きが機能するには元のものと合致する必要があるからです。"

#. type: Plain text
#: ../doc/05-repositories.md:383
msgid ""
"If other dependencies rely on the package you forked, it is possible to "
"inline-alias it so that it matches a constraint that it otherwise would "
"not.  For more information [see the aliases article](articles/aliases.md)."
msgstr ""
"他の依存関係がフォークしたパッケージに依存している場合は、それをインラインエ"
"イリアスして、他の方法では一致しない制約に一致させることができます。\n"
"詳細については[エイリアスの記事を参照してください](articles/aliases.md)。"

#. type: Title ####
#: ../doc/05-repositories.md:384
#, no-wrap
msgid "Using private repositories"
msgstr "私有リポジトリを使う"

#. type: Plain text
#: ../doc/05-repositories.md:388
msgid ""
"Exactly the same solution allows you to work with your private repositories "
"at GitHub and Bitbucket:"
msgstr "GitHubとBitbucketの私有リポジトリを全く同じやり方で扱えます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:389
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\":  \"git@bitbucket.org:vendor/my-private-repo.git\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"vendor/my-private-repo\": \"dev-master\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\":  \"git@bitbucket.org:vendor/my-private-repo.git\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"vendor/my-private-repo\": \"dev-master\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:404
msgid "The only requirement is the installation of SSH keys for a git client."
msgstr ""
"唯一の要件は、gitクライアント用のSSHキーがインストールされていることです。"

#. type: Title ####
#: ../doc/05-repositories.md:405
#, no-wrap
msgid "Git alternatives"
msgstr "Gitの代替案"

#. type: Plain text
#: ../doc/05-repositories.md:409
msgid ""
"Git is not the only version control system supported by the VCS repository.  "
"The following are supported:"
msgstr ""
"VCSリポジトリで対応しているバージョン管理システムはGitだけではありません。\n"
"以下に対応しています。"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:414
msgid "**Git:** [git-scm.com](https://git-scm.com)"
msgstr "**Git:** [git-scm.com](https://git-scm.com)"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:414
msgid "**Subversion:** [subversion.apache.org](https://subversion.apache.org)"
msgstr "**Subversion:** [subversion.apache.org](https://subversion.apache.org)"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:414
msgid "**Mercurial:** [mercurial-scm.org](https://www.mercurial-scm.org)"
msgstr "**Mercurial:** [mercurial-scm.org](https://www.mercurial-scm.org)"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:414
msgid "**Fossil**: [fossil-scm.org](https://www.fossil-scm.org/)"
msgstr "**Fossil**: [fossil-scm.org](https://www.fossil-scm.org/)"

#. type: Plain text
#: ../doc/05-repositories.md:420
msgid ""
"To get packages from these systems you need to have their respective clients "
"installed. That can be inconvenient. And for this reason there is special "
"support for GitHub and Bitbucket that use the APIs provided by these sites, "
"to fetch the packages without having to install the version control system. "
"The VCS repository provides `dist`s for them that fetch the packages as zips."
msgstr ""
"これらのシステムからパッケージを取得するにはそれぞれのクライアントがインス"
"トールされてる必要がありますが、これだと不便かもしれません。\n"
"このため、GitHubとBitbucketについては、これらのサイトが提供するAPIを使用し"
"て、バージョン管理システムをインストールせずにパッケージを取得する特別な対応"
"が入っています。\n"
"VCSリポジトリは、パッケージをzipとして取得する`dist`を提供します。"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:423
msgid "**GitHub:** [github.com](https://github.com) (Git)"
msgstr "**GitHub:** [github.com](https://github.com) (Git)"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:423
msgid "**Bitbucket:** [bitbucket.org](https://bitbucket.org) (Git)"
msgstr "**Bitbucket:** [bitbucket.org](https://bitbucket.org) (Git)"

#. type: Plain text
#: ../doc/05-repositories.md:428
msgid ""
"The VCS driver to be used is detected automatically based on the URL. "
"However, should you need to specify one for whatever reason, you can use "
"`bitbucket`, `github`, `gitlab`, `perforce`, `fossil`, `git`, `svn` or `hg` "
"as the repository type instead of `vcs`."
msgstr ""
"使用するVCSドライバーは、URLに基づいて自動的に検出されます。\n"
"ただし、何らかの理由で指定する必要がある場合は、`vcs`に代えて`bitbucket`、"
"`github`、`gitlab`、`perforce`、`fossil`、`git`、`svn`、`hg`がリポジトリの種"
"類として使えます。"

#. type: Plain text
#: ../doc/05-repositories.md:433
msgid ""
"If you set the `no-api` key to `true` on a github repository it will clone "
"the repository as it would with any other git repository instead of using "
"the GitHub API. But unlike using the `git` driver directly, Composer will "
"still attempt to use github's zip files."
msgstr ""
"githubリポジトリで`no-api`キーを`true`に設定すると、GitHub APIは使用せず、他"
"のgitリポジトリと同様にリポジトリがクローンされます。\n"
"ただし、`git`ドライバーを直接使用する場合とは異なり、Composerは依然として"
"githubのzipファイルを使用しようとします。"

#. type: Plain text
#: ../doc/05-repositories.md:438
msgid ""
"Please note: * **To let Composer choose which driver to use** the repository "
"type needs to be defined as \"vcs\" * **If you already used a private "
"repository**, this means Composer should have cloned it in cache. If you "
"want to install the same package with drivers, remember to launch the "
"command `composer clearcache` followed by the command `composer update` to "
"update Composer cache and install the package from dist.  * VCS driver `git-"
"bitbucket` is deprecated in favor of `bitbucket`"
msgstr ""
"以下の点に注意してください。\n"
"\n"
"* **Composerに使用するドライバを選ばせるには**、リポジトリの種類は「vcs」とし"
"て定義されている必要があります\n"
"* **既に私有リポジトリを使っている場合**、Composerはキャッシュへクローンする"
"ことになります。\n"
" 同じパッケージをドライバと一緒にインストールしたい場合、`composer "
"clearcache`コマンドに続けて`composer update`とすることでComposerのキャッシュ"
"を消去しdistからパッケージをインストールさせられることを覚えておきましょう\n"
"* VCSドライバ`git-bitbucket`は`bitbucket`に取って代わられたため時代遅れです"

#. type: Title ####
#: ../doc/05-repositories.md:439
#, no-wrap
msgid "Bitbucket Driver Configuration"
msgstr "Bitbucketドライバ設定"

#. type: Plain text
#: ../doc/05-repositories.md:442
#, no-wrap
msgid "> **Note that the repository endpoint for Bitbucket needs to be https rather than git.**\n"
msgstr "> **Bitbucketのリポジトリのエンドポイントはgitではなくhttpsになっている必要がある点に注意してください。**\n"

#. type: Plain text
#: ../doc/05-repositories.md:445
msgid ""
"After setting up your bitbucket repository, you will also need to [set up "
"authentication](articles/authentication-for-private-packages.md#bitbucket-"
"oauth)."
msgstr ""
"bitbucketリポジトリが準備できたら[認証の準備](articles/authentication-for-"
"private-packages.md#bitbucket-oauth)もする必要があるでしょう。"

#. type: Title ####
#: ../doc/05-repositories.md:446
#, no-wrap
msgid "Subversion Options"
msgstr "Subversionのオプション"

#. type: Plain text
#: ../doc/05-repositories.md:453
msgid ""
"Since Subversion has no native concept of branches and tags, Composer "
"assumes by default that code is located in `$url/trunk`, `$url/branches` and "
"`$url/tags`. If your repository has a different layout you can change those "
"values. For example if you used capitalized names you could configure the "
"repository like this:"
msgstr ""
"Subversion自体にはブランチとタグの概念がないため、Composerは既定でコードが"
"`$url/trunk`、`$url/branches`、`$url/tags`にあるという前提を置きます。\n"
"リポジトリの配置が異なる場合は、それらの値を変更できます。\n"
"たとえば、大文字の名前を使用した場合、次のようにリポジトリを構成できます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:454
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"http://svn.example.org/projectA/\",\n"
"            \"trunk-path\": \"Trunk\",\n"
"            \"branches-path\": \"Branches\",\n"
"            \"tags-path\": \"Tags\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"http://svn.example.org/projectA/\",\n"
"            \"trunk-path\": \"Trunk\",\n"
"            \"branches-path\": \"Branches\",\n"
"            \"tags-path\": \"Tags\"\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:470
msgid ""
"If you have no branches or tags directory you can disable them entirely by "
"setting the `branches-path` or `tags-path` to `false`."
msgstr ""
"ブランチのディレクトリもタグのディレクトリもなければ`branches-path`ないし"
"`tags-path`を`false`に設定することで完全に無効にできます。"

#. type: Plain text
#: ../doc/05-repositories.md:475
msgid ""
"If the package is in a subdirectory, e.g. `/trunk/foo/bar/composer.json` and "
"`/tags/1.0/foo/bar/composer.json`, then you can make Composer access it by "
"setting the `\"package-path\"` option to the sub-directory, in this example "
"it would be `\"package-path\": \"foo/bar/\"`."
msgstr ""
"パッケージが副ディレクトリにある、例えば`/trunk/foo/bar/composer.json`と`/"
"tags/1.0/foo/bar/composer.json`にあるなら、`\"package-path\"`オプションを副"
"ディレクトリに設定することでComposerがアクセスできるようにさせられます。\n"
"この例では`\"package-path\": \"foo/bar/\"`となるでしょう。"

#. type: Plain text
#: ../doc/05-repositories.md:478
msgid ""
"If you have a private Subversion repository you can save credentials in the "
"http-basic section of your config (See [Schema](04-schema.md)):"
msgstr ""
"私有Subversionリポジトリがあるなら設定のhttp-basic節に資格情報を保存しておけ"
"ます（[スキーマ](04-schema.md)を参照）。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:479
#, no-wrap
msgid ""
"{\n"
"    \"http-basic\": {\n"
"        \"svn.example.org\": {\n"
"            \"username\": \"username\",\n"
"            \"password\": \"password\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"http-basic\": {\n"
"        \"svn.example.org\": {\n"
"            \"username\": \"username\",\n"
"            \"password\": \"password\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:494
msgid ""
"If your Subversion client is configured to store credentials by default "
"these credentials will be saved for the current user and existing saved "
"credentials for this server will be overwritten. To change this behavior by "
"setting the `\"svn-cache-credentials\"` option in your repository "
"configuration:"
msgstr ""
"Subversionクライアントが既定で資格情報を保存するように構成されている場合、こ"
"れらの資格情報は現在の利用者用に保存され、このサーバー用に保存されている既存"
"の資格情報は上書きされます。\n"
"この挙動を変更するには、次のようにリポジトリ構成で`\"svn-cache-credentials\"`"
"オプションを設定します。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:495
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"http://svn.example.org/projectA/\",\n"
"            \"svn-cache-credentials\": false\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"http://svn.example.org/projectA/\",\n"
"            \"svn-cache-credentials\": false\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:512
msgid ""
"If you want to use a project that does not support Composer through any of "
"the means above, you still can define the package yourself by using a "
"`package` repository."
msgstr ""
"上記のどの方法でもComposerに対応していないプロジェクトを使いたい場合でも、"
"`package`リポジトリを使って自分でパッケージを定義できます。"

#. type: Plain text
#: ../doc/05-repositories.md:517
msgid ""
"Basically, you define the same information that is included in the "
"`composer` repository's `packages.json`, but only for a single package. "
"Again, the minimum required fields are `name`, `version`, and either of "
"`dist` or `source`."
msgstr ""
"基本的に`composer`リポジトリの`package.json`に含まれるのと同じ情報を定義しま"
"すが、単一のパッケージ用限定です。\n"
"繰り返しますが、最小限必要なフィールドは`name`、`version`、そして`dist`または"
"`source`の何れかです。"

#. type: Plain text
#: ../doc/05-repositories.md:519
msgid "Here is an example for the smarty template engine:"
msgstr "以下はsmartyテンプレートエンジンの例です。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:520
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": {\n"
"                \"name\": \"smarty/smarty\",\n"
"                \"version\": \"3.1.7\",\n"
"                \"dist\": {\n"
"                    \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                    \"type\": \"zip\"\n"
"                },\n"
"                \"source\": {\n"
"                    \"url\": \"http://smarty-php.googlecode.com/svn/\",\n"
"                    \"type\": \"svn\",\n"
"                    \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                },\n"
"                \"autoload\": {\n"
"                    \"classmap\": [\"libs/\"]\n"
"                }\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"smarty/smarty\": \"3.1.*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": {\n"
"                \"name\": \"smarty/smarty\",\n"
"                \"version\": \"3.1.7\",\n"
"                \"dist\": {\n"
"                    \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                    \"type\": \"zip\"\n"
"                },\n"
"                \"source\": {\n"
"                    \"url\": \"http://smarty-php.googlecode.com/svn/\",\n"
"                    \"type\": \"svn\",\n"
"                    \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                },\n"
"                \"autoload\": {\n"
"                    \"classmap\": [\"libs/\"]\n"
"                }\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"smarty/smarty\": \"3.1.*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:550
msgid ""
"Typically, you would leave the source part off, as you don't really need it."
msgstr ""
"source部分は放置しておくのが普通です。本当に必要なことはまずないからです。"

#. type: Plain text
#: ../doc/05-repositories.md:553
msgid ""
"If a source key is included, the reference field should be a reference to "
"the version that will be installed.  Where the type field is `git`, this "
"will the be the commit id, branch or tag name."
msgstr ""
"sourceキーが含まれているとき、referenceフィールドはインストールされるバージョ"
"ンへの参照となります。\n"
"typeフィールドが`git`のとき、このフィールドはコミットIDやブランチやタグ名にな"
"ります。"

#. type: Plain text
#: ../doc/05-repositories.md:556
#, no-wrap
msgid ""
"> **Note**: It is not recommended to use a git branch name for the reference field. While this is valid since it is supported by `git checkout`,\n"
"> branch names are mutable so cannot be locked.\n"
msgstr ""
"> **補足：**\n"
"> referenceフィールドにGitのブランチ名を使うことはお勧めしません。\n"
"> `git checkout`に対応しているため妥当ではあるのですが、ブランチ名は可変なので固定できないのです。\n"

#. type: Plain text
#: ../doc/05-repositories.md:558
msgid ""
"Where the type field is `svn`, the reference field should contain the "
"reference that gets appended to the URL when running `svn co`."
msgstr ""
"フィールドが`svn`のとき、referenceフィールドには`svn co`を走らせるときに後ろ"
"に付ける参照が含まれます。"

#. type: Plain text
#: ../doc/05-repositories.md:566
#, no-wrap
msgid ""
"> **Note**: This repository type has a few limitations and should be avoided\n"
"> whenever possible:\n"
">\n"
"> - Composer will not update the package unless you change the `version` field.\n"
"> - Composer will not update the commit references, so if you use `master` as\n"
">   reference you will have to delete the package to force an update, and will\n"
">   have to deal with an unstable lock file.\n"
msgstr ""
"> **補足**：\n"
"> このリポジトリ種別には2、3の制約があり、できる限り避けるべきです。\n"
">\n"
"> - Composerは`version`フィールドを変えない限りパッケージを更新しません。\n"
"> - Composerはコミット参照を更新しません。\n"
">   そのため、参照として`master`を使う場合、強制的に更新するためにパッケージを削除し、不安定な固定ファイルに対処しなければならなくなるでしょう。\n"

#. type: Plain text
#: ../doc/05-repositories.md:568
msgid ""
"The `\"package\"` key in a `package` repository may be set to an array to "
"define multiple versions of a package:"
msgstr ""
"`package`リポジトリ中の`\"package\"`キーには複数バージョンのパッケージを定義"
"する配列を設定できます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:569
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": [\n"
"                {\n"
"                    \"name\": \"foo/bar\",\n"
"                    \"version\": \"1.0.0\",\n"
"                    ...\n"
"                },\n"
"                {\n"
"                    \"name\": \"foo/bar\",\n"
"                    \"version\": \"2.0.0\",\n"
"                    ...\n"
"                }\n"
"            ]\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": [\n"
"                {\n"
"                    \"name\": \"foo/bar\",\n"
"                    \"version\": \"1.0.0\",\n"
"                    ...\n"
"                },\n"
"                {\n"
"                    \"name\": \"foo/bar\",\n"
"                    \"version\": \"2.0.0\",\n"
"                    ...\n"
"                }\n"
"            ]\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Title ##
#: ../doc/05-repositories.md:591
#, no-wrap
msgid "Hosting your own"
msgstr "自分でホスティングする"

#. type: Plain text
#: ../doc/05-repositories.md:595
msgid ""
"While you will probably want to put your packages on packagist most of the "
"time, there are some use cases for hosting your own repository."
msgstr ""
"多分殆どの場合でパッケージをpackagistに置きたいものと思われますが、自分のリポ"
"ジトリをホスティングすることによる用途もあります。"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:598
msgid ""
"**Private company packages:** If you are part of a company that uses "
"Composer for their packages internally, you might want to keep those "
"packages private."
msgstr ""
"**企業の私有パッケージ：**\n"
"内部的なパッケージ用にComposerを使っている企業に所属しているなら、それらの"
"パッケージを私有としておきたいかもしれません。"

#. type: Bullet: '* '
#: ../doc/05-repositories.md:603
msgid ""
"**Separate ecosystem:** If you have a project which has its own ecosystem, "
"and the packages aren't really reusable by the greater PHP community, you "
"might want to keep them separate to packagist. An example of this would be "
"WordPress plugins."
msgstr ""
"**別のエコシステム:**\n"
"独自のエコシステムを持つプロジェクトがあり、より大きなPHPコミュニティからその"
"パッケージを実際に再利用できない場合は、packagistから分離させておきたいかもし"
"れません。\n"
"一例はWordPressプラグインです。"

#. type: Plain text
#: ../doc/05-repositories.md:606
msgid ""
"For hosting your own packages, a native `composer` type of repository is "
"recommended, which provides the best performance."
msgstr ""
"自分のパッケージをホスティングするには、ネイティブな`composer`の種類のリポジ"
"トリが推奨されます。\n"
"一番の効率性が齎されるからです。"

#. type: Plain text
#: ../doc/05-repositories.md:608
msgid "There are a few tools that can help you create a `composer` repository."
msgstr "`composer`リポジトリを作る上で、手助けになるツールはいくつかあります。"

#. type: Title ###
#: ../doc/05-repositories.md:609
#, no-wrap
msgid "Private Packagist"
msgstr "私有Packagist"

#. type: Plain text
#: ../doc/05-repositories.md:614
msgid ""
"[Private Packagist](https://packagist.com/) is a hosted or self-hosted "
"application providing private package hosting as well as mirroring of "
"GitHub, Packagist.org and other package repositories."
msgstr ""
"[私有Packagist](https://packagist.com/)ではGitHub、Packagist.org、その他の"
"パッケージリポジトリのミラーリングと共に私有パッケージのホスティングを提供す"
"るアプリケーションです。\n"
"Packagistでも立てられていますが、自分で立てることもできます。"

#. type: Plain text
#: ../doc/05-repositories.md:616
msgid "Check out [Packagist.com](https://packagist.com/) for more information."
msgstr "詳細は[Packagist.com](https://packagist.com/)をご確認ください。"

#. type: Title ###
#: ../doc/05-repositories.md:617
#, no-wrap
msgid "Satis"
msgstr "Satis"

#. type: Plain text
#: ../doc/05-repositories.md:621
msgid ""
"Satis is a static `composer` repository generator. It is a bit like an "
"ultra- lightweight, static file-based version of packagist."
msgstr ""
"Satisは静的な`composer`リポジトリ生成器です。\n"
"packagistを超軽量にして、静的なファイルを基盤にしたバージョンのようなもので"
"す。"

#. type: Plain text
#: ../doc/05-repositories.md:625
msgid ""
"You give it a `composer.json` containing repositories, typically VCS and "
"package repository definitions. It will fetch all the packages that are "
"`require`d and dump a `packages.json` that is your `composer` repository."
msgstr ""
"Satisにはリポジトリを含む`composer.json`を与えます。\n"
"リポジトリとしてよくあるのはVCSやパッケージレポジトリの定義です。\n"
"`require`されるパッケージを全て取得し、`packages.json`を吐き出しますが、これ"
"が`composer`リポジトリになります。"

#. type: Plain text
#: ../doc/05-repositories.md:629
msgid ""
"Check [the satis GitHub repository](https://github.com/composer/satis) and "
"the [handling private packages article](articles/handling-private-packages."
"md) for more information."
msgstr ""
"詳細は[satisのGitHubリポジトリ](https://github.com/composer/satis)と[プライ"
"ベートパッケージを扱うことについての記事](articles/handling-private-packages."
"md)をご確認ください。"

#. type: Title ###
#: ../doc/05-repositories.md:630
#, no-wrap
msgid "Artifact"
msgstr "アーティファクト"

#. type: Plain text
#: ../doc/05-repositories.md:638
msgid ""
"There are some cases, when there is no ability to have one of the previously "
"mentioned repository types online, even the VCS one. A typical example could "
"be cross-organisation library exchange through build artifacts. Of course, "
"most of the time these are private. To use these archives as-is, one can use "
"a repository of type `artifact` with a folder containing ZIP or TAR archives "
"of those private packages:"
msgstr ""
"前述のどのリポジトリの種類もオンラインにできない場合があります。\n"
"VCSが使われていたとしても例外ではありません。\n"
"よくある例は、ビルドアーティファクトによる組織間のライブラリ交換です。\n"
"もちろん殆どの場合で、これらは私有とされます。\n"
"これらのアーカイブをそのまま使用するには、これらの私有パッケージのZIPまたは"
"TARアーカイブを含むフォルダーに対して、種別`artifact`のリポジトリを使用できま"
"す。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:639
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"artifact\",\n"
"            \"url\": \"path/to/directory/with/zips/\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"private-vendor-one/core\": \"15.6.2\",\n"
"        \"private-vendor-two/connectivity\": \"*\",\n"
"        \"acme-corp/parser\": \"10.3.5\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"artifact\",\n"
"            \"url\": \"path/to/directory/with/zips/\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"private-vendor-one/core\": \"15.6.2\",\n"
"        \"private-vendor-two/connectivity\": \"*\",\n"
"        \"acme-corp/parser\": \"10.3.5\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:656
msgid "Each zip artifact is a ZIP archive with `composer.json` in root folder:"
msgstr ""
"それぞれのzipアーティファクトとは、根幹のフォルダにある`composer.json`がある"
"ZIPアーカイブです。"

#. type: Fenced code block (shell)
#: ../doc/05-repositories.md:657
#, no-wrap
msgid "unzip -l acme-corp-parser-10.3.5.zip\n"
msgstr "unzip -l acme-corp-parser-10.3.5.zip\n"

#. type: Fenced code block (text)
#: ../doc/05-repositories.md:660
#, no-wrap
msgid ""
"composer.json\n"
"...\n"
msgstr ""
"composer.json\n"
"...\n"

#. type: Plain text
#: ../doc/05-repositories.md:669
msgid ""
"If there are two archives with different versions of a package, they are "
"both imported. When an archive with a newer version is added in the artifact "
"folder and you run `update`, that version will be imported as well and "
"Composer will update to the latest version."
msgstr ""
"パッケージのバージョンが異なる2つのアーカイブがある場合、両方ともインポートさ"
"れます。\n"
"新しいバージョンのアーカイブがアーティファクトフォルダーに追加された状態で"
"`update`を実行すると、そのバージョンもインポートされ、Composerは最新版に更新"
"されます。"

#. type: Title ###
#: ../doc/05-repositories.md:670
#, no-wrap
msgid "Path"
msgstr "パス"

#. type: Plain text
#: ../doc/05-repositories.md:675
msgid ""
"In addition to the artifact repository, you can use the path one, which "
"allows you to depend on a local directory, either absolute or relative. This "
"can be especially useful when dealing with monolithic repositories."
msgstr ""
"アーティファクトリポジトリに加えて、絶対パスまたは相対パスのローカルディレク"
"トリに依存するパスを使用できます。\n"
"モノリシックリポジトリを扱う場合に特に役立ちます。"

#. type: Plain text
#: ../doc/05-repositories.md:677
msgid ""
"For instance, if you have the following directory structure in your "
"repository:"
msgstr "例えばリポジトリが以下のディレクトリ構造になっているとします。"

#. type: Fenced code block (text)
#: ../doc/05-repositories.md:677
#, no-wrap
msgid ""
"...\n"
"├── apps\n"
"│   └── my-app\n"
"│       └── composer.json\n"
"├── packages\n"
"│   └── my-package\n"
"│       └── composer.json\n"
"...\n"
msgstr ""
"...\n"
"├── apps\n"
"│   └── my-app\n"
"│       └── composer.json\n"
"├── packages\n"
"│   └── my-package\n"
"│       └── composer.json\n"
"...\n"

#. type: Plain text
#: ../doc/05-repositories.md:690
msgid ""
"Then, to add the package `my/package` as a dependency, in your `apps/my-app/"
"composer.json` file, you can use the following configuration:"
msgstr ""
"そうして依存関係として`apps/my-app/composer.json`ファイルにパッケージ`my/"
"package`を加えるには、以下の構成が使えます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:691
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/my-package\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"my/package\": \"*\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/my-package\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"my/package\": \"*\"\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:709
msgid ""
"If the package is a local VCS repository, the version may be inferred by the "
"branch or tag that is currently checked out. Otherwise, the version should "
"be explicitly defined in the package's `composer.json` file. If the version "
"cannot be resolved by these means, it is assumed to be `dev-master`."
msgstr ""
"パッケージがローカルのVCSリポジトリである場合、バージョンは現在チェックアウト"
"されているブランチまたはタグによって推測されます。\n"
"それ以外の場合は、パッケージの`composer.json`ファイルでバージョンを明示的に定"
"義すべきです。\n"
"これらの方法でバージョンが解決できない場合は、`dev-master`と見なされます。"

#. type: Plain text
#: ../doc/05-repositories.md:713
msgid ""
"When the version cannot be inferred from the local VCS repository, or when "
"you want to override the version, you can use the `versions` option when "
"declaring the repository:"
msgstr ""
"バージョンがローカルのVCSリポジトリから推測できない場合、もしくはそのバージョ"
"ンを上書きしたい場合は、リポジトリの宣言時に`versions`オプションが使えます。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:714
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/my-package\",\n"
"            \"options\": {\n"
"                \"versions\": {\n"
"                    \"my/package\": \"4.2-dev\"\n"
"                }\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/my-package\",\n"
"            \"options\": {\n"
"                \"versions\": {\n"
"                    \"my/package\": \"4.2-dev\"\n"
"                }\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:734
msgid ""
"The local package will be symlinked if possible, in which case the output in "
"the console will read `Symlinking from ../../packages/my-package`. If "
"symlinking is _not_ possible the package will be copied. In that case, the "
"console will output `Mirrored from ../../packages/my-package`."
msgstr ""
"可能なときはローカルパッケージがシンボリックリンクされます。\n"
"この場合端末の出力は`Symlinking from ../../packages/my-package`となります。\n"
"シンボリックリンクでき*ない*場合はパッケージが複製されます。\n"
"その場合端末の出力は`Mirrored from ../../packages/my-package`となります。"

#. type: Plain text
#: ../doc/05-repositories.md:739
msgid ""
"Instead of default fallback strategy you can force to use symlink with "
"`\"symlink\": true` or mirroring with `\"symlink\": false` option. Forcing "
"mirroring can be useful when deploying or generating package from a "
"monolithic repository."
msgstr ""
"既定のフォールバック戦略に代えて、`\"symlink\": true`としてシンボリックリンク"
"にしたり、`\"symlink\": false`オプションでミラーリングしたりすることを強制で"
"きます。\n"
"ミラーリングを強制すると、モノリシックレポジトリからパッケージをデプロイした"
"り生成したりする際に便利なことがあります。"

#. type: Plain text
#: ../doc/05-repositories.md:743
#, no-wrap
msgid ""
"> **Note:** On Windows, directory symlinks are implemented using NTFS junctions\n"
"> because they can be created by non-admin users. Mirroring will always be used\n"
"> on versions below Windows 7 or if `proc_open` has been disabled.\n"
msgstr ""
"> **補足：** Windowsでは管理者でない利用者によって作成される可能性があるため、NTFSジャンクションを使ってディレクトリのシンボリックリンクが実装されています。\n"
"> Windows 7より前のバージョンまたは`proc_open`が無効にされている場合は常にミラーリングが使用されます。\n"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:744
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/*\",\n"
"            \"options\": {\n"
"                \"symlink\": false\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/*\",\n"
"            \"options\": {\n"
"                \"symlink\": false\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:763
#, no-wrap
msgid ""
"Leading tildes are expanded to the current user's home folder, and environment\n"
"variables are parsed in both Windows and Linux/Mac notations. For example\n"
"`~/git/mypackage` will automatically load the mypackage clone from\n"
"`/home/<username>/git/mypackage`, equivalent to `$HOME/git/mypackage` or\n"
"`%USERPROFILE%/git/mypackage`.\n"
msgstr ""
"チルダを先頭に付けると現在の利用者のホームフォルダに展開され、環境変数はWIndowsとLinux/Macの両方の記法で解析されます。\n"
"例えば`~/git/mypackage`は自動的に`/home/<利用者名>/git/mypackage`からクローンしたmypackageを読み込みます。\n"
"`$HOME/git/mypackage`としたり`%USERPROFILE%/git/mypackage`としても同じことです。\n"

#. type: Plain text
#: ../doc/05-repositories.md:766
#, no-wrap
msgid ""
"> **Note:** Repository paths can also contain wildcards like `*` and `?`.\n"
"> For details, see the [PHP glob function](https://php.net/glob).\n"
msgstr ""
"> **補足：** リポジトリのパスは`*`や`?`のようなワイルドカードも含められます。\n"
"> 詳細については[PHPのglob関数](https://php.net/glob)を参照してください。\n"

#. type: Plain text
#: ../doc/05-repositories.md:769
msgid ""
"You can configure the way the package's dist reference (which appears in the "
"composer.lock file) is built."
msgstr ""
"（composer.lockファイルに現れる）パッケージのdistへの参照が構築される方法を構"
"成できます。"

#. type: Plain text
#: ../doc/05-repositories.md:777
#, no-wrap
msgid ""
"The following modes exist:\n"
"- `none` - reference will be always null. This can help reduce lock file conflicts\n"
"  in the lock file but reduces clarity as to when the last update happened and whether\n"
"  the package is in the latest state.\n"
"- `config` - reference is built based on a hash of the package's composer.json and repo config\n"
"- `auto` (used by default) - reference is built basing on the hash like with `config`, but if\n"
"  the package folder contains a git repository, the HEAD commit's hash is used as reference instead.\n"
msgstr ""
"以下のモードが存在します。\n"
"- `none`：参照は常に空です。\n"
"  これにより固定ファイル間の競合を低減する助けになる可能性がありますが、直近に更新があるとパッケージが最新の状態になっているかが比較的不明瞭になります。\n"
"- `config`：参照はパッケージのcomposer.jsonとリポジトリの設定のハッシュに基づいて構築されます\n"
"- `auto`（既定で使用されます）：参照は`comfig`のようなハッシュに基づいて構築されます。\n"
"  ただしパッケージフォルダがgitリポジトリを含んでいる場合、代わりにHEADコミットのハッシュが参照として使われます。\n"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:778
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/*\",\n"
"            \"options\": {\n"
"                \"reference\": \"config\"\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"path\",\n"
"            \"url\": \"../../packages/*\",\n"
"            \"options\": {\n"
"                \"reference\": \"config\"\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Title ##
#: ../doc/05-repositories.md:792
#, no-wrap
msgid "Disabling Packagist.org"
msgstr "Packagist.orgを無効にする"

#. type: Plain text
#: ../doc/05-repositories.md:796
msgid ""
"You can disable the default Packagist.org repository by adding this to your "
"`composer.json`:"
msgstr ""
"以下を`composer.json`に加えると既定のPackagist.orgリポジトリを無効にできま"
"す。"

#. type: Fenced code block (json)
#: ../doc/05-repositories.md:797
#, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"packagist.org\": false\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"packagist.org\": false\n"
"        }\n"
"    ]\n"
"}\n"

#. type: Plain text
#: ../doc/05-repositories.md:808
msgid "You can disable Packagist.org globally by using the global config flag:"
msgstr ""
"大域的な構成フラグを使うことで、大域的にPackagist.orgを無効にできます。"

#. type: Fenced code block (shell)
#: ../doc/05-repositories.md:809
#, no-wrap
msgid "php composer.phar config -g repo.packagist false\n"
msgstr "php composer.phar config -g repo.packagist false\n"

#. type: Plain text
#: ../doc/05-repositories.md:813
msgid "&larr; [Schema](04-schema.md)  | [Config](06-config.md) &rarr;"
msgstr "&larr; [スキーマ](04-schema.md)  | [設定](06-config.md) &rarr;"

#. type: Title #
#: ../doc/06-config.md:1
#, no-wrap
msgid "Config"
msgstr "構成"

#. type: Plain text
#: ../doc/06-config.md:5
msgid ""
"This chapter will describe the `config` section of the `composer.json` "
"[schema](04-schema.md)."
msgstr ""
"本章では`composer.json`の[スキーマ](04-schema.md)の`config`節について記述して"
"いきます。"

#. type: Title ##
#: ../doc/06-config.md:6
#, no-wrap
msgid "process-timeout"
msgstr "process-timeout"

# 2文目をもう少し分かりやすくしたい
#. type: Plain text
#: ../doc/06-config.md:12
msgid ""
"The timeout in seconds for process executions, defaults to 300 (5mins).  The "
"duration processes like git clones can run before Composer assumes they died "
"out. You may need to make this higher if you have a slow connection or huge "
"vendors."
msgstr ""
"プロセス実行の制限時間（秒）です。\n"
"既定では300（5分）です。\n"
"gitのクローンのような時間の掛かるプロセスは、Composerによりプロセスが異常終了"
"したと推定される前に実行できます。\n"
"接続が遅い場合やベンダーが大きい場合は、これを増やす必要があるかもしれませ"
"ん。"

#. type: Plain text
#: ../doc/06-config.md:15
msgid ""
"To disable the process timeout on a custom command under `scripts`, a static "
"helper is available:"
msgstr ""
"`scripts`以下の独自コマンドでプロセスの制限時間を無効にするには、静的ヘルパー"
"が使えます。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:16
#, no-wrap
msgid ""
"{\n"
"    \"scripts\": {\n"
"        \"test\": [\n"
"            \"Composer\\\\Config::disableProcessTimeout\",\n"
"            \"phpunit\"\n"
"        ]\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"scripts\": {\n"
"        \"test\": [\n"
"            \"Composer\\\\Config::disableProcessTimeout\",\n"
"            \"phpunit\"\n"
"        ]\n"
"    }\n"
"}\n"

#. type: Title ##
#: ../doc/06-config.md:27
#, no-wrap
msgid "allow-plugins"
msgstr "allow-plugins"

#. type: Plain text
#: ../doc/06-config.md:30
msgid "Defaults to `{}` which does not allow any plugins to be loaded."
msgstr "既定は`{}`で、1つもプラグインを読み込むことはできません。"

#. type: Plain text
#: ../doc/06-config.md:34
msgid ""
"As of Composer 2.2.0, the `allow-plugins` option adds a layer of security "
"allowing you to restrict which Composer plugins are able to execute code "
"during a Composer run."
msgstr ""
"Composer 2.2.0では、`allow-plugins`オプションによってセキュリティの層が追加さ"
"れ、Composerの実行中にどのComposerプラグインがコードを実行できるかを制限でき"
"るようになりました。"

#. type: Plain text
#: ../doc/06-config.md:38
msgid ""
"When a new plugin is first activated, which is not yet listed in the config "
"option, Composer will print a warning. If you run Composer interactively it "
"will prompt you to decide if you want to execute the plugin or not."
msgstr ""
"新しいプラグインが最初に活性化され、それが構成オプションにまだ挙げられていな"
"ければ、Composerは警告を印字します。\n"
"Composerを対話的に実行すると、プラグインを実行するかどうかを決めるようプロン"
"プトを出します。"

#. type: Plain text
#: ../doc/06-config.md:42
msgid ""
"Use this setting to allow only packages you trust to execute code. Set it to "
"an object with package name patterns as keys. The values are **true** to "
"allow and **false** to disallow while suppressing further warnings and "
"prompts."
msgstr ""
"この設定を使うと、信頼できるパッケージのみがコードを実行できるようになりま"
"す。\n"
"パッケージ名パターンをキーに持つオブジェクトに設定します。\n"
"値は、許可する場合は**true**で、許可しない場合は**false**です。\n"
"何れもこれ以外の警告とプロンプトは抑制されます。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:43
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"allow-plugins\": {\n"
"            \"third-party/required-plugin\": true,\n"
"            \"my-organization/*\": true,\n"
"            \"unnecessary/plugin\": false\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"allow-plugins\": {\n"
"            \"third-party/required-plugin\": true,\n"
"            \"my-organization/*\": true,\n"
"            \"unnecessary/plugin\": false\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/06-config.md:56
msgid ""
"You can also set the config option itself to `false` to disallow all "
"plugins, or `true` to allow all plugins to run (NOT recommended). For "
"example:"
msgstr ""
"構成オプション自体を`false`にして全てのプラグインを拒否したり、`true`にして全"
"てのプロラグインが走るのを許可したり（全くお勧めしません）するようにも設定で"
"きます。\n"
"例えば以下の通りです。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:57
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"allow-plugins\": false\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"allow-plugins\": false\n"
"    }\n"
"}\n"

#. type: Title ##
#: ../doc/06-config.md:65
#, no-wrap
msgid "use-include-path"
msgstr "use-include-path"

#. type: Plain text
#: ../doc/06-config.md:69
msgid ""
"Defaults to `false`. If `true`, the Composer autoloader will also look for "
"classes in the PHP include path."
msgstr ""
"既定では`false`です。\n"
"`true`にすると、Composerの自動読み込み器はPHPのインクルードパスにあるクラスも"
"探します。"

#. type: Title ##
#: ../doc/06-config.md:70
#, no-wrap
msgid "preferred-install"
msgstr "preferred-install"

#. type: Plain text
#: ../doc/06-config.md:75
msgid ""
"Defaults to `dist` and can be any of `source`, `dist` or `auto`. This option "
"allows you to set the install method Composer will prefer to use. Can "
"optionally be an object with package name patterns for keys for more "
"granular install preferences."
msgstr ""
"既定では`dist`で、`source`、`dist`、`auto`の何れかです。\n"
"このオプションではComposerが優先して使うインストール方法を設定できます。\n"
"お好みで、より柔軟なインストール設定のためにキーにパッケージ名のパターンがあ"
"るオブジェクトにすることもできます。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:76
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"preferred-install\": {\n"
"            \"my-organization/stable-package\": \"dist\",\n"
"            \"my-organization/*\": \"source\",\n"
"            \"partner-organization/*\": \"auto\",\n"
"            \"*\": \"dist\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"preferred-install\": {\n"
"            \"my-organization/stable-package\": \"dist\",\n"
"            \"my-organization/*\": \"source\",\n"
"            \"partner-organization/*\": \"auto\",\n"
"            \"*\": \"dist\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Bullet: '- '
#: ../doc/06-config.md:98
msgid ""
"`source` means Composer will install packages from their `source` if there "
"is one. This is typically a git clone or equivalent checkout of the version "
"control system the package uses. This is useful if you want to make a bugfix "
"to a project and get a local git clone of the dependency directly."
msgstr ""
"`source`は、Composerが（存在する場合）`source`からパッケージをインストールす"
"ることを意味します。\n"
"通常、git cloneまたは同等のパッケージが使用するバージョン管理システムのチェッ"
"クアウトです。\n"
"プロジェクトにバグ修正を行い、依存関係のローカルgitクローンを直接取得する場合"
"に便利です。"

#. type: Bullet: '- '
#: ../doc/06-config.md:98
msgid ""
"`auto` is the legacy behavior where Composer uses `source` automatically for "
"dev versions, and `dist` otherwise."
msgstr ""
"`auto`は遺物的な動作です。\n"
"開発バージョンの場合にComposerは`source`を自動的に使用し、それ以外の場合は"
"`dist`を使用します。"

#. type: Bullet: '- '
#: ../doc/06-config.md:98
msgid ""
"`dist` (the default as of Composer 2.1) means Composer installs from `dist`, "
"where possible. This is typically a zip file download, which is faster than "
"cloning the entire repository."
msgstr ""
"`dist`（Composer 2.1以降で既定）は、可能であればComposerが`dist`からインス"
"トールすることを意味します。\n"
"通常、zipファイルのダウンロードであり、リポジトリ全体のクローンよりも高速で"
"す。"

#. type: Plain text
#: ../doc/06-config.md:103
#, no-wrap
msgid ""
"> **Note:** Order matters. More specific patterns should be earlier than\n"
"> more relaxed patterns. When mixing the string notation with the hash\n"
"> configuration in global and package configurations the string notation\n"
"> is translated to a `*` package pattern.\n"
msgstr ""
"> **補足：** 順番は重要です。\n"
"> より限定されたパターンは、より緩いパターンの前に来るべきです。\n"
"> 大域構成やパッケージ構成で文字列表記とハッシュ構成を混在させると、文字列表記は`*`パッケージパターンに解釈されます。\n"

#. type: Plain text
#: ../doc/06-config.md:107
msgid "Security audit configuration options"
msgstr "セキュリティ監査の構成オプション"

#. type: Title ###
#: ../doc/06-config.md:108
#, no-wrap
msgid "ignore"
msgstr "ignore"

#. type: Plain text
#: ../doc/06-config.md:111
msgid ""
"A list of advisory ids, remote ids or CVE ids that are reported but let the "
"audit command pass."
msgstr ""
"勧告の識別子、リモートの識別子、CVEの識別子のリストです。\n"
"報告はされますが監査コマンドは通過させます。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:112
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"ignore\": {\n"
"                \"CVE-1234\": \"The affected component is not in use.\",\n"
"                \"GHSA-xx\": \"The security fix was applied as a patch.\",\n"
"                \"PKSA-yy\": \"Due to mitigations in place the update can be delayed.\"\n"
"            }\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"ignore\": {\n"
"                \"CVE-1234\": \"The affected component is not in use.\",\n"
"                \"GHSA-xx\": \"The security fix was applied as a patch.\",\n"
"                \"PKSA-yy\": \"Due to mitigations in place the update can be delayed.\"\n"
"            }\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/06-config.md:127
msgid "or"
msgstr "もしくは以下です。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:128
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"ignore\": [\"CVE-1234\", \"GHSA-xx\", \"PKSA-yy\"]\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"ignore\": [\"CVE-1234\", \"GHSA-xx\", \"PKSA-yy\"]\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/06-config.md:141
msgid ""
"Defaults to `report` in Composer 2.6, and defaults to `fail` from Composer "
"2.7 on. Defines whether the audit command reports abandoned packages or not, "
"this has three possible values:"
msgstr ""
"Composer 2.6では`report`が既定値であり、Composer 2.7以降では`fail`が既定値で"
"す。\n"
"監査コマンドが放棄されたパッケージを報告するかどうかを定義するもので、3つの値"
"を取り得ます。"

#. type: Bullet: '- '
#: ../doc/06-config.md:145
msgid ""
"`ignore` means the audit command does not consider abandoned packages at all."
msgstr ""
"`ignore`は、監査コマンドが放棄されたパッケージを全く考慮しないという意味で"
"す。"

#. type: Bullet: '- '
#: ../doc/06-config.md:145
msgid ""
"`report` means abandoned packages are reported as an error but do not cause "
"the command to exit with a non-zero code."
msgstr ""
"`report`は、放棄されたパッケージが失敗として報告されるものの、非ゼロコードで"
"コマンドが終了してしまわないようにする意味です。"

#. type: Bullet: '- '
#: ../doc/06-config.md:145
msgid ""
"`fail` means abandoned packages will cause audits to fail with a non-zero "
"code."
msgstr ""
"`fail`は、放棄されたパッケージにより監査が非ゼロコードで失敗するようになる意"
"味です。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:146
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"abandoned\": \"report\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"audit\": {\n"
"            \"abandoned\": \"report\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: ../doc/06-config.md:157
msgid ""
"Since Composer 2.7, the option can be overridden via the "
"[`COMPOSER_AUDIT_ABANDONED`](03-cli.md#composer-audit-abandoned) environment "
"variable."
msgstr ""
"Composer 2.7以降、[`COMPOSER_AUDIT_ABANDONED`](03-cli.md#composer-audit-"
"abandoned)環境変数を介して、オプションをオーバーライドできます。"

#. type: Plain text
#: ../doc/06-config.md:161
msgid ""
"Since Composer 2.8, the option can be overridden via the [`--abandoned`](03-"
"cli.md#audit) command line option, which overrides both the config value and "
"the environment variable."
msgstr ""
"Composer 2.8以降、[`--abandoned`](03-cli.md#audit)コマンドラインオプションを"
"介して、オプションをオーバーライドできます。\n"
"このオプションにより、構成値と環境変数が共にオーバーライドされます。"

#. type: Title ##
#: ../doc/06-config.md:163
#, no-wrap
msgid "use-parent-dir"
msgstr "use-parent-dir"

#. type: Plain text
#: ../doc/06-config.md:168
msgid ""
"When running Composer in a directory where there is no composer.json, if "
"there is one present in a directory above Composer will by default ask you "
"whether you want to use that directory's composer.json instead."
msgstr ""
"composer.jsonがないディレクトリでComposerを実行しており、その上のディレクトリ"
"にcomposer.jsonがある場合、Composerは既定で、そのディレクトリのcomposer.json"
"を代わりに使用するかどうかを尋ねます。"

#. type: Plain text
#: ../doc/06-config.md:171
msgid ""
"If you always want to answer yes to this prompt, you can set this config "
"value to `true`. To never be prompted, set it to `false`. The default is "
"`\"prompt\"`."
msgstr ""
"このプロンプトに対して常に「はい」と答えたい場合は、この構成値を`true`に設定"
"できます。\n"
"プロンプトが表示されないようにするには、`false`に設定します。\n"
"既定は`\"prompt\"`です。"

#. type: Plain text
#: ../doc/06-config.md:175
#, no-wrap
msgid ""
"> **Note:** This config must be set in your global user-wide config for it\n"
"> to work. Use for example `php composer.phar config --global use-parent-dir true`\n"
"> to set it.\n"
msgstr ""
"> **補足：** この構成を機能させるには、大域的な利用者全体の構成で設定しなければなりません。\n"
"> 例えば`php composer.phar config --global use-parent-dir true`を使用して設定します。\n"

#. type: Title ##
#: ../doc/06-config.md:176
#, no-wrap
msgid "store-auths"
msgstr "store-auths"

#. type: Plain text
#: ../doc/06-config.md:180
msgid ""
"What to do after prompting for authentication, one of: `true` (always "
"store), `false` (do not store) and `\"prompt\"` (ask every time), defaults "
"to `\"prompt\"`."
msgstr ""
"認証のプロンプトの後にする動作です。\n"
"`true`（常に保存する）、`false`（保存しない）、`\"prompt\"`（毎回確認する）の"
"何れか1つで、既定では`\"prompt\"`です。"

#. type: Title ##
#: ../doc/06-config.md:181
#, no-wrap
msgid "github-protocols"
msgstr "github-protocols"

#. type: Plain text
#: ../doc/06-config.md:189
msgid ""
"Defaults to `[\"https\", \"ssh\", \"git\"]`. A list of protocols to use when "
"cloning from github.com, in priority order. By default `git` is present but "
"only if [secure-http](#secure-http)  is disabled, as the git protocol is not "
"encrypted. If you want your origin remote push URLs to be using https and "
"not ssh (`git@github.com:...`), then set the protocol list to be only "
"`[\"https\"]` and Composer will stop overwriting the push URL to an ssh URL."
msgstr ""
"既定では`[\"https\", \"ssh\", \"git\"]`です。\n"
"github.comからクローンを作成するときに使用するプロトコルのリストで、優先度順"
"に並べます。\n"
"既定では`git`が存在しますが、gitプロトコルは暗号化されていないため、[secure-"
"http](#secure-http)が無効になっている場合のみ使われます。\n"
"originのリモートプッシュURLでssh (`git@github.com:...`) ではなくhttpsを使用す"
"る場合、プロトコルリストを`[\"https\"]`のみに設定すると、Composerはプッシュ"
"URLをSSHのURLに上書きすることを取り止めます。"

#. type: Title ##
#: ../doc/06-config.md:190
#, no-wrap
msgid "github-oauth"
msgstr "github-oauth"

#. type: Plain text
#: ../doc/06-config.md:198
msgid ""
"A list of domain names and oauth keys. For example using `{\"github.com\": "
"\"oauthtoken\"}` as the value of this option will use `oauthtoken` to access "
"private repositories on github and to circumvent the low IP-based rate "
"limiting of their API. Composer may prompt for credentials when needed, but "
"these can also be manually set. Read more on how to get an OAuth token for "
"GitHub and cli syntax [here](articles/authentication-for-private-packages."
"md#github-oauth)."
msgstr ""
"ドメイン名とoauthキーのリストです。\n"
"たとえば、このオプションの値として`{\"github.com\": \"oauthtoken\"}`を使用す"
"ると、`oauthtoken`を使用してgithubの私有リポジトリにアクセスし、APIのIPに基づ"
"く低いレート制限を回避します。\n"
"Composerは、必要に応じて資格情報を要求する場合がありますが、これらは手動で設"
"定することもできます。\n"
"GitHubのOAuthトークンを取得する方法及びcliの構文の詳細については、[こちら]"
"(articles/authentication-for-private-packages.md#github-oauth)を参照してくだ"
"さい。"

#. type: Title ##
#: ../doc/06-config.md:199
#, no-wrap
msgid "gitlab-domains"
msgstr "gitlab-domains"

#. type: Plain text
#: ../doc/06-config.md:203
msgid ""
"Defaults to `[\"gitlab.com\"]`. A list of domains of GitLab servers.  This "
"is used if you use the `gitlab` repository type."
msgstr ""
"既定では`[\"gitlab.com\"]`です。\n"
"GitLabサーバーのドメインのリストです。\n"
"`gitlab`リポジトリ種別を使う場合に使用されます。"

#. type: Title ##
#: ../doc/06-config.md:204
#, no-wrap
msgid "gitlab-oauth"
msgstr "gitlab-oauth"

#. type: Plain text
#: ../doc/06-config.md:212
msgid ""
"A list of domain names and oauth keys. For example using `{\"gitlab.com\": "
"\"oauthtoken\"}` as the value of this option will use `oauthtoken` to access "
"private repositories on gitlab. Please note: If the package is not hosted at "
"gitlab.com the domain names must be also specified with the [`gitlab-"
"domains`](06-config.md#gitlab-domains) option.  Further info can also be "
"found [here](articles/authentication-for-private-packages.md#gitlab-oauth)"
msgstr ""
"ドメイン名とoauthキーのリストです。\n"
"たとえば、このオプションの値として`{\"gitlab.com\": \"oauthtoken\"}`を使用す"
"ると、`oauthtoken`を使用してgitlabの私有リポジトリにアクセスします。\n"
"なお、パッケージがgitlab.comでホストされていない場合、ドメイン名も[`gitlab-"
"domains`](06-config.md#gitlab-domains)オプションで指定する必要があります。\n"
"詳細情報は[こちら](articles/authentication-for-private-packages.md#gitlab-"
"oauth)にもあります。"

#. type: Title ##
#: ../doc/06-config.md:213
#, no-wrap
msgid "gitlab-token"
msgstr "gitlab-token"

#. type: Plain text
#: ../doc/06-config.md:226
#, no-wrap
msgid ""
"A list of domain names and private tokens. Private token can be either simple\n"
"string, or array with username and token. For example using `{\"gitlab.com\":\n"
"\"privatetoken\"}` as the value of this option will use `privatetoken` to access\n"
"private repositories on gitlab. Using `{\"gitlab.com\": {\"username\": \"gitlabuser\",\n"
" \"token\": \"privatetoken\"}}` will use both username and token for gitlab deploy\n"
"token functionality (https://docs.gitlab.com/ee/user/project/deploy_tokens/)\n"
"Please note: If the package is not hosted at\n"
"gitlab.com the domain names must be also specified with the\n"
"[`gitlab-domains`](06-config.md#gitlab-domains) option. The token must have\n"
"`api` or `read_api` scope.\n"
"Further info can also be found [here](articles/authentication-for-private-packages.md#gitlab-token)\n"
msgstr ""
"ドメイン名と私有トークンのリストです。\n"
"私有トークンは、単純な文字列、または利用者名とトークンを含む配列の何れかです。\n"
"たとえば、このオプションの値として`{\"gitlab.com\": \"privatetoken\"}`を使用すると、`privatetoken`を使用してgitlabの私有リポジトリにアクセスします。\n"
"`{\"gitlab.com\": {\"username\": \"gitlabuser\", \"token\": \"privatetoken\"}}`を使用すると、利用者名とトークンの両方を使ってgitlabのデプロイトークン機能 (https://docs.gitlab.com/ ee/user/project/deploy_tokens/) を使用します。\n"
"なお、パッケージがgitlab.comでホストされていない場合、ドメイン名も[`gitlab-domains`](06-config.md#gitlab-domains)オプションで指定する必要があります。\n"
"トークンには`api`または`read_api`スコープが必要です。\n"
"詳細情報は[こちら](articles/authentication-for-private-packages.md#gitlab-token)にもあります。\n"

#. type: Title ##
#: ../doc/06-config.md:227
#, no-wrap
msgid "gitlab-protocol"
msgstr "gitlab-protocol"

#. type: Plain text
#: ../doc/06-config.md:236
msgid ""
"A protocol to force use of when creating a repository URL for the `source` "
"value of the package metadata. One of `git` or `http`. (`https` is treated "
"as a synonym for `http`.) Helpful when working with projects referencing "
"private repositories which will later be cloned in GitLab CI jobs with a "
"[GitLab CI_JOB_TOKEN](https://docs.gitlab.com/ee/ci/variables/"
"predefined_variables.html#predefined-variables-reference)  using HTTP basic "
"auth. By default, Composer will generate a git-over-SSH URL for private "
"repositories and HTTP(S) only for public."
msgstr ""
"パッケージメタデータの`source`値用にリポジトリのURLを作成するときに、強制的に"
"使用するプロトコルです。\n"
"`git`または`http`の何れかです（`https`は`http`の同義語として扱われます）。\n"
"HTTPベーシック認証を使った[GitLabのCI_JOB_TOKEN](https://docs.gitlab.com/ee/"
"ci/variables/predefined_variables.html#predefined-variables-reference)によ"
"り、後々GitLab CIのジョブでクローンされる私有リポジトリを参照するプロジェクト"
"を扱う際に役立ちます。\n"
"既定では、Composerは私有リポジトリについてはgit-over-SSHのURLを生成し、公開リ"
"ポジトリについてはHTTP(S)のみを生成します。"

#. type: Title ##
#: ../doc/06-config.md:237
#, no-wrap
msgid "disable-tls"
msgstr "disable-tls"

#. type: Plain text
#: ../doc/06-config.md:244
msgid ""
"Defaults to `false`. If set to true all HTTPS URLs will be tried with HTTP "
"instead and no network level encryption is performed. Enabling this is a "
"security risk and is NOT recommended. The better way is to enable the "
"php_openssl extension in php.ini. Enabling this will implicitly disable the "
"`secure-http` option."
msgstr ""
"既定は`false`です。\n"
"真に設定すると、すべてのHTTPSのURLが代わりにHTTPで試行され、ネットワークレベ"
"ルの暗号化は実行されません。\n"
"これを有効にすることはセキュリティ上の危険性であり、全く推奨されません。\n"
"より良い方法は、php.iniでphp_openssl拡張機能を有効にすることです。\n"
"これを有効にすると、`secure-http`オプションが暗黙に無効になります。"

#. type: Title ##
#: ../doc/06-config.md:245
#, no-wrap
msgid "secure-http"
msgstr "secure-http"

#. type: Plain text
#: ../doc/06-config.md:251
msgid ""
"Defaults to `true`. If set to true only HTTPS URLs are allowed to be "
"downloaded via Composer. If you really absolutely need HTTP access to "
"something then you can disable it, but using [Let's Encrypt](https://"
"letsencrypt.org/) to get a free SSL certificate is generally a better "
"alternative."
msgstr ""
"既定では`true`です。\n"
"真に設定すると、HTTPSのURLのみがComposer経由でダウンロードできるようになりま"
"す。\n"
"何かしらへのHTTPアクセスが絶対に必要な場合は無効にできますが、[Let's Encrypt]"
"(https://letsencrypt.org/)を使用して無料のSSL証明書を取得する方が一般的にはよ"
"り良い代替手段です。"

#. type: Title ##
#: ../doc/06-config.md:252
#, no-wrap
msgid "bitbucket-oauth"
msgstr "bitbucket-oauth"

#. type: Plain text
#: ../doc/06-config.md:257
msgid ""
"A list of domain names and consumers. For example using `{\"bitbucket.org\": "
"{\"consumer-key\": \"myKey\", \"consumer-secret\": \"mySecret\"}}`.  Read "
"more [here](articles/authentication-for-private-packages.md#bitbucket-oauth)."
msgstr ""
"ドメイン名と消費者のリストです。\n"
"例えば`{\"bitbucket.org\": {\"consumer-key\": \"myKey\", \"consumer-"
"secret\": \"mySecret\"}}`のように使います。\n"
"より詳しくは[こちら](articles/authentication-for-private-packages."
"md#bitbucket-oauth)を読んでください。"

#. type: Title ##
#: ../doc/06-config.md:258
#, no-wrap
msgid "cafile"
msgstr "cafile"

#. type: Plain text
#: ../doc/06-config.md:263
msgid ""
"Location of Certificate Authority file on local filesystem. In PHP 5.6+ you "
"should rather set this via openssl.cafile in php.ini, although PHP 5.6+ "
"should be able to detect your system CA file automatically."
msgstr ""
"ローカルファイルシステム上の認証局ファイルの配置場所です。\n"
"PHP 5.6以降ではシステムCAファイルを自動的に検出できますが、PHP 5.6以降でも、"
"php.iniのopenssl.cafileを介してこれを設定すべきです。"

#. type: Title ##
#: ../doc/06-config.md:264
#, no-wrap
msgid "capath"
msgstr "capath"

#. type: Plain text
#: ../doc/06-config.md:269
msgid ""
"If cafile is not specified or if the certificate is not found there, the "
"directory pointed to by capath is searched for a suitable certificate.  "
"capath must be a correctly hashed certificate directory."
msgstr ""
"cafileが指定されていない場合、またはそこに証明書がない場合は、capathが指す"
"ディレクトリで適切な証明書が探索されます。\n"
"capathは正しくハッシュされた証明書ディレクトリでなければなりません。"

#. type: Title ##
#: ../doc/06-config.md:270
#, no-wrap
msgid "http-basic"
msgstr "http-basic"

#. type: Plain text
#: ../doc/06-config.md:276
msgid ""
"A list of domain names and username/passwords to authenticate against them. "
"For example using `{\"example.org\": {\"username\": \"alice\", \"password\": "
"\"foo\"}}` as the value of this option will let Composer authenticate "
"against example.org.  More info can be found [here](articles/authentication-"
"for-private-packages.md#http-basic)."
msgstr ""
"認証するためのドメイン名と、利用者名とパスワードのリストです。\n"
"たとえば、このオプションの値として`{\"example.org\": {\"username\": "
"\"alice\", \"password\": \"foo\"}}`を使用すると、Composerはexample.orgに対し"
"て認証します。\n"
"詳細については、[こちら](articles/authentication-for-private-packages."
"md#http-basic)を参照してください。"

#. type: Title ##
#: ../doc/06-config.md:277
#, no-wrap
msgid "bearer"
msgstr "bearer"

#. type: Plain text
#: ../doc/06-config.md:282
msgid ""
"A list of domain names and tokens to authenticate against them. For example "
"using `{\"example.org\": \"foo\"}` as the value of this option will let "
"Composer authenticate against example.org using an `Authorization: Bearer "
"foo` header."
msgstr ""
"認証するドメイン名とトークンのリストです。\n"
"たとえば、このオプションの値として`{\"example.org\": \"foo\"}`を使用すると、"
"Composerは`Authorization: Bearer foo`ヘッダーを使用して、example.orgに対して"
"認証を行うことができます。"

#. type: Title ##
#: ../doc/06-config.md:283
#, no-wrap
msgid "platform"
msgstr "platform"

#. type: Plain text
#: ../doc/06-config.md:288
msgid ""
"Lets you fake platform packages (PHP and extensions) so that you can emulate "
"a production env or define your target platform in the config. Example: "
"`{\"php\": \"7.0.3\", \"ext-something\": \"4.0.3\"}`."
msgstr ""
"プラットフォームパッケージ（PHP及び拡張機能）を偽装して、運用環境をエミュレー"
"トしたり、構成で対象のプラットフォームを定義したりできるようにします。\n"
"例えば`{\"php\": \"7.0.3\", \"ext-something\": \"4.0.3\"}`です。"

#. type: Plain text
#: ../doc/06-config.md:294
msgid ""
"This will make sure that no package requiring more than PHP 7.0.3 can be "
"installed regardless of the actual PHP version you run locally. However it "
"also means the dependencies are not checked correctly anymore, if you run "
"PHP 5.6 it will install fine as it assumes 7.0.3, but then it will fail at "
"runtime. This also means if `{\"php\":\"7.4\"}` is specified; no packages "
"will be used that define `7.4.1` as minimum."
msgstr ""
"これにより、ローカルで実行する実際のPHPバージョンに関係なく、PHP 7.0.3以上を"
"必要とするパッケージをインストールできなくなります。\n"
"ただし、依存関係が正しく検査されなくなったことも意味します。\n"
"PHP 5.6を実行すると、7.0.3を想定しているため問題なくインストールされますが、"
"実行時に失敗します。\n"
"これは、`{\"php\":\"7.4\"}`が指定されることも意味します。\n"
"`7.4.1`を最小のバージョンとして定義するパッケージは使用されません。"

#. type: Plain text
#: ../doc/06-config.md:298
msgid ""
"Therefore if you use this it is recommended, and safer, to also run the "
"[`check-platform-reqs`](03-cli.md#check-platform-reqs) command as part of "
"your deployment strategy."
msgstr ""
"したがって、これを使用する場合は、デプロイ戦略の一部として[`check-platform-"
"reqs`](03-cli.md#check-platform-reqs)コマンドも走らせることをお勧めしますし、"
"より安全です。"

#. type: Plain text
#: ../doc/06-config.md:304
msgid ""
"If a dependency requires some extension that you do not have installed "
"locally you may ignore it instead by passing `--ignore-platform-req=ext-foo` "
"to `update`, `install` or `require`. In the long run though you should "
"install required extensions as if you ignore one now and a new package you "
"add a month later also requires it, you may introduce issues in production "
"unknowingly."
msgstr ""
"ローカルにインストールしていない拡張機能が依存関係に必要な場合は、代わりに`--"
"ignore-platform-req=ext-foo`を`update`、`install`、または`require`に渡して無"
"視できます。\n"
"しかし長い目で見れば、今は無視するにせよ必要な拡張はインストールすべきで、1箇"
"月後に新しいパッケージでも必要になると、知らず知らずのうちに本番環境に問題が"
"発生する可能性があります。"

#. type: Plain text
#: ../doc/06-config.md:307
msgid ""
"If you have an extension installed locally but *not* on production, you may "
"want to artificially hide it from Composer using `{\"ext-foo\": false}`."
msgstr ""
"拡張をローカルにインストールしているが本番環境では*そうではない*場合、"
"`{\"ext-foo\": false}`を使ってComposerから意図的に隠すこともできます。"

#. type: Title ##
#: ../doc/06-config.md:308
#, no-wrap
msgid "vendor-dir"
msgstr "vendor-dir"

#. type: Plain text
#: ../doc/06-config.md:313
msgid ""
"Defaults to `vendor`. You can install dependencies into a different "
"directory if you want to. `$HOME` and `~` will be replaced by your home "
"directory's path in vendor-dir and all `*-dir` options below."
msgstr ""
"既定は`vendor`です。\n"
"お好みで違うディレクトリに依存関係をインストールできます。\n"
"vendor-dirと以下の全ての`*-dir`オプション中では、`$HOME`と`~`はホームディレク"
"トリに置換されます。"

#. type: Title ##
#: ../doc/06-config.md:314
#, no-wrap
msgid "bin-dir"
msgstr "bin-dir"

#. type: Plain text
#: ../doc/06-config.md:318
msgid ""
"Defaults to `vendor/bin`. If a project includes binaries, they will be "
"symlinked into this directory."
msgstr ""
"既定では`vendor/bin`です。\n"
"プロジェクトがバイナリを含む場合、それらのバイナリはこのディレクトリにシンボ"
"リックリンクが張られます。"

#. type: Title ##
#: ../doc/06-config.md:319
#, no-wrap
msgid "data-dir"
msgstr "data-dir"

#. type: Plain text
#: ../doc/06-config.md:326
#, no-wrap
msgid ""
"Defaults to `C:\\Users\\<user>\\AppData\\Roaming\\Composer` on Windows,\n"
"`$XDG_DATA_HOME/composer` on unix systems that follow the XDG Base Directory\n"
"Specifications, and `$COMPOSER_HOME` on other unix systems. Right now it is only\n"
"used for storing past composer.phar files to be able to roll back to older\n"
"versions. See also [COMPOSER_HOME](03-cli.md#composer-home).\n"
msgstr ""
"既定では、Windowsでは`C:\\Users\\<user>\\AppData\\Roaming\\Composer`、XDG Base Directory Specificationsに従うunixシステムでは`$XDG_DATA_HOME/composer`、その他のunixシステムでは`$COMPOSER_HOME`です。\n"
"現在、過去のcomposer.pharファイルを保存して古いバージョンにロールバックできるようにするためにのみ使用されています。\n"
"[COMPOSER_HOME](03-cli.md#composer-home)も参照してください。\n"

#. type: Title ##
#: ../doc/06-config.md:327
#, no-wrap
msgid "cache-dir"
msgstr "cache-dir"

#. type: Plain text
#: ../doc/06-config.md:334
#, no-wrap
msgid ""
"Defaults to `C:\\Users\\<user>\\AppData\\Local\\Composer` on Windows,\n"
"`/Users/<user>/Library/Caches/composer` on macOS, `$XDG_CACHE_HOME/composer`\n"
"on unix systems that follow the XDG Base Directory Specifications, and\n"
"`$COMPOSER_HOME/cache` on other unix systems. Stores all the caches used by\n"
"Composer. See also [COMPOSER_HOME](03-cli.md#composer-home).\n"
msgstr ""
"既定では、Windowsでは`C:\\Users\\<user>\\AppData\\Local\\Composer`、macOSでは`/Users/<user>/Library/Caches/composer`、XDG Base Directory Specificationに従うunixシステムでは`$XDG_CACHE_HOME/composer`、他のunixシステムでは`$COMPOSER_HOME/cache`になります。\n"
"Composerで使う全てのキャッシュが保管されます。\n"
"[COMPOSER_HOME](03-cli.md#composer-home)も参照してください。\n"

#. type: Title ##
#: ../doc/06-config.md:335
#, no-wrap
msgid "cache-files-dir"
msgstr "cache-files-dir"

#. type: Plain text
#: ../doc/06-config.md:338
msgid "Defaults to `$cache-dir/files`. Stores the zip archives of packages."
msgstr ""
"既定では`$cache-dir/files`です。\n"
"パッケージのzipアーカイブを保管します。"

#. type: Title ##
#: ../doc/06-config.md:339
#, no-wrap
msgid "cache-repo-dir"
msgstr "cache-repo-dir"

#. type: Plain text
#: ../doc/06-config.md:343
msgid ""
"Defaults to `$cache-dir/repo`. Stores repository metadata for the `composer` "
"type and the VCS repos of type `svn`, `fossil`, `github` and `bitbucket`."
msgstr ""
"既定では`$cache-dir/repo`です。\n"
"`composer`の種別用のリポジトリのメタデータと、`svn`、`fossil`、`github`、"
"`gitbucket`の種別のVCSリポジトリを保管します。"

#. type: Title ##
#: ../doc/06-config.md:344
#, no-wrap
msgid "cache-vcs-dir"
msgstr "cache-vcs-dir"

#. type: Plain text
#: ../doc/06-config.md:348
msgid ""
"Defaults to `$cache-dir/vcs`. Stores VCS clones for loading VCS repository "
"metadata for the `git`/`hg` types and to speed up installs."
msgstr ""
"既定では`$cache-dir/vcs`です。\n"
"`git`及び`hg`の種別用のVCSリポジトリメタデータを読み込むためのVCSクローンを保"
"管し、インストールを高速にします。"

#. type: Title ##
#: ../doc/06-config.md:349
#, no-wrap
msgid "cache-files-ttl"
msgstr "cache-files-ttl"

#. type: Plain text
#: ../doc/06-config.md:355
msgid ""
"Defaults to `15552000` (6 months). Composer caches all dist (zip, tar, ...)  "
"packages that it downloads. Those are purged after six months of being "
"unused by default. This option allows you to tweak this duration (in "
"seconds) or disable it completely by setting it to 0."
msgstr ""
"既定では`15552000`（6箇月）です。\n"
"Composerはダウンロードした全てのdist（zip、tar、……）をキャッシュします。\n"
"既定では使われていないものについて6箇月経った後に削除します。\n"
"このオプションはこの期間を（秒数で）調整ないし0に設定することで、完全に無効に"
"できるようにするものです。"

#. type: Title ##
#: ../doc/06-config.md:356
#, no-wrap
msgid "cache-files-maxsize"
msgstr "cache-files-maxsize"

#. type: Plain text
#: ../doc/06-config.md:362
msgid ""
"Defaults to `300MiB`. Composer caches all dist (zip, tar, ...) packages that "
"it downloads. When the garbage collection is periodically ran, this is the "
"maximum size the cache will be able to use. Older (less used) files will be "
"removed first until the cache fits."
msgstr ""
"既定では`300MiB`です。\n"
"Composerはダウンロードした全ての配布パッケージ（zip、tar、……）をキャッシュし"
"ます。\n"
"ガベージコレクションが定期的に走っている場合、キャッシュで使える最大量で"
"す。\n"
"最後のキャッシュヒットから時間が経った（比較的使われていない）ファイルが削除"
"されます。"

#. type: Title ##
#: ../doc/06-config.md:363
#, no-wrap
msgid "cache-read-only"
msgstr "cache-read-only"

#. type: Plain text
#: ../doc/06-config.md:366
msgid ""
"Defaults to `false`. Whether to use the Composer cache in read-only mode."
msgstr ""
"既定では`false`です。\n"
"Composerのキャッシュを読取専用モードで使うかどうかを決めます。"

#. type: Title ##
#: ../doc/06-config.md:367
#, no-wrap
msgid "bin-compat"
msgstr "bin-compat"

#. type: Plain text
#: ../doc/06-config.md:376
msgid ""
"Defaults to `auto`. Determines the compatibility of the binaries to be "
"installed.  If it is `auto` then Composer only installs .bat proxy files "
"when on Windows or WSL. If set to `full` then both .bat files for Windows "
"and scripts for Unix-based operating systems will be installed for each "
"binary. This is mainly useful if you run Composer inside a linux VM but "
"still want the `.bat` proxies available for use in the Windows host OS. If "
"set to `proxy` Composer will only create bash/Unix-style proxy files and no ."
"bat files even on Windows/WSL."
msgstr ""
"既定では`auto`です。\n"
"インストールするバイナリの互換性を決定します。\n"
"`auto`の場合、Composerは、WindowsまたはWSLの場合に.batプロキシファイルのみを"
"インストールします。\n"
"`full`に設定すると、Windows用の.batファイルとUnixベースのオペレーティングシス"
"テム用のスクリプトの両方がバイナリごとにインストールされます。\n"
"主にLinux VM内でComposerを実行しているが、WindowsホストOSで使用できる`.bat`プ"
"ロキシが必要な場合に役立ちます。\n"
"`proxy`に設定すると、ComposerはbashでUnixスタイルのプロキシファイルのみを作成"
"し、WindowsないしWSLでも.batファイルを作成しません。"

#. type: Title ##
#: ../doc/06-config.md:377
#, no-wrap
msgid "prepend-autoloader"
msgstr "prepend-autoloader"

#. type: Plain text
#: ../doc/06-config.md:382
msgid ""
"Defaults to `true`. If `false`, the Composer autoloader will not be "
"prepended to existing autoloaders. This is sometimes required to fix "
"interoperability issues with other autoloaders."
msgstr ""
"既定は`true`です。\n"
"`false`にするとComposerの自動読み込み器は既存の自動読み込み器の前に置かれなく"
"なります。\n"
"他の自動読み込み器との相互運用性の問題を修正する際に必要になることがありま"
"す。"

#. type: Title ##
#: ../doc/06-config.md:383
#, no-wrap
msgid "autoloader-suffix"
msgstr "autoloader-suffix"

#. type: Plain text
#: ../doc/06-config.md:389
msgid ""
"Defaults to `null`. When set to a non-empty string, this value will be used "
"as a suffix for the generated Composer autoloader. If set to `null`, the "
"`content-hash` value from the `composer.lock` file will be used if "
"available; otherwise, a random suffix will be generated."
msgstr ""
"既定では`null`です。\n"
"空でない文字列に設定した場合、生成されたComposerの自動読み込み器の接尾辞に使"
"われます。\n"
"`null`に設定された場合、可能であれば`composer.lock`ファイルの`content-hash`値"
"が使われます。\n"
"そうでなければ、乱択された接尾辞が生成されます。"

#. type: Title ##
#: ../doc/06-config.md:390
#, no-wrap
msgid "optimize-autoloader"
msgstr "optimize-autoloader"

#. type: Plain text
#: ../doc/06-config.md:393
msgid ""
"Defaults to `false`. If `true`, always optimize when dumping the autoloader."
msgstr ""
"既定では`false`です。\n"
"`true`の場合、自動読み込み器を吐き出す際に常に最適化されます。"

#. type: Title ##
#: ../doc/06-config.md:394
#, no-wrap
msgid "sort-packages"
msgstr "sort-packages"

#. type: Plain text
#: ../doc/06-config.md:398
msgid ""
"Defaults to `false`. If `true`, the `require` command keeps packages sorted "
"by name in `composer.json` when adding a new package."
msgstr ""
"既定では`false`です。\n"
"`true`の場合、新しいパッケージを追加したときに`composer.json`中の`require`コ"
"マンドでパッケージが名前順に整列された状態に保たれます。"

#. type: Title ##
#: ../doc/06-config.md:399
#, no-wrap
msgid "classmap-authoritative"
msgstr "classmap-authoritative"

#. type: Plain text
#: ../doc/06-config.md:403
msgid ""
"Defaults to `false`. If `true`, the Composer autoloader will only load "
"classes from the classmap. Implies `optimize-autoloader`."
msgstr ""
"既定では`false`です。\n"
"`true`にするとComposerの自動読み込み器はクラスマップからのクラスのみを読み込"
"みます。\n"
"暗に`optimize-autoloader`を有効にします。"

#. type: Title ##
#: ../doc/06-config.md:404
#, no-wrap
msgid "apcu-autoloader"
msgstr "apcu-autoloader"

#. type: Plain text
#: ../doc/06-config.md:408
msgid ""
"Defaults to `false`. If `true`, the Composer autoloader will check for APCu "
"and use it to cache found/not-found classes when the extension is enabled."
msgstr ""
"既定では`false`です。\n"
"`true`の場合、Composerの自動読み込み器はAPCuを確認し、拡張が有効になった場合"
"にクラスの有無をキャッシュするのに使います。"

#. type: Title ##
#: ../doc/06-config.md:409
#, no-wrap
msgid "github-domains"
msgstr "github-domains"

#. type: Plain text
#: ../doc/06-config.md:413
msgid ""
"Defaults to `[\"github.com\"]`. A list of domains to use in github mode. "
"This is used for GitHub Enterprise setups."
msgstr ""
"既定では`[\"github.com\"]`です。\n"
"githubモードで使われるドメインのリストです。\n"
"GitHub Enterpriseの準備で使われます。"

#. type: Title ##
#: ../doc/06-config.md:414
#, no-wrap
msgid "github-expose-hostname"
msgstr "github-expose-hostname"

#. type: Plain text
#: ../doc/06-config.md:418
msgid ""
"Defaults to `true`. If `false`, the OAuth tokens created to access the "
"github API will have a date instead of the machine hostname."
msgstr ""
"既定では`true`です。\n"
"`false`にするとgithub APIにアクセスするために作られるOAuthトークンがマシンの"
"ホスト名ではなく日付になります。"

#. type: Title ##
#: ../doc/06-config.md:419
#, no-wrap
msgid "use-github-api"
msgstr "use-github-api"

#. type: Plain text
#: ../doc/06-config.md:426
msgid ""
"Defaults to `true`.  Similar to the `no-api` key on a specific repository, "
"setting `use-github-api` to `false` will define the global behavior for all "
"GitHub repositories to clone the repository as it would with any other git "
"repository instead of using the GitHub API. But unlike using the `git` "
"driver directly, Composer will still attempt to use GitHub's zip files."
msgstr ""
"既定では`true`です。\n"
"特定のリポジトリに於ける`no-api`キーに似ており、`use-github-api`を`false`に設"
"定すると、他のgitリポジトリのように、全てのGitHubリポジトリについて、GitHub "
"APIを使う代わりにリポジトリをクローンするように大域的な挙動を定義します。\n"
"しかし`git`ドライバを直接使うのではなく、ComposerはやはりGitHubのzipファイル"
"を使うことを試みます。"

#. type: Title ##
#: ../doc/06-config.md:427
#, no-wrap
msgid "notify-on-install"
msgstr "notify-on-install"

#. type: Plain text
#: ../doc/06-config.md:432
msgid ""
"Defaults to `true`. Composer allows repositories to define a notification "
"URL, so that they get notified whenever a package from that repository is "
"installed.  This option allows you to disable that behavior."
msgstr ""
"既定では`true`です。\n"
"Composerではリポジトリが通知のURLを定義できるようにしており、そのリポジトリか"
"らパッケージがインストールされたことの通知を受けられます。\n"
"このオプションはその挙動を無効にできます。"

#. type: Title ##
#: ../doc/06-config.md:433
#, no-wrap
msgid "discard-changes"
msgstr "discard-changes"

#. type: Plain text
#: ../doc/06-config.md:440
msgid ""
"Defaults to `false` and can be any of `true`, `false` or `\"stash\"`. This "
"option allows you to set the default style of handling dirty updates when in "
"non-interactive mode. `true` will always discard changes in vendors, while "
"`\"stash\"` will try to stash and reapply. Use this for CI servers or deploy "
"scripts if you tend to have modified vendors."
msgstr ""
"既定では`false`で、`true`、`false`、または`stash`の何れかにできます。\n"
"このオプションでは非対話モードでダーティアップデートを制御する既定の方式を設"
"定できます。\n"
"`true`はベンダーの変更を常に破棄しますが、`\"stash\"`は取っておいて再適用しよ"
"うとします。\n"
"よくベンダーを変更する場合は、CIサーバーやデプロイスクリプトにこれを使ってく"
"ださい。"

#. type: Title ##
#: ../doc/06-config.md:441
#, no-wrap
msgid "archive-format"
msgstr "archive-format"

#. type: Plain text
#: ../doc/06-config.md:444
msgid ""
"Defaults to `tar`. Overrides the default format used by the archive command."
msgstr ""
"既定では`tar`です。\n"
"archiveコマンドにより使われる既定の形式を上書きします。"

#. type: Title ##
#: ../doc/06-config.md:445
#, no-wrap
msgid "archive-dir"
msgstr "archive-dir"

#. type: Plain text
#: ../doc/06-config.md:449
msgid ""
"Defaults to `.`. Default destination for archives created by the archive "
"command."
msgstr ""
"既定では`.`です。\n"
"archiveコマンドによる作られる、アーカイブの既定の対象パスです。"

#. type: Fenced code block (json)
#: ../doc/06-config.md:452
#, no-wrap
msgid ""
"{\n"
"    \"config\": {\n"
"        \"archive-dir\": \"/home/user/.composer/repo\"\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"config\": {\n"
"        \"archive-dir\": \"/home/user/.composer/repo\"\n"
"    }\n"
"}\n"

#. type: Title ##
#: ../doc/06-config.md:460
#, no-wrap
msgid "htaccess-protect"
msgstr "htaccess-protect"

#. type: Plain text
#: ../doc/06-config.md:464
msgid ""
"Defaults to `true`. If set to `false`, Composer will not create `.htaccess` "
"files in the Composer home, cache, and data directories."
msgstr ""
"既定では`true`です。\n"
"`false`に設定すると、ComposerはComposerのホーム、キャッシュ、データディレクト"
"リに`.htaccess`ファイルを作りません。"

#. type: Title ##
#: ../doc/06-config.md:465
#, no-wrap
msgid "lock"
msgstr "lock"

#. type: Plain text
#: ../doc/06-config.md:469
msgid ""
"Defaults to `true`. If set to `false`, Composer will not create a `composer."
"lock` file and will ignore it if one is present."
msgstr ""
"既定では`true`です。\n"
"`false`に設定すると、Composerは`composer.lock`ファイルを作らず、存在している"
"場合は無視します。"

#. type: Title ##
#: ../doc/06-config.md:470
#, no-wrap
msgid "platform-check"
msgstr "platform-check"

#. type: Plain text
#: ../doc/06-config.md:475
msgid ""
"Defaults to `php-only` which only checks the PHP version. Set to `true` to "
"also check the presence of extension. If set to `false`, Composer will not "
"create and require a `platform_check.php` file as part of the autoloader "
"bootstrap."
msgstr ""
"既定では、PHPのバージョンのみをチェックする`php-only`に設定されています。\n"
"拡張子の存在も確認するには、`true`に設定します。\n"
"`false`に設定すると、Composerは自動読み込み器のブートストラップの一部として"
"`platform_check.php`ファイルを作成せず、requireもしません。"

#. type: Title ##
#: ../doc/06-config.md:476
#, no-wrap
msgid "secure-svn-domains"
msgstr "secure-svn-domains"

#. type: Plain text
#: ../doc/06-config.md:483
msgid ""
"Defaults to `[]`. Lists domains which should be trusted/marked as using a "
"secure Subversion/SVN transport. By default svn:// protocol is seen as "
"insecure and will throw, but you can set this config option to `[\"example."
"org\"]` to allow using svn URLs on that hostname. This is a better/safer "
"alternative to disabling `secure-http` altogether."
msgstr ""
"既定では`[]`です。\n"
"安全なSubversionまたはSVNの移送を使用しているものとして信頼し、印を付けるべき"
"ドメインの一覧です。\n"
"既定では、svn://プロトコルは安全ではないと見なされ、throwされますが、この構成"
"オプションを`[\"example.org\"]`に設定すれば、そのホスト名でsvnのURLを使用でき"
"ます。\n"
"`secure-http`を完全に無効にするよりも優れた安全な代替手段です。"

#. type: Title ##
#: ../doc/06-config.md:484
#, no-wrap
msgid "bump-after-update"
msgstr "bump-after-update"

#. type: Plain text
#: ../doc/06-config.md:489
msgid ""
"Defaults to `false` and can be any of `true`, `false`, `\"dev\"` or `\"no-"
"dev\"`. If set to true, Composer will run the `bump` command after running "
"the `update` command.  If set to `\"dev\"` or `\"no-dev\"` then only the "
"corresponding dependencies will be bumped."
msgstr ""
"既定は`false`で、`true`、`false`、`\"dev\"`、`\"no-dev\"`のどれかにできま"
"す。\n"
"真に設定すると、Composerは`update`コマンドを走らせた後に、`bump`コマンドを走"
"らせます。\n"
"`\"dev\"`や`\"no-dev\"`に設定すると、対応する依存関係のみのバージョンが上がり"
"ます。"

#. type: Title ##
#: ../doc/06-config.md:490
#, no-wrap
msgid "allow-missing-requirements"
msgstr "allow-missing-requirements"

#. type: Plain text
#: ../doc/06-config.md:495
msgid ""
"Defaults to `false`. Ignores error during `install` if there are any missing "
"requirements - the lock file is not up to date with the latest changes in "
"`composer.json`."
msgstr ""
"既定は`false`です。\n"
"要件から何か欠けているものがあるとき、`install`時にエラーを無視します。\n"
"状況としては、`composer.json`にある最新の変更点に対して、固定ファイルが最新で"
"ないときです。"

#. type: Plain text
#: ../doc/06-config.md:496
msgid ""
"&larr; [Repositories](05-repositories.md)  | [Runtime](07-runtime.md) &rarr;"
msgstr ""
"&larr; [リポジトリ](05-repositories.md)  | [実行時](07-runtime.md) &rarr;"

#. type: Title #
#: ../doc/07-runtime.md:1
#, no-wrap
msgid "Runtime Composer utilities"
msgstr "実行時Composerユーティリティ"

#. type: Plain text
#: ../doc/07-runtime.md:5
msgid ""
"While Composer is mostly used around your project to install its "
"dependencies, there are a few things which are made available to you at "
"runtime."
msgstr ""
"Composerはほぼプロジェクトに依存関係をインストールするのに使われますが、実行"
"時に使える機能もいくつかあります。"

#. type: Plain text
#: ../doc/07-runtime.md:8
msgid ""
"If you need to rely on some of these in a specific version, you can require "
"the `composer-runtime-api` package."
msgstr ""
"特定のバージョンに於けるこれらの機能のどれかに依る必要があれば、`composer-"
"runtime-api`パッケージをrequireできます。"

#. type: Title ##
#: ../doc/07-runtime.md:9
#, no-wrap
msgid "Autoload"
msgstr "自動読み込み"

#. type: Plain text
#: ../doc/07-runtime.md:14
msgid ""
"The autoloader is the most used one, and is already covered in our [basic "
"usage guide](01-basic-usage.md#autoloading). It is available in all Composer "
"versions."
msgstr ""
"自動読み込み器は最も使われるものであり、既に[基本的な使い方の手引き](01-"
"basic-usage.md#autoloading)で押さえられています。\n"
"全てのComposerのバージョンで使えます。"

#. type: Title ##
#: ../doc/07-runtime.md:15
#, no-wrap
msgid "Installed versions"
msgstr "インストールされたバージョン"

#. type: Plain text
#: ../doc/07-runtime.md:20
msgid ""
"composer-runtime-api 2.0 introduced a new `Composer\\InstalledVersions` "
"class which offers a few static methods to inspect which versions are "
"currently installed. This is automatically available to your code as long as "
"you include the Composer autoloader."
msgstr ""
"composer-runtime-api 2.0では、現在インストールされているバージョンを調べるた"
"めの静的メソッドを提供する新しい`Composer\\InstalledVersions`クラスが導入され"
"ました。\n"
"Composerの自動読み込み器が含まれている限り、コードで自動的に使用できます。"

#. type: Plain text
#: ../doc/07-runtime.md:22
msgid "The main use cases for this class are the following:"
msgstr "このクラスの主な用例は以下の通りです。"

#. type: Title ###
#: ../doc/07-runtime.md:23
#, no-wrap
msgid "Knowing whether package X (or virtual package) is present"
msgstr "パッケージX（あるいは仮想パッケージ）が存在するか見る"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:25
#, no-wrap
msgid ""
"\\Composer\\InstalledVersions::isInstalled('vendor/package'); // returns bool\n"
"\\Composer\\InstalledVersions::isInstalled('psr/log-implementation'); // returns bool\n"
msgstr ""
"\\Composer\\InstalledVersions::isInstalled('vendor/package'); // 真偽値を返す\n"
"\\Composer\\InstalledVersions::isInstalled('psr/log-implementation'); // 真偽値を返す\n"

#. type: Plain text
#: ../doc/07-runtime.md:32
msgid ""
"As of Composer 2.1, you may also check if something was installed via "
"require-dev or not by passing false as second argument:"
msgstr ""
"Composer 2.1から、2つ目の引数に偽を渡すことによりrequire-devを介してインス"
"トールされたかを確認することもできます。"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:33
#, no-wrap
msgid ""
"\\Composer\\InstalledVersions::isInstalled('vendor/package'); // returns true assuming this package is installed\n"
"\\Composer\\InstalledVersions::isInstalled('vendor/package', false); // returns true if vendor/package is in require, false if in require-dev\n"
msgstr ""
"\\Composer\\InstalledVersions::isInstalled('vendor/package'); // このパッケージがインストールされていれば真を返す\n"
"\\Composer\\InstalledVersions::isInstalled('vendor/package', false); // vendor/packageがrequireにあれば真を、require-devにあれば偽を返す\n"

#. type: Plain text
#: ../doc/07-runtime.md:39
msgid ""
"Note that this can not be used to check whether platform packages are "
"installed."
msgstr ""
"なお、プラットフォームパッケージがインストールされているかどうかを確認するの"
"には使えません。"

#. type: Title ###
#: ../doc/07-runtime.md:40
#, no-wrap
msgid "Knowing whether package X is installed in version Y"
msgstr "パッケージXのバージョンYがインストールされているかどうかを見る"

#. type: Plain text
#: ../doc/07-runtime.md:43
#, no-wrap
msgid "> **Note:** To use this, your package must require `\"composer/semver\": \"^3.0\"`.\n"
msgstr "> **補足：** これを使うためには`\"composer/semver\": \"^3.0\"`をrequireしなければなりません。\n"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:44
#, no-wrap
msgid ""
"use Composer\\Semver\\VersionParser;\n"
"\n"
"\\Composer\\InstalledVersions::satisfies(new VersionParser, 'vendor/package', '2.0.*');\n"
"\\Composer\\InstalledVersions::satisfies(new VersionParser, 'psr/log-implementation', '^1.0');\n"
msgstr ""
"use Composer\\Semver\\VersionParser;\n"
"\n"
"\\Composer\\InstalledVersions::satisfies(new VersionParser, 'vendor/package', '2.0.*');\n"
"\\Composer\\InstalledVersions::satisfies(new VersionParser, 'psr/log-implementation', '^1.0');\n"

#. type: Plain text
#: ../doc/07-runtime.md:54
msgid ""
"This will return true if e.g. vendor/package is installed in a version "
"matching `2.0.*`, but also if the given package name is replaced or provided "
"by some other package."
msgstr ""
"例えば、vendor/packageについて、`2.0.*`に適合するバージョンでインストールされ"
"ている場合だけでなく、与えられたパッケージ名が何らかの他のパッケージにより置"
"き換えられていたり与えられていたりする場合にも真を返します。"

#. type: Title ###
#: ../doc/07-runtime.md:55
#, no-wrap
msgid "Knowing the version of package X"
msgstr "パッケージのバージョンを見る"

#. type: Plain text
#: ../doc/07-runtime.md:61
#, no-wrap
msgid ""
"> **Note:** This will return `null` if the package name you ask for is not itself installed\n"
"> but merely provided or replaced by another package. We therefore recommend using satisfies()\n"
"> in library code at least. In application code you have a bit more control and it is less\n"
"> important.\n"
msgstr ""
"> **補足：**\n"
"> 求めるパッケージ名自体はインストールされていないものの、他のパッケージから与えられていたり置き換えられていたりする場合は`null`を返します。\n"
"> したがって少なくともライブラリのコードでは、satisfies()を使うことをお勧めします。\n"
"> アプリケーションのコードではもう少し制御できるため、あまり重要ではありません。\n"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:62
#, no-wrap
msgid ""
"// returns a normalized version (e.g. 1.2.3.0) if vendor/package is installed,\n"
"// or null if it is provided/replaced,\n"
"// or throws OutOfBoundsException if the package is not installed at all\n"
"\\Composer\\InstalledVersions::getVersion('vendor/package');\n"
msgstr ""
"// vendor/packageがインストールされている場合、正規化されたバージョン（例：1.2.3.0）が返ります。\n"
"// パッケージが提供されたり置き換えられたりしたものであればnullを返します。\n"
"// パッケージが全くインストールされていなければOutOfBoundsExceptionを投げます。\n"
"\\Composer\\InstalledVersions::getVersion('vendor/package');\n"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:69
#, no-wrap
msgid ""
"// returns the original version (e.g. v1.2.3) if vendor/package is installed,\n"
"// or null if it is provided/replaced,\n"
"// or throws OutOfBoundsException if the package is not installed at all\n"
"\\Composer\\InstalledVersions::getPrettyVersion('vendor/package');\n"
msgstr ""
"// vendor/packageがインストールされていれば元のバージョン（例：v1.2.3）を返します。\n"
"// 提供されたり置き換えられたりしたものであればnullを返します。\n"
"// パッケージが全くインストールされていなければOutOfBoundsExceptionを投げます。\n"
"\\Composer\\InstalledVersions::getPrettyVersion('vendor/package');\n"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:76
#, no-wrap
msgid ""
"// returns the package dist or source reference (e.g. a git commit hash) if vendor/package is installed,\n"
"// or null if it is provided/replaced,\n"
"// or throws OutOfBoundsException if the package is not installed at all\n"
"\\Composer\\InstalledVersions::getReference('vendor/package');\n"
msgstr ""
"// vendor/packageがインストールされていれば、パッケージのdistまたはsourceの参照（例：gitのコミットハッシュ）を返します。\n"
"// 提供されたり置き換えられたりしたものであればnullを返します。\n"
"// そのパッケージが全くインストールされていなければOutOfBoundsExceptionを投げます。\n"
"\\Composer\\InstalledVersions::getReference('vendor/package');\n"

#. type: Title ###
#: ../doc/07-runtime.md:83
#, no-wrap
msgid "Knowing a package's own installed version"
msgstr "パッケージ自体のインストールされたバージョンを見る"

#. type: Plain text
#: ../doc/07-runtime.md:88
msgid ""
"If you are only interested in getting a package's own version, e.g. in the "
"source of acme/foo you want to know which version acme/foo is currently "
"running to display that to the user, then it is acceptable to use getVersion/"
"getPrettyVersion/getReference."
msgstr ""
"パッケージ自体のバージョンを取得することにのみ関心がある場合、getVersion/"
"getPrettyVersion/getReferenceで充分でしょう。\n"
"例えばacme/fooのソースで、現在実行中のacme/fooのバージョンがどれかを利用者に"
"表示したい場合などです。"

#. type: Plain text
#: ../doc/07-runtime.md:91
msgid ""
"The warning in the section above does not apply in this case as you are sure "
"the package is present and not being replaced if your code is running."
msgstr ""
"上の節の警告はこの場合には適用されません。\n"
"なぜならコードが走っている場合はパッケージは存在しており置き換えられてもいな"
"いからです。"

#. type: Plain text
#: ../doc/07-runtime.md:94
msgid ""
"It is nonetheless a good idea to make sure you handle the `null` return "
"value as gracefully as possible for safety."
msgstr ""
"とはいうものの、できる限りの安全性のために`null`の返り値まで心を配って制御す"
"ることは良い考えです。"

#. type: Plain text
#: ../doc/07-runtime.md:99
msgid ""
"A few other methods are available for more complex usages, please refer to "
"the source/docblocks of [the class itself](https://github.com/composer/"
"composer/blob/main/src/Composer/InstalledVersions.php)."
msgstr ""
"より複雑な用例については他の方法がいくつか利用できます。\n"
"[クラス自体](https://github.com/composer/composer/blob/main/src/Composer/"
"InstalledVersions.php)のソースやドキュメント部分を参照してください。"

#. type: Title ###
#: ../doc/07-runtime.md:100
#, no-wrap
msgid "Knowing the path in which a package is installed"
msgstr "パッケージがインストールされているパスを見る"

#. type: Plain text
#: ../doc/07-runtime.md:103
msgid ""
"The `getInstallPath` method to retrieve a package's absolute install path."
msgstr ""
"`getInstallPath`メソッドはパッケージがインストールされている絶対パスを取得し"
"ます。"

#. type: Plain text
#: ../doc/07-runtime.md:107
#, no-wrap
msgid ""
"> **Note:** The path, while absolute, may contain `../` or symlinks. It is\n"
"> not guaranteed to be equivalent to a `realpath()` so you should run a\n"
"> realpath on it if that matters to you.\n"
msgstr ""
"> **補足：** パスは絶対的ではありますが、`../`やシンボリックリンクは含まれることがあります。\n"
"> `realpath()`と等価なものであるという保証はないので、問題に挙がる状況ではrealpathを走らせるべきです。\n"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:108
#, no-wrap
msgid ""
"// returns an absolute path to the package installation location if vendor/package is installed,\n"
"// or null if it is provided/replaced, or the package is a metapackage\n"
"// or throws OutOfBoundsException if the package is not installed at all\n"
"\\Composer\\InstalledVersions::getInstallPath('vendor/package');\n"
msgstr ""
"// vendor/packageがインストールされていればパッケージのインストール場所への絶対パスを返します。\n"
"// 提供されていたり置き換えられていたり、あるいはパッケージがメタパッケージの場合はnullを返します。\n"
"// そのパッケージが全くインストールされていなければOutOfBoundsExceptionを投げます。\n"
"\\Composer\\InstalledVersions::getInstallPath('vendor/package');\n"

#. type: Plain text
#: ../doc/07-runtime.md:116 ../doc/07-runtime.md:132
#, no-wrap
msgid "> Available as of Composer 2.1 (i.e. `composer-runtime-api ^2.1`)\n"
msgstr "> Composer 2.1から使えます（つまり`composer-runtime-api ^2.1`です）\n"

#. type: Title ###
#: ../doc/07-runtime.md:117
#, no-wrap
msgid "Knowing which packages of a given type are installed"
msgstr "与えられた種類でどのパッケージがインストールされているのかを見る"

#. type: Plain text
#: ../doc/07-runtime.md:122
msgid ""
"The `getInstalledPackagesByType` method accepts a package type (e.g. foo-"
"plugin) and lists the packages of that type which are installed. You can "
"then use the methods above to retrieve more information about each package "
"if needed."
msgstr ""
"`getInstalledPackagesByType`メソッドはパッケージの種類（例：foo-plugin）を受"
"け入れ、インストールされているその種類のパッケージを一覧にします。\n"
"その後、上記のメソッドを使用して、必要に応じて各パッケージに関する詳細情報を"
"取得できます。"

#. type: Plain text
#: ../doc/07-runtime.md:126
msgid ""
"This method should alleviate the need for custom installers placing plugins "
"in a specific path instead of leaving them in the vendor dir. You can then "
"find plugins to initialize at runtime via InstalledVersions, including their "
"paths via getInstallPath if needed."
msgstr ""
"この方法により、プラグインをベンダーディレクトリに残すのではなく、特定のパス"
"に配置するカスタムインストーラーの必要性が軽減されます。\n"
"それからInstalledVersionsを介して実行時に初期化するプラグインを見付け、必要に"
"応じてgetInstallPathを介してそれらのパスを含めることができます。"

#. type: Fenced code block (php)
#: ../doc/07-runtime.md:127
#, no-wrap
msgid "\\Composer\\InstalledVersions::getInstalledPackagesByType('foo-plugin');\n"
msgstr "\\Composer\\InstalledVersions::getInstalledPackagesByType('foo-plugin');\n"

#. type: Title ##
#: ../doc/07-runtime.md:133
#, no-wrap
msgid "Platform check"
msgstr "プラットフォームの検査"

#. type: Plain text
#: ../doc/07-runtime.md:137
msgid ""
"composer-runtime-api 2.0 introduced a new `vendor/composer/platform_check."
"php` file, which is included automatically when you include the Composer "
"autoloader."
msgstr ""
"composer-runtime-api 2.0では新しい`vendor/composer/platform_check.php`ファイ"
"ルが導入されました。\n"
"Composerの自動読み込み器を含めた際に、自動的に含まれます。"

#. type: Plain text
#: ../doc/07-runtime.md:141
msgid ""
"It verifies that platform requirements (i.e. php and php extensions) are "
"fulfilled by the PHP process currently running. If the requirements are not "
"met, the script prints a warning with the missing requirements and exits "
"with code 104."
msgstr ""
"プラットフォーム要件（つまり、php及びphp拡張機能）が現在実行中のPHPプロセスで"
"満たされていることを確認します。\n"
"要件が満たされていない場合、スクリプトは不足している要件に関する警告を出力"
"し、コード104で終了します。"

#. type: Plain text
#: ../doc/07-runtime.md:145
msgid ""
"To avoid an unexpected white page of death with some obscure PHP extension "
"warning in production, you can run `composer check-platform-reqs` as part of "
"your deployment/build and if that returns a non-0 code you should abort."
msgstr ""
"実稼働環境で予期せず失敗した際のPHP拡張機能の曖昧な警告が表示される空白ページ"
"を回避するには、デプロイやビルドの工程の一部として`composer check-platform-"
"reqs`を実行し、0以外のコードが返された場合に中止すると良いでしょう。"

#. type: Plain text
#: ../doc/07-runtime.md:147
msgid "The default value is `php-only` which only checks the PHP version."
msgstr "既定値は`php-only`であり、PHPのバージョンのみを検査します。"

#. type: Plain text
#: ../doc/07-runtime.md:151
msgid ""
"If you for some reason do not want to use this safety check, and would "
"rather risk runtime errors when your code executes, you can disable this by "
"setting the [`platform-check`](06-config.md#platform-check) config option to "
"`false`."
msgstr ""
"何らかの理由でこの安全性の検査を使いたくなく、コードが実行されるときの実行時"
"の失敗の惧れを許容する場合は、[`platform-check`](06-config.md#platform-check)"
"構成オプションを`false`に設定することで無効にできます。"

#. type: Plain text
#: ../doc/07-runtime.md:156
msgid ""
"If you want the check to include verifying the presence of PHP extensions, "
"set the config option to `true`. `ext-*` requirements will then be verified "
"but for performance reasons Composer only checks the extension is present, "
"not its exact version."
msgstr ""
"検査にPHP拡張機能が存在することの検証を含めたい場合は、configオプションを"
"`true`に設定します。\n"
"その後、`ext-*`の要件が検証されますが、効率上の理由から、Composerは拡張機能の"
"存在のみをチェックし、その正確なバージョンは検査しません。"

#. type: Plain text
#: ../doc/07-runtime.md:158
msgid ""
"`lib-*` requirements are never supported/checked by the platform check "
"feature."
msgstr ""
"`lib-*`の要件は、プラットフォーム検査機能では全く対応されておらず、検査もされ"
"ません。"

#. type: Title ##
#: ../doc/07-runtime.md:159
#, no-wrap
msgid "Autoloader path in binaries"
msgstr "バイナリの自動読み込みパス"

#. type: Plain text
#: ../doc/07-runtime.md:164
msgid ""
"composer-runtime-api 2.2 introduced a new `$_composer_autoload_path` global "
"variable set when running binaries installed with Composer. Read more about "
"this [on the vendor binaries docs](articles/vendor-binaries.md#finding-the-"
"composer-autoloader-from-a-binary)."
msgstr ""
"composer-runtime-api 2.2では、Composerでインストールされたバイナリを実行する"
"ときに設定される`$_composer_autoload_path`大域変数が新しく導入されました。\n"
"詳細については、[ベンダーバイナリドキュメント](articles/vendor-binaries."
"md#finding-the-composer-autoloader-from-a-binary)を参照してください。"

#. type: Plain text
#: ../doc/07-runtime.md:168
msgid ""
"This is set by the binary proxy and as such is not made available to "
"projects by Composer's `vendor/autoload.php`, which would be useless as it "
"would point back to itself."
msgstr ""
"バイナリプロキシによって設定されるので、Composerの`vendor/autoload.php`ではプ"
"ロジェクトに使うことはできません。\n"
"このファイルはそれ自体を指すように戻ってしまうので、役に立たないのです。"

#. type: Title ##
#: ../doc/07-runtime.md:169
#, no-wrap
msgid "Binary (bin-dir) path in binaries"
msgstr "バイナリパス (bin-dir)"

#. type: Plain text
#: ../doc/07-runtime.md:174
msgid ""
"composer-runtime-api 2.2.2 introduced a new `$_composer_bin_dir` global "
"variable set when running binaries installed with Composer. Read more about "
"this [on the vendor binaries docs](articles/vendor-binaries.md#finding-the-"
"composer-bin-dir-from-a-binary)."
msgstr ""
"composer-runtime-api 2.2.2では、新しい`$_composer_bin_dir`大域変数が導入され"
"ました。\n"
"Composerでインストールされたバイナリを使った際に設定されます。\n"
"これについての詳細は[ベンダーバイナリのドキュメント](articles/vendor-"
"binaries.md#finding-the-composer-bin-dir-from-a-binary)をお読みください。"

#. type: Plain text
#: ../doc/07-runtime.md:177
msgid ""
"This is set by the binary proxy and as such is not made available to "
"projects by Composer's `vendor/autoload.php`."
msgstr ""
"バイナリプロキシによって設定されるため、Composerの`vendor/autoload.php`による"
"プロジェクトでは利用できません。"

#. type: Plain text
#: ../doc/07-runtime.md:178
msgid "&larr; [Config](06-config.md)  | [Community](08-community.md) &rarr;"
msgstr "&larr; [構成](06-config.md)  | [コミュニティ](08-community.md) &rarr;"

#. type: Plain text
#: ../doc/08-community.md:5
msgid ""
"There are many people using Composer already, and quite a few of them are "
"contributing."
msgstr "既に多くの人々がcomposerを使い、少なくない方々が貢献しています。"

#. type: Title ##
#: ../doc/08-community.md:6
#, no-wrap
msgid "Contributing"
msgstr "貢献"

#. type: Plain text
#: ../doc/08-community.md:12
msgid ""
"If you would like to contribute to Composer, please read the [README]"
"(https://github.com/composer/composer) and [CONTRIBUTING](https://github.com/"
"composer/composer/blob/main/.github/CONTRIBUTING.md)  documents."
msgstr ""
"Composerに貢献したいときは、[README](https://github.com/composer/composer)と"
"[CONTRIBUTING](https://github.com/composer/composer/blob/main/.github/"
"CONTRIBUTING.md)のドキュメントを読んでください。"

#. type: Plain text
#: ../doc/08-community.md:14
msgid "The most important guidelines are described as follows:"
msgstr "最重要の指針は以下に記述されます。"

#. type: Plain text
#: ../doc/08-community.md:23
#, no-wrap
msgid ""
"> All code contributions - including those of people having commit access - must\n"
"> go through a pull request and approved by a core developer before being\n"
"> merged. This is to ensure proper review of all the code.\n"
">\n"
"> Fork the project, create a feature branch, and send us a pull request.\n"
">\n"
"> To ensure a consistent code base, you should make sure the code follows\n"
"> the [PSR-12 Coding Standards](https://www.php-fig.org/psr/psr-12/).\n"
msgstr ""
"> 全てのコードの貢献は、コミット権限をもつ人を含めて、プルリクエストを通じて行われます。\n"
"> マージ前に中核開発者による承認がなされなければなりません。\n"
"> これは全てのコードに適切なレビューを確実に行うためです。\n"
">\n"
"> プロジェクトをフォークし、機能ブランチを作成し、そしてプルリクエストを送ってください。\n"
">\n"
"> 一貫性のあるコードベースにするためにコードが[PSR-12コーディング規約](https://www.php-fig.org/psr/psr-12/)に従っていることを確認すべきです。\n"

#. type: Title ##
#: ../doc/08-community.md:24
#, no-wrap
msgid "Support"
msgstr "サポート"

#. type: Plain text
#: ../doc/08-community.md:27
msgid ""
"The IRC channel is on irc.libera.chat: [#composer](ircs://irc.libera."
"chat:6697/composer)."
msgstr ""
"IRCチャンネルは<irc.libera.chat>の [#composer](ircs://irc.libera.chat:6697/"
"composer) にあります。"

#. type: Plain text
#: ../doc/08-community.md:31
msgid ""
"[Stack Overflow](https://stackoverflow.com/questions/tagged/composer-php) "
"and [GitHub Discussions](https://github.com/composer/composer/discussions) "
"both have a collection of Composer related questions."
msgstr ""
"[Stack Overflow](https://stackoverflow.com/questions/tagged/composer-php) と "
"[GitHub Discussions](https://github.com/composer/composer/discussions) には両"
"方ともComposerに関係する質問が寄せられています。"

#. type: Plain text
#: ../doc/08-community.md:34
msgid ""
"For paid support, we do provide Composer-related support via chat and email "
"to [Private Packagist](https://packagist.com) customers."
msgstr ""
"有料のサポートについては、Composerに関係するサポートを[Private Packagist]"
"(https://packagist.com)の顧客にチャットとEメールを介して提供しています。"

#. type: Plain text
#: ../doc/08-community.md:36
msgid "&larr; [Runtime](07-runtime.md)"
msgstr "&larr; [ランタイム](07-runtime.md)"

#. type: Title #
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:1
#, no-wrap
msgid "Why are version constraints combining comparisons and wildcards a bad idea?"
msgstr "何故、比較とワイルドカードが組み合わさったバージョン制約が良くないのか"

#. type: Plain text
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:5
#, no-wrap
msgid ""
"This is a fairly common mistake people make, defining version constraints in\n"
"their package requires like `>=2.*` or `>=1.1.*`.\n"
msgstr "`>=2.*`や`>=1.1*`のようなパッケージの要件でバージョン制約を定義することは、それなりによく見られる誤りです。\n"

#. type: Plain text
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:9
#, no-wrap
msgid ""
"If you think about it and what it really means though, you will quickly\n"
"realize that it does not make much sense. If we decompose `>=2.*`, you\n"
"have two parts:\n"
msgstr ""
"ただし本当に意味しているところを考えれば直ちに意味を成さないことに気付かれるでしょう。\n"
"`>=2.*`を分解すると2つに分けられます。\n"

#. type: Bullet: '- '
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:13
msgid "`>=2` which says the package should be in version 2.0.0 or above."
msgstr "`>=2`はパッケージがバージョン2.0.0以上であるべきだとしています。"

#. type: Bullet: '- '
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:13
msgid ""
"`2.*` which says the package should be between version 2.0.0 (inclusive)  "
"and 3.0.0 (exclusive)."
msgstr ""
"`2.*`は、パッケージがバージョン2.0.0（このバージョンを含む）と3.0.0（このバー"
"ジョンを含まない）の間にあるべきだとしています。"

#. type: Plain text
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:18
#, no-wrap
msgid ""
"As you see, both rules agree on the fact that the package must be >=2.0.0,\n"
"but it is not possible to determine if when you wrote that you were thinking\n"
"of a package in version 3.0.0 or not. Should it match because you asked for\n"
"`>=2` or should it not match because you asked for a `2.*`?\n"
msgstr ""
"見ての通り、両方の規則ではパッケージが2.0.0以上でなければならないという事実について合意されています。\n"
"しかし、それを書いた時にバージョン3.0.0のパッケージのことを考えていたかについては判定できないのです。\n"
"`>=2`を求めたので照合すべきでしょうか。\n"
"それとも`2.*`を求めたので照合しないべきでしょうか。\n"

#. type: Plain text
#: ../doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md:21
msgid ""
"For this reason, Composer throws an error and says that this is invalid.  "
"The way to fix it is to think about what you really mean, and use only one "
"of those rules."
msgstr ""
"こうした理由からComposerはエラーを投げて不当であるとします。\n"
"修正するには本当に意味しているところについて考え、これらの規則のうち1つだけを"
"使うことです。"

#. type: Plain text
#: ../doc/articles/versions.md:4
#, no-wrap
msgid ""
"<!--\n"
"    tagline: Versions explained.\n"
"-->\n"
msgstr ""
"<!--\n"
"    tagline: バージョンについての説明です。\n"
"-->\n"

#. type: Title #
#: ../doc/articles/versions.md:5
#, no-wrap
msgid "Versions and constraints"
msgstr "パッケージと制約"

#. type: Title ##
#: ../doc/articles/versions.md:7
#, no-wrap
msgid "Composer Versions vs VCS Versions"
msgstr "ComposerのバージョンとVCSのバージョン"

#. type: Plain text
#: ../doc/articles/versions.md:16
msgid ""
"Because Composer is heavily geared toward utilizing version control systems "
"like git, the term \"version\" can be a little ambiguous. In the sense of a "
"version control system, a \"version\" is a specific set of files that "
"contain specific data. In git terminology, this is a \"ref\", or a specific "
"commit, which may be represented by a branch HEAD or a tag. When you check "
"out that version in your VCS -- for example, tag `v1.1` or commit `e35fa0d` "
"--, you're asking for a single, known set of files, and you always get the "
"same files back."
msgstr ""
"Composerはgitのような版管理システムを活用する方向に大きく舵を切っているため、"
"「バージョン」という用語は少し曖昧です。\n"
"版管理システムの意味では、「バージョン」は特定のデータを含む特定のファイルの"
"集まりです。\n"
"gitの用語法では、これは「ref」もしくは特定のコミットのことです。\n"
"これはブランチのHEADやタグで表されることがあります。\n"
"あるバージョン……例えばタグ`v1.1`やコミット`e35fa0d`……がVCSにあることを確認す"
"るには、単一の既知のファイルの集まりが欲しいものであり、常に同じファイルが取"
"り寄せられます。"

#. type: Plain text
#: ../doc/articles/versions.md:24
msgid ""
"In Composer, what's often referred to casually as a version -- that is, the "
"string that follows the package name in a require line (e.g., `~1.1` or `1.2."
"*`) -- is actually more specifically a version constraint. Composer uses "
"version constraints to figure out which refs in a VCS it should be checking "
"out (or to verify that a given library is acceptable in the case of a "
"statically-maintained library with a `version` specification in `composer."
"json`)."
msgstr ""
"Composerで何気なくバージョンとしてよく指すもの……つまり要件の行でパッケージ名"
"に続く文字列（例えば`~1.1`や`1.2.*`）……とは実のところ、より具体的にはバージョ"
"ン制約です。\n"
"Composerはバージョン制約を使い、VCSからチェックアウトすべきrefを調べます（も"
"しくは、`composer.json`中の`version`指定で静的に維持されたライブラリのとき"
"は、与えられたライブラリが許容されるか検証します）。"

#. type: Title ##
#: ../doc/articles/versions.md:25
#, no-wrap
msgid "VCS Tags and Branches"
msgstr "VCSのタグとブランチ"

#. type: Plain text
#: ../doc/articles/versions.md:29
#, no-wrap
msgid ""
"*For the following discussion, let's assume the following sample library\n"
"repository:*\n"
msgstr "*以下の説明では、以下のライブラリリポジトリ例があるとします。*\n"

#. type: Fenced code block (shell)
#: ../doc/articles/versions.md:30
#, no-wrap
msgid "~/my-library$ git branch\n"
msgstr "~/my-library$ git branch\n"

#. type: Fenced code block (text)
#: ../doc/articles/versions.md:33
#, no-wrap
msgid ""
"v1\n"
"v2\n"
"my-feature\n"
"another-feature\n"
msgstr ""
"v1\n"
"v2\n"
"my-feature\n"
"another-feature\n"

#. type: Fenced code block (shell)
#: ../doc/articles/versions.md:40
#, no-wrap
msgid "~/my-library$ git tag\n"
msgstr "~/my-library$ git tag\n"

#. type: Fenced code block (text)
#: ../doc/articles/versions.md:43
#, no-wrap
msgid ""
"v1.0\n"
"v1.0.1\n"
"v1.0.2\n"
"v1.1-BETA\n"
"v1.1-RC1\n"
"v1.1-RC2\n"
"v1.1\n"
"v1.1.1\n"
"v2.0-BETA\n"
"v2.0-RC1\n"
"v2.0\n"
"v2.0.1\n"
"v2.0.2\n"
msgstr ""
"v1.0\n"
"v1.0.1\n"
"v1.0.2\n"
"v1.1-BETA\n"
"v1.1-RC1\n"
"v1.1-RC2\n"
"v1.1\n"
"v1.1.1\n"
"v2.0-BETA\n"
"v2.0-RC1\n"
"v2.0\n"
"v2.0.1\n"
"v2.0.2\n"

#. type: Title ###
#: ../doc/articles/versions.md:59
#, no-wrap
msgid "Tags"
msgstr "タグ"

#. type: Plain text
#: ../doc/articles/versions.md:73
#, no-wrap
msgid ""
"Normally, Composer deals with tags (as opposed to branches -- if you don't\n"
"know what this means, read up on\n"
"[version control systems](https://en.wikipedia.org/wiki/Version_control#Common_terminology)).\n"
"When you write a version constraint, it may reference a specific tag (e.g.,\n"
"`1.1`) or it may reference a valid range of tags (e.g., `>=1.1 <2.0`, or\n"
"`~4.0`). To resolve these constraints, Composer first asks the VCS to list\n"
"all available tags, then creates an internal list of available versions based\n"
"on these tags. In the above example, composer's internal list includes versions\n"
"`1.0`, `1.0.1`, `1.0.2`, the beta release of `1.1`, the first and second\n"
"release candidates of `1.1`, the final release version `1.1`, etc.... (Note\n"
"that Composer automatically removes the 'v' prefix in the actual tagname to\n"
"get a valid final version number.)\n"
msgstr ""
"通常Composerはタグを扱います（ブランチではありません。\n"
"意味するところが分からなければ、[版管理システム](https://en.wikipedia.org/wiki/Version_control#Common_terminology)をご一読ください）。\n"
"バージョン制約を書くとき、特定のタグ（例えば`1.1`）を参照することや、有効なタグの範囲（例えば`>=1.1 <2.0`や`~4.0`）を参照することがあります。\n"
"こうした制約を解決するため、ComposerはまずVCSに全ての利用できるタグを挙げるよう頼みます。\n"
"それからこれらのタグに基づいて利用できるバージョンの内部的な一覧を作ります。\n"
"上の例では、composerの内部リストにはバージョン`1.0`、`1.0.1`、`1.0.2`、`1.1`のベータリリース、`1.1`の1つ目と2つ目のリリース候補、`1.1`の最終リリースバージョンなどが含まれます（なおComposerは最終的に有効なバージョン番号を得るため、自動的に実際のタグ名から`v`接頭辞を除きます）。\n"

#. type: Plain text
#: ../doc/articles/versions.md:80
msgid ""
"When Composer has a complete list of available versions from your VCS, it "
"then finds the highest version that matches all version constraints in your "
"project (it's possible that other packages require more specific versions of "
"the library than you do, so the version it chooses may not always be the "
"highest available version) and it downloads a zip archive of that tag to "
"unpack in the correct location in your `vendor` directory."
msgstr ""
"ComposerにVCSで利用できるバージョンの完全な一覧ができたら、プロジェクトの全て"
"のバージョン制約に合致する最も大きいバージョンを探します（他のパッケージが自"
"分で指定したものよりそのライブラリのバージョンをより限定されたものを要件とす"
"ることがあります。\n"
"そのため選ばれるバージョンは入手できるバージョンのうち最大のものであるとは限"
"りません）。\n"
"またそのタグのzipアーカイブをダウンロードして`vendor`ディレクトリの正しい場所"
"に開封します。"

#. type: Title ###
#: ../doc/articles/versions.md:81
#, no-wrap
msgid "Branches"
msgstr "ブランチ"

#. type: Plain text
#: ../doc/articles/versions.md:84
msgid ""
"If you want Composer to check out a branch instead of a tag, you need to "
"point it to the branch using the special `dev-*` prefix (or sometimes "
"suffix; see below). If you're checking out a branch, it's assumed that you "
"want to *work* on the branch and Composer actually clones the repo into the "
"correct place in your `vendor` directory. For tags, it copies the right "
"files without actually cloning the repo. (You can modify this behavior with "
"--prefer-source and --prefer-dist, see [install options](../03-cli."
"md#install).)"
msgstr ""
"タグではなくブランチをチェックアウトしたいときは、特別な`dev-*`接頭辞（接尾辞"
"のときもあります。後述）を使ってブランチを指す必要があります。\n"
"ブランチをチェックアウトすると、ブランチで*作業*したいと仮定し、実際にリポジ"
"トリを`vendor`ディレクトリの正しい場所にクローンします。\n"
"タグについては、実際にはリポジトリをクローンせず、正しいファイルを複製します"
"（--prefer-sourceや--prefer-distでこの挙動を変えられます。\n"
"[インストールオプション](../03-cli.md#install)を参照してください）。"

#. type: Plain text
#: ../doc/articles/versions.md:86
msgid ""
"In the above example, if you wanted to check out the `my-feature` branch, "
"you would specify `dev-my-feature` as the version constraint in your "
"`require` clause. This would result in Composer cloning the `my-library` "
"repository into my `vendor` directory and checking out the `my-feature` "
"branch."
msgstr ""
"上の例では`my-feature`ブランチをチェックアウトしたいため、`require`節のバー"
"ジョン制約として`dev-my-feature`を指定することになります。\n"
"こうすると`my-liberay`リポジトリが`vendor`ディレクトリにクローンされ、`my-"
"feature`ブランチがチェックアウトされます。"

#. type: Plain text
#: ../doc/articles/versions.md:88
msgid ""
"When branch names look like versions, we have to clarify for Composer that "
"we're trying to check out a branch and not a tag. In the above example, we "
"have two version branches: `v1` and `v2`. To get Composer to check out one "
"of these branches, you must specify a version constraint that looks like "
"this: `v1.x-dev`. The `.x` is an arbitrary string that Composer requires to "
"tell it that we're talking about the `v1` branch and not a `v1` tag "
"(alternatively, you can name the branch `v1.x` instead of `v1`). In the case "
"of a branch with a version-like name (`v1`, in this case), you append `-dev` "
"as a suffix, rather than using `dev-` as a prefix."
msgstr ""
"ブランチ名がバージョンのように見えるとき、タグではなくブランチをチェックアウ"
"トしようとしていることをはっきりしなければなりません。\n"
"上の例では2つのバージョンブランチ`v1`と`v2`があります。\n"
"これらのブランチをチェックアウトするには`v1.x-dev`のようにバージョン制約を指"
"定しなければなりません。\n"
"`.x`は任意の文字列で、`v1`タグではなく`v1`ブランチについて書いていることを"
"Composerに伝えます（代替としてブランチに`v1`ではなく`v1.x`と名前を付けられま"
"す）。\n"
"この場合のバージョンのような名前（この場合は`v1`）を持つブランチでは、`dev-`"
"を接頭辞として使うのではなく、接尾辞として`-dev`を付けます。"

#. type: Title ###
#: ../doc/articles/versions.md:89
#, no-wrap
msgid "Stabilities"
msgstr "安定性"

#. type: Plain text
#: ../doc/articles/versions.md:99
msgid ""
"Composer recognizes the following stabilities (in order of stability): dev, "
"alpha, beta, RC, and stable where RC stands for release candidate. The "
"stability of a version is defined by its suffix e.g version `v1.1-BETA` has "
"a stability of `beta` and `v1.1-RC1` has a stability of `RC`. If such a "
"suffix is missing e.g. version `v1.1` then Composer considers that version "
"`stable`. In addition to that Composer automatically adds a `-dev` suffix to "
"all numeric branches and prefixes all other branches imported from a VCS "
"repository with `dev-`. In both cases the stability `dev` gets assigned."
msgstr ""
"Composerは次の安定性を（この順で）認識します。\n"
"すなわちdev、alpha、beta、RC、stableです。\n"
"ここでRCはリリース候補 (release candidate) を表します。\n"
"バージョンの安定性は接尾辞で定義されます。\n"
"例えばバージョン`v1.1-BETA`には`beta`の安定性があり、`v1.1-RC1`には`RC`の安定"
"性があります。\n"
"そのような接尾辞がないときは、バージョンが`stable`だと見做します。\n"
"例えば`v1.1`です。\n"
"これに加えて全ての番号のブランチに`-dev`接尾辞を自動的に加え、VCSリポジトリか"
"らインポートしたその他全てのブランチに`dev-`の接頭辞を加えます。\n"
"両方の場合とも安定性`dev`が割り当たります。"

#. type: Plain text
#: ../doc/articles/versions.md:101
msgid "Keeping this in mind will help you in the next section."
msgstr "このことを念頭に置くと、次の節を読む助けになります。"

#. type: Title ###
#: ../doc/articles/versions.md:102
#, no-wrap
msgid "Minimum Stability"
msgstr "最小安定性"

#. type: Plain text
#: ../doc/articles/versions.md:105
msgid ""
"There's one more thing that will affect which files are checked out of a "
"library's VCS and added to your project: Composer allows you to specify "
"stability constraints to limit which tags are considered valid. In the above "
"example, note that the library released a beta and two release candidates "
"for version `1.1` before the final official release. To receive these "
"versions when running `composer install` or `composer update`, we have to "
"explicitly tell Composer that we are ok with release candidates and beta "
"releases (and alpha releases, if we want those). This can be done using "
"either a project-wide `minimum-stability` value in `composer.json` or using "
"\"stability flags\" in version constraints. Read more on the [schema page]"
"(../04-schema.md#minimum-stability)."
msgstr ""
"チェックアウトされてプロジェクトに加わるライブラリのVCSの、ファイルに作用する"
"点はもう1つあります。\n"
"Composerでは安定性の制約を指定し、正当と見做すタグを制限できます。\n"
"上の例で、最終的な公式リリースの前に、バージョン`1.1`にベータ版と2つのリリー"
"ス候補が、ライブラリでリリースされていることにご注目ください。\n"
"`composer install`や`composer update`を走らせるときにこれらのバージョンを取得"
"するには、リリース候補やベータリリース（または所望であればアルファリリース）"
"で良いことをComposerに陽に伝えなければなりません。\n"
"これにはプロジェクト範囲の`minimum-stability`値を`composer.json`に使うか、"
"バージョン制約に「安定性フラグ」を使います。\n"
"詳しくは[スキーマのページ](../04-schema.md#minimum-stability)をお読みくださ"
"い。"

#. type: Title ##
#: ../doc/articles/versions.md:106
#, no-wrap
msgid "Writing Version Constraints"
msgstr "パッケージ制約を書く"

#. type: Plain text
#: ../doc/articles/versions.md:110
msgid ""
"Now that you have an idea of how Composer sees versions, let's talk about "
"how to specify version constraints for your project dependencies."
msgstr ""
"Composerでのバージョンの捉え方が分かったところで、プロジェクトの依存関係で"
"バージョン制約を指定する方法についてお話ししましょう。"

#. type: Title ###
#: ../doc/articles/versions.md:111
#, no-wrap
msgid "Exact Version Constraint"
msgstr "厳密なパッケージ制約"

#. type: Plain text
#: ../doc/articles/versions.md:117
msgid ""
"You can specify the exact version of a package. This will tell Composer to "
"install this version and this version only. If other dependencies require a "
"different version, the solver will ultimately fail and abort any install or "
"update procedures."
msgstr ""
"パッケージの厳密なバージョンを指定できます。\n"
"こうすると、このバージョンを、それもこのバージョンだけを、Composerにインス"
"トールするよう伝えます。\n"
"他の依存関係で違うバージョンが必要なとき、解決器は最終的に失敗し、インストー"
"ルや更新の処理を途絶します。"

#. type: Plain text
#: ../doc/articles/versions.md:119
msgid "Example: `1.0.2`"
msgstr "例：`1.0.2`"

#. type: Title ###
#: ../doc/articles/versions.md:120
#, no-wrap
msgid "Version Range"
msgstr "バージョンの範囲"

#. type: Plain text
#: ../doc/articles/versions.md:124
#, no-wrap
msgid ""
"By using comparison operators you can specify ranges of valid versions. Valid\n"
"operators are `>`, `>=`, `<`, `<=`, `!=`.\n"
msgstr ""
"比較演算子を使うと、正当なバージョンの範囲を指定できます。\n"
"正当な演算子は`>`、`>=`、`<`、`<=`、`!=`です。\n"

#. type: Plain text
#: ../doc/articles/versions.md:128
#, no-wrap
msgid ""
"You can define multiple ranges. Ranges separated by a space (<code>&nbsp;</code>)\n"
"or comma (`,`) will be treated as a **logical AND**. A double pipe (`||`)\n"
"will be treated as a **logical OR**. AND has higher precedence than OR.\n"
msgstr ""
"複数の範囲を定義できます。\n"
"空白 (<code>&nbsp;</code>) やコンマで区切られた範囲は**論理積**として扱われます。\n"
"二重パイプ (`||`) は**論理和**として扱われます。\n"
"積は和より優先されます。\n"

#. type: Plain text
#: ../doc/articles/versions.md:132
#, no-wrap
msgid ""
"> **Note:** Be careful when using unbounded ranges as you might end up\n"
"> unexpectedly installing versions that break backwards compatibility.\n"
"> Consider using the [caret](#caret-version-range-) operator instead for safety.\n"
msgstr ""
"> **補足：**\n"
"> 境界のない範囲を使うときはご注意ください。\n"
"> 後方互換性を壊すバージョンを予期せずインストールすることがあるからです。\n"
"> 安全のため、代わりに[キャレット](#caret-version-range-)演算子を使うことをご検討ください。\n"

#. type: Plain text
#: ../doc/articles/versions.md:137
#, no-wrap
msgid ""
"<!--blank line followed by comment markup to separate the block quotes-->\n"
"> **Note:** In older versions of Composer the single pipe (`|`) was the\n"
"> recommended alternative to the **logical OR**. Thus for backwards compatibility\n"
"> the single pipe (`|`) will still be treated as a **logical OR**.\n"
msgstr ""
"<!--blank line followed by comment markup to separate the block quotes-->\n"
"> **補足：**\n"
"> Composerの古いバージョンでは、単一の棒 (`|`) は**論理和**の推奨される代替案でした。\n"
"> そのため後方互換性のため、単一の棒 (`|`) は**論理和**として扱われたままになっています。\n"

#. type: Bullet: '* '
#: ../doc/articles/versions.md:143
msgid "`>=1.0`"
msgstr "`>=1.0`"

#. type: Bullet: '* '
#: ../doc/articles/versions.md:143
msgid "`>=1.0 <2.0`"
msgstr "`>=1.0 <2.0`"

#. type: Bullet: '* '
#: ../doc/articles/versions.md:143
msgid "`>=1.0 <1.1 || >=1.2`"
msgstr "`>=1.0 <1.1 || >=1.2`"

#. type: Title ###
#: ../doc/articles/versions.md:144
#, no-wrap
msgid "Hyphenated Version Range (` - `)"
msgstr "ハイフン版のバージョン範囲 (` - `)"

#. type: Plain text
#: ../doc/articles/versions.md:150
#, no-wrap
msgid ""
"Inclusive set of versions. Partial versions on the right include are completed\n"
"with a wildcard. For example `1.0 - 2.0` is equivalent to `>=1.0.0 <2.1` as the\n"
"`2.0` becomes `2.0.*`. On the other hand `1.0.0 - 2.1.0` is equivalent to\n"
"`>=1.0.0 <=2.1.0`.\n"
msgstr ""
"含まれるバージョンの集合です。\n"
"含まれるバージョンの右部分はワイルドカードが補完されます。\n"
"例えば`1.0 - 2.0`は、`2.0`が`2.0.*`になるため、`>=1.0.0 <2.1`と等価です。\n"
"他方で`1.0.0 - 2.1.0`は`>=1.0.0 <=2.1.0`と等価です。\n"

#. type: Plain text
#: ../doc/articles/versions.md:152
msgid "Example: `1.0 - 2.0`"
msgstr "例：`1.0 - 2.0`"

#. type: Title ###
#: ../doc/articles/versions.md:153
#, no-wrap
msgid "Wildcard Version Range (`.*`)"
msgstr "ワイルドカードのバージョン範囲 (`.*`)"

#. type: Plain text
#: ../doc/articles/versions.md:157
#, no-wrap
msgid ""
"You can specify a pattern with a `*` wildcard. `1.0.*` is the equivalent of\n"
"`>=1.0 <1.1`.\n"
msgstr ""
"`*`ワイルドカードでパターンを指定できます。\n"
"`1.0.*`は`>=1.0 <1.1`と等価です。\n"

#. type: Plain text
#: ../doc/articles/versions.md:159
msgid "Example: `1.0.*`"
msgstr "例：`1.0.*`"

#. type: Title ##
#: ../doc/articles/versions.md:160
#, no-wrap
msgid "Next Significant Release Operators"
msgstr "次の大規模リリースの演算子"

#. type: Title ###
#: ../doc/articles/versions.md:162
#, no-wrap
msgid "Tilde Version Range (`~`)"
msgstr "チルダのバージョン範囲 (`~`)"

#. type: Plain text
#: ../doc/articles/versions.md:172
#, no-wrap
msgid ""
"The `~` operator is best explained by example: `~1.2` is equivalent to\n"
"`>=1.2 <2.0.0`, while `~1.2.3` is equivalent to `>=1.2.3 <1.3.0`. As you can see\n"
"it is mostly useful for projects respecting [semantic\n"
"versioning](https://semver.org/). A common usage would be to mark the minimum\n"
"minor version you depend on, like `~1.2` (which allows anything up to, but not\n"
"including, 2.0). Since in theory there should be no backwards compatibility\n"
"breaks until 2.0, that works well. Another way of looking at it is that using\n"
"`~` specifies a minimum version, but allows the last digit specified to go up.\n"
msgstr ""
"`~`演算子は例で説明するのが1番です。\n"
"`~1.2`は`>=1.2 <2.0.0`と等価です。\n"
"一方、`~1.2.3`は`>=1.2.3 <1.3.0`と等価です。\n"
"見て分かる通り、[セマンティックバージョニング](https://semver.org/)を尊重するプロジェクトで特に有用です。\n"
"よくある使い方は、`~1.2`のように（こうすると2.0までの全バージョン、ただし2.0は含まれないものにできます）、依存する最小の小規模バージョンの印を付けることでしょう。\n"
"理論上は2.0まで後方互換性の破壊はないでしょうから、うまくいきます。\n"
"別の見方は、`~`を使って最小バージョンを指定するというものです。\n"
"ただし指定された最後の桁は上げられます。\n"

#. type: Plain text
#: ../doc/articles/versions.md:174
msgid "Example: `~1.2`"
msgstr "例：`~1.2`"

#. type: Plain text
#: ../doc/articles/versions.md:178
#, no-wrap
msgid ""
"> **Note:** Although `2.0-beta.1` is strictly before `2.0`, a version constraint\n"
"> like `~1.2` would not install it. As said above `~1.2` only means the `.2`\n"
"> can change but the `1.` part is fixed.\n"
msgstr ""
"> **補足：:**\n"
"> `2.0-beta.1`は`2.0`より厳密には前ですが、`~1.2`のようなバージョン制約ではインストールされません。\n"
"> 前述の通り、`~1.2`とは`.2`が変わることがありますが、`1.`の部分は固定されるという意味です。\n"

#. type: Plain text
#: ../doc/articles/versions.md:183
#, no-wrap
msgid ""
"> **Note:** The `~` operator has an exception on its behavior for the major\n"
"> release number. This means for example that `~1` is the same as `~1.0` as\n"
"> it will not allow the major number to increase trying to keep backwards\n"
"> compatibility.\n"
msgstr ""
"> **補足：**\n"
"> `~`演算子にはメジャーリリース番号に関して挙動に例外があります。\n"
"> つまり、例えば`~1`は`~1.0`と同じですが、これは後方互換性を保とうとする上で、メジャー番号を増やせないからです。\n"

#. type: Title ###
#: ../doc/articles/versions.md:184
#, no-wrap
msgid "Caret Version Range (`^`)"
msgstr "キャレットバージョン範囲 (`^`)"

#. type: Plain text
#: ../doc/articles/versions.md:191
#, no-wrap
msgid ""
"The `^` operator behaves very similarly, but it sticks closer to semantic\n"
"versioning, and will always allow non-breaking updates. For example `^1.2.3`\n"
"is equivalent to `>=1.2.3 <2.0.0` as none of the releases until 2.0 should\n"
"break backwards compatibility. For pre-1.0 versions it also acts with safety\n"
"in mind and treats `^0.3` as `>=0.3.0 <0.4.0` and `^0.0.3` as `>=0.0.3 <0.0.4`.\n"
msgstr ""
"`^`演算子はとてもよく似た挙動ですが、よりセマンティックバージョニングに密接しており、破壊的でない更新は常に許されます。\n"
"例えば`^1.2.3`は`>=1.2.3 <2.0.0`と等価です。\n"
"2.0までのリリースで後方互換性を壊すものはないからです。\n"
"1.0より前のバージョンについては、安全性に留意した動作となっており、`^0.3`は`>=0.3.0 <0.4.0`として、`^0.0.3`は`>=0.0.3 <0.0.4`として扱います。\n"

#. type: Plain text
#: ../doc/articles/versions.md:194
msgid ""
"This is the recommended operator for maximum interoperability when writing "
"library code."
msgstr ""
"これはライブラリのコードを書く際に、最も相互運用性を高くするため推奨される演"
"算子です。"

#. type: Plain text
#: ../doc/articles/versions.md:196
msgid "Example: `^1.2.3`"
msgstr "例：`^1.2.3`"

#. type: Plain text
#: ../doc/articles/versions.md:202
#, no-wrap
msgid ""
"> **Note:** If you are using PowerShell on Windows, you have to escape\n"
"> carets when using them as argument on the CLI for example when using the\n"
"> `composer require` command. You have to use four\n"
"> subsequent caret operators, e.g. `^^^^1.2.3`, to ensure the caret operator gets\n"
"> passed to Composer correctly.\n"
msgstr ""
"> **補足：**\n"
"> WindowsでPowerShellを使っているとき、例えば`composer require`コマンドを使う際は、CLIで引数としてキャレットを使うときにエスケープしなければなりません。\n"
"> キャレットがComposerに確実に正しく渡されるようにするため、例えば`^^^^1.2.3`のように、4つの連続するキャレット演算子を使わなければなりません。\n"

#. type: Title ##
#: ../doc/articles/versions.md:203
#, no-wrap
msgid "Stability Constraints"
msgstr "安定性の制約"

#. type: Plain text
#: ../doc/articles/versions.md:208
msgid ""
"If you are using a constraint that does not explicitly define a stability, "
"Composer will default internally to `-dev` or `-stable`, depending on the "
"operator(s) used. This happens transparently."
msgstr ""
"安定性を陽に定義しない制約を使うとき、使われた演算子により、Composerは内部的"
"に既定を`-dev`または`-stable`にします。\n"
"これは透過的に起こります。"

#. type: Plain text
#: ../doc/articles/versions.md:211
msgid ""
"If you wish to explicitly consider only the stable release in the "
"comparison, add the suffix `-stable`."
msgstr ""
"比較で安定リリースのみを陽に検討したいときは`-stable`接尾辞を加えてください。"

#. type: Plain text
#: ../doc/articles/versions.md:225
#, no-wrap
msgid ""
" Constraint         | Internally\n"
"------------------- | ------------------------\n"
" `1.2.3`            | `=1.2.3.0-stable`\n"
" `>1.2`             | `>1.2.0.0-stable`\n"
" `>=1.2`            | `>=1.2.0.0-dev`\n"
" `>=1.2-stable`     | `>=1.2.0.0-stable`\n"
" `<1.3`             | `<1.3.0.0-dev`\n"
" `<=1.3`            | `<=1.3.0.0-stable`\n"
" `1 - 2`            | `>=1.0.0.0-dev <3.0.0.0-dev`\n"
" `~1.3`             | `>=1.3.0.0-dev <2.0.0.0-dev`\n"
" `1.4.*`            | `>=1.4.0.0-dev <1.5.0.0-dev`\n"
msgstr ""
" 制約         | 内部\n"
"------------------- | ------------------------\n"
" `1.2.3`            | `=1.2.3.0-stable`\n"
" `>1.2`             | `>1.2.0.0-stable`\n"
" `>=1.2`            | `>=1.2.0.0-dev`\n"
" `>=1.2-stable`     | `>=1.2.0.0-stable`\n"
" `<1.3`             | `<1.3.0.0-dev`\n"
" `<=1.3`            | `<=1.3.0.0-stable`\n"
" `1 - 2`            | `>=1.0.0.0-dev <3.0.0.0-dev`\n"
" `~1.3`             | `>=1.3.0.0-dev <2.0.0.0-dev`\n"
" `1.4.*`            | `>=1.4.0.0-dev <1.5.0.0-dev`\n"

#. type: Plain text
#: ../doc/articles/versions.md:232
#, no-wrap
msgid ""
"To allow various stabilities without enforcing them at the constraint level\n"
"however, you may use [stability-flags](../04-schema.md#package-links) like\n"
"`@<stability>` (e.g. `@dev`) to let Composer know that a given package\n"
"can be installed in a different stability than your default minimum-stability\n"
"setting. All available stability flags are listed on the minimum-stability\n"
"section of the [schema page](../04-schema.md#minimum-stability).\n"
msgstr ""
"しかし制約の水準に強制せず様々な安定性を許すには、`@<安定性>`（例：`@dev`）のように[安定性フラグ](../04-schema.md#package-links)を使い、与えられたパッケージが既定の最小安定性の設定とは違う安定性でインストールできることをComposerに知らせます。\n"
"使える全ての安定性フラグは[スキーマのページ](../04-schema.md#minimum-stability)の最小安定性の節に挙がっています。\n"

#. type: Title ##
#: ../doc/articles/versions.md:233
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#. type: Fenced code block (jsonc)
#: ../doc/articles/versions.md:234
#, no-wrap
msgid ""
"\"require\": {\n"
"    \"vendor/package\": \"1.3.2\", // exactly 1.3.2\n"
"\n"
"    // >, <, >=, <= | specify upper / lower bounds\n"
"    \"vendor/package\": \">=1.3.2\", // anything above or equal to 1.3.2\n"
"    \"vendor/package\": \"<1.3.2\", // anything below 1.3.2\n"
"\n"
"    // * | wildcard\n"
"    \"vendor/package\": \"1.3.*\", // >=1.3.0 <1.4.0\n"
"\n"
"    // ~ | allows last digit specified to go up\n"
"    \"vendor/package\": \"~1.3.2\", // >=1.3.2 <1.4.0\n"
"    \"vendor/package\": \"~1.3\", // >=1.3.0 <2.0.0\n"
"\n"
"    // ^ | doesn't allow breaking changes (major version fixed - following semver)\n"
"    \"vendor/package\": \"^1.3.2\", // >=1.3.2 <2.0.0\n"
"    \"vendor/package\": \"^0.3.2\", // >=0.3.2 <0.4.0 // except if major version is 0\n"
"}\n"
msgstr ""
"\"require\": {\n"
"    \"vendor/package\": \"1.3.2\", // 1.3.2ぴったり\n"
"\n"
"    // >, <, >=, <= | 上限と下限を指定\n"
"    \"vendor/package\": \">=1.3.2\", // 1.3.2以上の全バージョン\n"
"    \"vendor/package\": \"<1.3.2\", // 1.3.2より小さい全バージョン\n"
"\n"
"    // * | ワイルドカード\n"
"    \"vendor/package\": \"1.3.*\", // >=1.3.0 <1.4.0\n"
"\n"
"    // ~ | 最後の桁は上げられます\n"
"    \"vendor/package\": \"~1.3.2\", // >=1.3.2 <1.4.0\n"
"    \"vendor/package\": \"~1.3\", // >=1.3.0 <2.0.0\n"
"\n"
"    // ^ | 破壊的な変更を許しません（セマンティックバージョニングに従い、メジャーバージョンは固定です）\n"
"    \"vendor/package\": \"^1.3.2\", // >=1.3.2 <2.0.0\n"
"    \"vendor/package\": \"^0.3.2\", // >=0.3.2 <0.4.0 // メジャーバージョンが0のときは例外\n"
"}\n"

#. type: Title ##
#: ../doc/articles/versions.md:255
#, no-wrap
msgid "Testing Version Constraints"
msgstr "パッケージ制約の確認"

#. type: Plain text
#: ../doc/articles/versions.md:260
msgid ""
"You can test version constraints using [semver.madewithlove.com](https://"
"semver.madewithlove.com).  Fill in a package name and it will autofill the "
"default version constraint which Composer would add to your `composer.json` "
"file. You can adjust the version constraint and the tool will highlight all "
"releases that match."
msgstr ""
"[semver.madewithlove.com](https://semver.madewithlove.com)を使ってバージョン"
"制約を確認できます。\n"
"パッケージ名を埋めると、Composerにより`composer.json`ファイルに加わる既定の"
"バージョン制約が自動で埋まります。\n"
"バージョン制約を調整すると、ツールにより、合致する全てのリリースが強調されま"
"す。"

#. type: Title #
#: ../doc/faqs/how-to-install-composer-programmatically.md:1
#, no-wrap
msgid "How do I install Composer programmatically?"
msgstr "Composerをプログラムでインストールする方法"

#. type: Plain text
#: ../doc/faqs/how-to-install-composer-programmatically.md:6
msgid ""
"As noted on the download page, the installer script contains a checksum "
"which changes when the installer code changes and as such it should not be "
"relied upon in the long term."
msgstr ""
"ダウンロードページに附記したように、インストーラースクリプトにはチェックサム"
"が含まれており、このチェックサムはインストーラのコードにより変化します。\n"
"そのため長い目で見るとこの値に依るべきではありません。"

#. type: Plain text
#: ../doc/faqs/how-to-install-composer-programmatically.md:8
msgid ""
"An alternative is to use this script which only works with UNIX utilities:"
msgstr ""
"代替案はこのスクリプトを使うことです。\n"
"UNIXのユーティリティがあってのみ動作します。"

#. type: Fenced code block (shell)
#: ../doc/faqs/how-to-install-composer-programmatically.md:9
#, no-wrap
msgid ""
"#!/bin/sh\n"
"\n"
"EXPECTED_CHECKSUM=\"$(php -r 'copy(\"https://composer.github.io/installer.sig\", \"php://stdout\");')\"\n"
"php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n"
"ACTUAL_CHECKSUM=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\"\n"
"\n"
"if [ \"$EXPECTED_CHECKSUM\" != \"$ACTUAL_CHECKSUM\" ]\n"
"then\n"
"    >&2 echo 'ERROR: Invalid installer checksum'\n"
"    rm composer-setup.php\n"
"    exit 1\n"
"fi\n"
"\n"
"php composer-setup.php --quiet\n"
"RESULT=$?\n"
"rm composer-setup.php\n"
"exit $RESULT\n"
msgstr ""
"#!/bin/sh\n"
"\n"
"EXPECTED_CHECKSUM=\"$(php -r 'copy(\"https://composer.github.io/installer.sig\", \"php://stdout\");')\"\n"
"php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n"
"ACTUAL_CHECKSUM=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\"\n"
"\n"
"if [ \"$EXPECTED_CHECKSUM\" != \"$ACTUAL_CHECKSUM\" ]\n"
"then\n"
"    >&2 echo 'ERROR: Invalid installer checksum'\n"
"    rm composer-setup.php\n"
"    exit 1\n"
"fi\n"
"\n"
"php composer-setup.php --quiet\n"
"RESULT=$?\n"
"rm composer-setup.php\n"
"exit $RESULT\n"

#. type: Plain text
#: ../doc/faqs/how-to-install-composer-programmatically.md:31
msgid ""
"The script will exit with 1 in case of failure, or 0 on success, and is "
"quiet if no error occurs."
msgstr ""
"スクリプトは失敗した場合に1で、成功した場合に0で、それぞれ終了します。\n"
"また、何らエラーが起きなければ何も出ません。"

#. type: Plain text
#: ../doc/faqs/how-to-install-composer-programmatically.md:36
msgid ""
"Alternatively, if you want to rely on an exact copy of the installer, you "
"can fetch a specific version from GitHub's history. The commit hash should "
"be enough to give it uniqueness and authenticity as long as you can trust "
"the GitHub servers.  For example:"
msgstr ""
"別案として、そっくりそのままのインストーラーに頼りたければ、GitHubの履歴から"
"特定のバージョンを取得できます。\n"
"GitHubのサーバーを信用できる限りにおいて、コミットハッシュは一意性と認証性を"
"与えるに充分でしょう。\n"
"例えば以下です。"

#. type: Fenced code block (shell)
#: ../doc/faqs/how-to-install-composer-programmatically.md:37
#, no-wrap
msgid "wget https://raw.githubusercontent.com/composer/getcomposer.org/76a7060ccb93902cd7576b67264ad91c8a2700e2/web/installer -O - -q | php -- --quiet\n"
msgstr "wget https://raw.githubusercontent.com/composer/getcomposer.org/76a7060ccb93902cd7576b67264ad91c8a2700e2/web/installer -O - -q | php -- --quiet\n"

#. type: Plain text
#: ../doc/faqs/how-to-install-composer-programmatically.md:42
msgid ""
"You may replace the commit hash by whatever the last commit hash is on "
"https://github.com/composer/getcomposer.org/commits/main"
msgstr ""
"コミットハッシュは https://github.com/composer/getcomposer.org/commits/main "
"にある何かしら最新のコミットハッシュで置き換えると良いでしょう。"

#. type: Title #
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:1
#, no-wrap
msgid "How to use Composer behind a proxy"
msgstr "プロキシを隔ててComposerを使う方法"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:5
msgid ""
"Composer, like many other tools, uses environment variables to control the "
"use of a proxy server and supports:"
msgstr ""
"Composerは他の多くのツールと同様、環境変数を使ってプロキシサーバーの使用を制"
"御します。\n"
"以下に対応しています。"

#. type: Bullet: '- '
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:10
msgid "`http_proxy` - the proxy to use for HTTP requests"
msgstr "`http_proxy` - HTTP要求を使うプロキシ"

#. type: Bullet: '- '
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:10
msgid "`https_proxy` - the proxy to use for HTTPS requests"
msgstr "`https_proxy` - HTTPS要求を使うプロキシ"

#. type: Bullet: '- '
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:10
msgid ""
"`CGI_HTTP_PROXY` - the proxy to use for HTTP requests in a non-CLI context"
msgstr "`CGI_HTTP_PROXY` - HTTP要求をCLIの文脈ではないところで使うプロキシ"

#. type: Bullet: '- '
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:10
msgid "`no_proxy` - domains that do not require a proxy"
msgstr "`no_proxy` - プロキシを必要としないドメイン"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:14
msgid ""
"These named variables are a convention, rather than an official standard, "
"and their evolution and usage across different operating systems and tools "
"is complex. Composer prefers the use of lowercase names, but accepts "
"uppercase names where appropriate."
msgstr ""
"これらの名前付き変数は慣習によるもので、公式の標準があるわけではありませ"
"ん。\n"
"また異なるオペレーティングシステムやツールに亙る進展や用法については複雑なも"
"のとなっています。\n"
"Composerでは小文字の名前が望ましいものの、適当な場合には大文字の名前も受け付"
"けます。"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:18
msgid ""
"Composer requires specific environment variables for HTTP and HTTPS "
"requests. For example:"
msgstr ""
"ComposerはHTTPとHTTPSの要求に関して所定の環境変数を必要とします。\n"
"例えば以下です。"

#. type: Fenced code block
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:19
#, no-wrap
msgid ""
"http_proxy=http://proxy.com:80\n"
"https_proxy=http://proxy.com:80\n"
msgstr ""
"http_proxy=http://proxy.com:80\n"
"https_proxy=http://proxy.com:80\n"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:25
msgid "Uppercase names can also be used."
msgstr "大文字の名前も使えます。"

#. type: Title ###
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:26
#, no-wrap
msgid "Non-CLI usage"
msgstr "CLIでない使い方"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:31
msgid ""
"Composer does not look for `http_proxy` or `HTTP_PROXY` in a non-CLI "
"context. If you are running it this way (i.e. integration into a CMS or "
"similar use case) you must use `CGI_HTTP_PROXY` for HTTP requests:"
msgstr ""
"ComposerはCLIでない文脈では`http_proxy`や`HTTP_PROXY`を探しません。\n"
"このような方法で走らせている場合（例えばCMSや似たような用途に統合しているな"
"ど）、HTTP要求用に`CGI_HTTP_PROXY`を使わなければなりません。"

#. type: Fenced code block
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:32
#, no-wrap
msgid ""
"CGI_HTTP_PROXY=http://proxy.com:80\n"
"https_proxy=http://proxy.com:80\n"
"\n"
"# cgi_http_proxy can also be used\n"
msgstr ""
"CGI_HTTP_PROXY=http://proxy.com:80\n"
"https_proxy=http://proxy.com:80\n"
"\n"
"# cgi_http_proxyも使えます\n"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:41
#, no-wrap
msgid ""
"> **Note:** CGI_HTTP_PROXY was introduced by Perl in 2001 to prevent request header manipulation and\n"
"was popularized in 2016 when this vulnerability was widely reported: https://httpoxy.org\n"
msgstr ""
"> **補足：**\n"
"> CGI_HTTP_PROXYは、要求ヘッダの操作を防ぐため、2001年にPerlで導入されました。\n"
"> この脆弱性が広く報告された2016年に一般に認知されました。\n"
"> https://httpoxy.org を参照してください。\n"

#. type: Title ##
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:42
#, no-wrap
msgid "Syntax"
msgstr "構文"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:46
msgid ""
"Use `scheme://host:port` as in the examples above. Although a missing scheme "
"defaults to http and a missing port defaults to 80/443 for http/https "
"schemes, other tools might require these values."
msgstr ""
"上の例にある通り、`scheme://host:port`を使ってください。\n"
"スキームが欠けているとhttpが既定になり、ポートが欠けているとhttpやhttpsのス"
"キーム用に80や443の既定になりますが、その他のツールではこれらの値が必要になる"
"ことがあります。"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:49
msgid ""
"The host can be specified as an IP address using dotted quad notation for "
"IPv4, or enclosed in square brackets for IPv6."
msgstr ""
"IPv4用のドットで4つに区切られた記法を使ったIPアドレスとしても、IPv6用に角括弧"
"で囲まれた記法でも、ホストを指定できます。"

#. type: Title ###
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:50
#, no-wrap
msgid "Authorization"
msgstr "認証"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:54
msgid ""
"Composer supports Basic authorization, using the `scheme://user:pass@host:"
"port` syntax. Reserved url characters in either the user name or password "
"must be percent-encoded. For example:"
msgstr ""
"Composerは`scheme://user:pass@host:port`構文を使ったBasic認証に対応していま"
"す。\n"
"利用者名ないしパスワード中の予約されたURLの文字はパーセント符号化されていなけ"
"ればなりません。\n"
"例えば以下です。"

#. type: Fenced code block
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:55
#, no-wrap
msgid ""
"user:  me@company\n"
"pass:  p@ssw$rd\n"
"proxy: http://proxy.com:80\n"
"\n"
"# percent-encoded authorization\n"
"me%40company:p%40ssw%24rd\n"
"\n"
"scheme://me%40company:p%40ssw%24rd@proxy.com:80\n"
msgstr ""
"利用者：me@company\n"
"パスワード：p@ssw$rd\n"
"プロキシ：http://proxy.com:80\n"
"\n"
"# パーセント符号化された認証\n"
"me%40company:p%40ssw%24rd\n"
"\n"
"scheme://me%40company:p%40ssw%24rd@proxy.com:80\n"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:69
#, no-wrap
msgid ""
"> **Note:** The user name and password components must be percent-encoded individually and then\n"
"combined with the colon separator. The user name cannot contain a colon (even if percent-encoded),\n"
"because the proxy will split the components on the first colon it finds.\n"
msgstr ""
"> **補足：**\n"
"> 利用者名とパスワードの構成要素は個々にパーセント符号化され、それからコロンの区切り文字で連結しなければなりません。\n"
"> 利用者名には（パーセント符号化されたとしても）コロンを含められません。\n"
"> なぜならプロキシは最初に見付けたコロンで構成要素を分割するからです。\n"

#. type: Title ##
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:70
#, no-wrap
msgid "HTTPS proxy servers"
msgstr "HTTPSのプロキシサーバー"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:74
msgid ""
"Composer supports HTTPS proxy servers, where HTTPS is the scheme used to "
"connect to the proxy, but only from PHP 7.3 with curl version 7.52.0 and "
"above."
msgstr ""
"ComposerはHTTPSのプロキシサーバーに対応しています。\n"
"ここでのHTTPSはプロキシに接続されるために使われるスキームですが、PHP 7.3以降"
"かつcurlのバージョン7.52.0以降のみです。"

#. type: Fenced code block
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:75
#, no-wrap
msgid ""
"http_proxy=https://proxy.com:443\n"
"https_proxy=https://proxy.com:443\n"
msgstr ""
"http_proxy=https://proxy.com:443\n"
"https_proxy=https://proxy.com:443\n"

#. type: Title ##
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:80
#, no-wrap
msgid "Bypassing the proxy for specific domains"
msgstr "特定のドメインでプロキシを迂回する"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:84
msgid ""
"Use the `no_proxy` (or `NO_PROXY`) environment variable to set a comma-"
"separated list of domains that the proxy should **not** be used for."
msgstr ""
"`no_proxy`（または`NO_PROXY`）を使うと、プロキシが使われるべき「でない」ドメ"
"インのコンマ区切りリストが設定されます。"

#. type: Fenced code block
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:85
#, no-wrap
msgid ""
"no_proxy=example.com\n"
"# Bypasses the proxy for example.com and its sub-domains\n"
"\n"
"no_proxy=www.example.com\n"
"# Bypasses the proxy for www.example.com and its sub-domains, but not for example.com\n"
msgstr ""
"no_proxy=example.com\n"
"# example.comとそのサブドメインについてはプロキシを迂回します。\n"
"\n"
"no_proxy=www.example.com\n"
"# www.example.comとそのサブドメインについてはプロキシを迂回します。\n"
"# example.comについては迂回されません。\n"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:95
msgid ""
"A domain can be restricted to a particular port (e.g. `:80`) and can also be "
"specified as an IP address or an IP address block in CIDR notation."
msgstr ""
"ドメインは特定のポート（例えば`:80`）に制限できます。\n"
"またIPアドレスやCIDRの記法でIPアドレスのブロックとして指定することもできま"
"す。"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:98
msgid ""
"IPv6 addresses do not need to be enclosed in square brackets, like they are "
"for http_proxy/https_proxy values, although this format is accepted."
msgstr ""
"IPv6アドレスはhttp_proxy/https_proxyの値と同様、角括弧で囲む必要はありませ"
"ん。\n"
"ただしこの形式は受け付けられます。"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:100
msgid "Setting the value to `*` will bypass the proxy for all requests."
msgstr "値を`*`に設定すると全ての要求に対するプロキシを迂回します。"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:102
#, no-wrap
msgid "> **Note:** A leading dot in the domain name has no significance and is removed prior to processing.\n"
msgstr ""
"> **補足：**\n"
"> ドメインの先頭のドットには意味がありません。\n"
"> 処理される前に取り除かれます。\n"

#. type: Title ##
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:103
#, no-wrap
msgid "Deprecated environment variables"
msgstr "廃止された環境変数"

#. type: Plain text
#: ../doc/faqs/how-to-use-composer-behind-a-proxy.md:106
msgid ""
"Composer originally provided `HTTP_PROXY_REQUEST_FULLURI` and "
"`HTTPS_PROXY_REQUEST_FULLURI` to help mitigate issues with misbehaving "
"proxies. These are no longer required or used."
msgstr ""
"Composerは元々`HTTP_PROXY_REQUEST_FULLURI`及び`HTTPS_PROXY_REQUEST_FULLURI`を"
"提供してプロキシの良くない挙動を緩和しようとしていました。\n"
"これらは必要ではなくなり、使われることもありません。"
