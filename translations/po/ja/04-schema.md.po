# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-14 16:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ###
#: ../doc/03-cli.md:1024 ../doc/04-schema.md:909
#, no-wrap
msgid "archive"
msgstr "archive"

#. type: Title #
#: ../doc/04-schema.md:1
#, fuzzy, no-wrap
msgid "The composer.json schema"
msgstr "composer.json"

#. type: Plain text
#: ../doc/04-schema.md:4
#, fuzzy
msgid ""
"This chapter will explain all of the fields available in `composer.json`."
msgstr ""
"この章では`composer.json`で利用できる全てのフィールドについて説明します。"

#. type: Title ##
#: ../doc/04-schema.md:5
#, fuzzy, no-wrap
msgid "JSON schema"
msgstr "JSONスキーマ"

#. type: Plain text
#: ../doc/04-schema.md:10
#, fuzzy
msgid ""
"We have a [JSON schema](https://json-schema.org) that documents the format "
"and can also be used to validate your `composer.json`. In fact, it is used "
"by the `validate` command. You can find it at: https://getcomposer.org/"
"schema.json"
msgstr ""
"We have a [JSON schema](http://json-schema.org) that documents the format "
"and can also be used to validate your `composer.json`. In fact, it is used "
"by the `validate` command. You can find it at: [`res/composer-schema.json`]"
"(https://github.com/composer/composer/blob/master/res/composer-schema.json)."

#. type: Title ##
#: ../doc/04-schema.md:11
#, fuzzy, no-wrap
msgid "Root Package"
msgstr "Root Package"

#. type: Plain text
#: ../doc/04-schema.md:16
#, fuzzy
msgid ""
"The root package is the package defined by the `composer.json` at the root "
"of your project. It is the main `composer.json` that defines your project "
"requirements."
msgstr ""
"The root package is the package defined by the `composer.json` at the root "
"of your project. It is the main `composer.json` that defines your project "
"requirements."

#. type: Plain text
#: ../doc/04-schema.md:21
#, fuzzy
msgid ""
"Certain fields only apply when in the root package context. One example of "
"this is the `config` field. Only the root package can define configuration.  "
"The config of dependencies is ignored. This makes the `config` field `root-"
"only`."
msgstr ""
"Certain fields only apply when in the root package context. One example of "
"this is the `config` field. Only the root package can define configuration.  "
"The config of dependencies is ignored. This makes the `config` field `root-"
"only`."

#. type: Plain text
#: ../doc/04-schema.md:26
#, fuzzy, no-wrap
msgid ""
"> **Note:** A package can be the root package or not, depending on the context.\n"
"> For example, if your project depends on the `monolog` library, your project\n"
"> is the root package. However, if you clone `monolog` from GitHub in order to\n"
"> fix a bug in it, then `monolog` is the root package.\n"
msgstr ""
"> **Note:** A package can be the root package or not, depending on the context.\n"
"> For example, if your project depends on the `monolog` library, your project\n"
"> is the root package. However, if you clone `monolog` from GitHub in order to\n"
"> fix a bug in it, then `monolog` is the root package.\n"

#. type: Title ##
#: ../doc/04-schema.md:27
#, fuzzy, no-wrap
msgid "Properties"
msgstr "Properties"

#. type: Title ###
#: ../doc/04-schema.md:29
#, fuzzy, no-wrap
msgid "name"
msgstr "name"

#. type: Plain text
#: ../doc/04-schema.md:33
#, fuzzy
msgid ""
"The name of the package. It consists of vendor name and project name, "
"separated by `/`. Examples:"
msgstr ""
"The name of the package. It consists of vendor name and project name, "
"separated by `/`."

#. type: Bullet: '* '
#: ../doc/04-schema.md:36
#, fuzzy
msgid "monolog/monolog"
msgstr "monolog/monolog"

#. type: Bullet: '* '
#: ../doc/04-schema.md:36
#, fuzzy
msgid "igorw/event-source"
msgstr "igorw/event-source"

#. type: Plain text
#: ../doc/04-schema.md:39
msgid ""
"The name must be lowercase and consist of words separated by `-`, `.` or "
"`_`.  The complete name should match `^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9]"
"(([_.]?|-{0,2})[a-z0-9]+)*$`."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:41
#, fuzzy
msgid "The `name` property is required for published packages (libraries)."
msgstr "Required for published packages (libraries)."

#. type: Plain text
#: ../doc/04-schema.md:43
#, no-wrap
msgid "> **Note:** Before Composer version 2.0, a name could contain any character, including white spaces.\n"
msgstr ""

#. type: Title ###
#: ../doc/04-schema.md:44
#, fuzzy, no-wrap
msgid "description"
msgstr "description"

#. type: Plain text
#: ../doc/04-schema.md:47
#, fuzzy
msgid "A short description of the package. Usually this is one line long."
msgstr ""
"A short description of the package. Usually this is just one line long."

#. type: Plain text
#: ../doc/04-schema.md:49
#, fuzzy
msgid "Required for published packages (libraries)."
msgstr "Required for published packages (libraries)."

#. type: Title ###
#: ../doc/04-schema.md:50
#, fuzzy, no-wrap
msgid "version"
msgstr "version"

#. type: Plain text
#: ../doc/04-schema.md:54
#, fuzzy
msgid ""
"The version of the package. In most cases this is not required and should be "
"omitted (see below)."
msgstr ""
"The version of the package. In most cases this is not required and should be "
"omitted (see below)."

#. type: Plain text
#: ../doc/04-schema.md:58
#, fuzzy
msgid ""
"This must follow the format of `X.Y.Z` or `vX.Y.Z` with an optional suffix "
"of `-dev`, `-patch` (`-p`), `-alpha` (`-a`), `-beta` (`-b`) or `-RC`.  The "
"patch, alpha, beta and RC suffixes can also be followed by a number."
msgstr ""
"This must follow the format of `X.Y.Z` or `vX.Y.Z` with an optional suffix "
"of `-dev`, `-patch`, `-alpha`, `-beta` or `-RC`. The patch, alpha, beta and "
"RC suffixes can also be followed by a number."

#. type: Plain text
#: ../doc/04-schema.md:60 ../doc/04-schema.md:115 ../doc/04-schema.md:958
#, fuzzy
msgid "Examples:"
msgstr "Examples:"

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.2"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.1.0"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "0.2.5"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-dev"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-alpha3"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-beta2"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "1.0.0-RC5"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:70
msgid "v2.0.4-p1"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:74
#, fuzzy
msgid ""
"Optional if the package repository can infer the version from somewhere, "
"such as the VCS tag name in the VCS repository. In that case it is also "
"recommended to omit it."
msgstr ""
"Optional if the package repository can infer the version from somewhere, "
"such as the VCS tag name in the VCS repository. In that case it is also "
"recommended to omit it."

#. type: Plain text
#: ../doc/04-schema.md:78
#, fuzzy, no-wrap
msgid ""
"> **Note:** Packagist uses VCS repositories, so the statement above is very\n"
"> much true for Packagist as well. Specifying the version yourself will\n"
"> most likely end up creating problems at some point due to human error.\n"
msgstr ""
"> **Note:** Packagist uses VCS repositories, so the statement above is very\n"
"> much true for Packagist as well. Specifying the version yourself will\n"
"> most likely end up creating problems at some point due to human error.\n"

#. type: Title ###
#: ../doc/04-schema.md:79
#, fuzzy, no-wrap
msgid "type"
msgstr "type"

#. type: Plain text
#: ../doc/04-schema.md:82
#, fuzzy
msgid "The type of the package. It defaults to `library`."
msgstr "The type of the package. It defaults to `library`."

#. type: Plain text
#: ../doc/04-schema.md:88
#, fuzzy
msgid ""
"Package types are used for custom installation logic. If you have a package "
"that needs some special logic, you can define a custom type. This could be a "
"`symfony-bundle`, a `wordpress-plugin` or a `typo3-cms-extension`. These "
"types will all be specific to certain projects, and they will need to "
"provide an installer capable of installing packages of that type."
msgstr ""
"Package types are used for custom installation logic. If you have a package "
"that needs some special logic, you can define a custom type. This could be a "
"`symfony-bundle`, a `wordpress-plugin` or a `typo3-module`. These types will "
"all be specific to certain projects, and they will need to provide an "
"installer capable of installing packages of that type."

#. type: Plain text
#: ../doc/04-schema.md:90
#, fuzzy
msgid "Out of the box, Composer supports four types:"
msgstr "Out of the box, composer supports four types:"

#. type: Bullet: '- '
#: ../doc/04-schema.md:105
#, fuzzy
msgid "**library:** This is the default. It will copy the files to `vendor`."
msgstr ""
"**library:** This is the default. It will simply copy the files to `vendor`."

#. type: Bullet: '- '
#: ../doc/04-schema.md:105
#, fuzzy
msgid ""
"**project:** This denotes a project rather than a library. For example "
"application shells like the [Symfony standard edition](https://github.com/"
"symfony/symfony-standard), CMSs like the [SilverStripe installer](https://"
"github.com/silverstripe/silverstripe-installer)  or full fledged "
"applications distributed as packages. This can for example be used by IDEs "
"to provide listings of projects to initialize when creating a new workspace."
msgstr ""
"**project:** This denotes a project rather than a library. For example "
"application shells like the [Symfony standard edition](https://github.com/"
"symfony/symfony-standard), CMSs like the [SilverStripe installer](https://"
"github.com/silverstripe/silverstripe-installer)  or full fledged "
"applications distributed as packages. This can for example be used by IDEs "
"to provide listings of projects to initialize when creating a new workspace."

#. type: Bullet: '- '
#: ../doc/04-schema.md:105
#, fuzzy
msgid ""
"**metapackage:** An empty package that contains requirements and will "
"trigger their installation, but contains no files and will not write "
"anything to the filesystem. As such, it does not require a dist or source "
"key to be installable."
msgstr ""
"**metapackage:** An empty package that contains requirements and will "
"trigger their installation, but contains no files and will not write "
"anything to the filesystem. As such, it does not require a dist or source "
"key to be installable."

#. type: Bullet: '- '
#: ../doc/04-schema.md:105
#, fuzzy
msgid ""
"**composer-plugin:** A package of type `composer-plugin` may provide an "
"installer for other packages that have a custom type. Read more in the "
"[dedicated article](articles/custom-installers.md)."
msgstr ""
"**composer-plugin:** A package of type `composer-plugin` may provide an "
"installer for other packages that have a custom type. Read more in the "
"[dedicated article](articles/custom-installers.md)."

#. type: Plain text
#: ../doc/04-schema.md:108
#, fuzzy
msgid ""
"Only use a custom type if you need custom logic during installation. It is "
"recommended to omit this field and have it default to `library`."
msgstr ""
"Only use a custom type if you need custom logic during installation. It is "
"recommended to omit this field and have it just default to `library`."

#. type: Title ###
#: ../doc/04-schema.md:109
#, fuzzy, no-wrap
msgid "keywords"
msgstr "keywords"

#. type: Plain text
#: ../doc/04-schema.md:113
#, fuzzy
msgid ""
"An array of keywords that the package is related to. These can be used for "
"searching and filtering."
msgstr ""
"An array of keywords that the package is related to. These can be used for "
"searching and filtering."

#. type: Bullet: '- '
#: ../doc/04-schema.md:121
msgid "logging"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:121
msgid "events"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:121
msgid "database"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:121
msgid "redis"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:121
msgid "templating"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:125
#, no-wrap
msgid ""
"> **Note**: Some special keywords trigger `composer require` without the\n"
"> `--dev` option to prompt users if they would like to add these packages to\n"
"> `require-dev` instead of `require`. These are: `dev`, `testing`, `static analysis`.\n"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:127 ../doc/04-schema.md:133 ../doc/04-schema.md:139
#: ../doc/04-schema.md:147 ../doc/04-schema.md:264 ../doc/04-schema.md:297
#: ../doc/04-schema.md:732 ../doc/04-schema.md:763 ../doc/04-schema.md:899
#: ../doc/04-schema.md:908 ../doc/04-schema.md:950 ../doc/04-schema.md:966
#: ../doc/04-schema.md:1001
#, fuzzy
msgid "Optional."
msgstr "Optional."

#. type: Title ###
#: ../doc/04-schema.md:128
#, fuzzy, no-wrap
msgid "homepage"
msgstr "homepage"

#. type: Plain text
#: ../doc/04-schema.md:131
#, fuzzy
msgid "A URL to the website of the project."
msgstr "An URL to the website of the project."

#. type: Title ###
#: ../doc/04-schema.md:134
#, no-wrap
msgid "readme"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:137
msgid "A relative path to the readme document."
msgstr ""

#. type: Title ###
#: ../doc/04-schema.md:140
#, fuzzy, no-wrap
msgid "time"
msgstr "time"

#. type: Plain text
#: ../doc/04-schema.md:143
#, fuzzy
msgid "Release date of the version."
msgstr "Release date of the version."

#. type: Plain text
#: ../doc/04-schema.md:145
#, fuzzy
msgid "Must be in `YYYY-MM-DD` or `YYYY-MM-DD HH:MM:SS` format."
msgstr "Must be in `YYYY-MM-DD` or `YYYY-MM-DD HH:MM:SS` format."

#. type: Title ###
#: ../doc/04-schema.md:148
#, fuzzy, no-wrap
msgid "license"
msgstr "license"

#. type: Plain text
#: ../doc/04-schema.md:151
#, fuzzy
msgid ""
"The license of the package. This can be either a string or an array of "
"strings."
msgstr ""
"The license of the package. This can be either a string or an array of "
"strings."

#. type: Plain text
#: ../doc/04-schema.md:153
#, fuzzy
msgid ""
"The recommended notation for the most common licenses is (alphabetical):"
msgstr ""
"The recommended notation for the most common licenses is (alphabetical):"

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "Apache-2.0"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "BSD-2-Clause"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "BSD-3-Clause"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "BSD-4-Clause"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "GPL-2.0-only / GPL-2.0-or-later"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "GPL-3.0-only / GPL-3.0-or-later"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "LGPL-2.1-only / LGPL-2.1-or-later"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "LGPL-3.0-only / LGPL-3.0-or-later"
msgstr ""

#. type: Bullet: '- '
#: ../doc/04-schema.md:163
msgid "MIT"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:166
#, fuzzy
msgid ""
"Optional, but it is highly recommended to supply this. More identifiers are "
"listed at the [SPDX Open Source License Registry](https://spdx.org/"
"licenses/)."
msgstr ""
"Optional, but it is highly recommended to supply this. More identifiers are "
"listed at the [SPDX Open Source License Registry](http://www.spdx.org/"
"licenses/)."

#. type: Plain text
#: ../doc/04-schema.md:168
#, fuzzy, no-wrap
msgid "> **Note:** For closed-source software, you may use `\"proprietary\"` as the license identifier.\n"
msgstr "For closed-source software, you may use `\"proprietary\"` as the license identifier."

#. type: Plain text
#: ../doc/04-schema.md:170
#, fuzzy
msgid "An Example:"
msgstr "An Example:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:171
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"license\": \"MIT\"\n"
"}\n"
msgstr ""
"    {\n"
"        \"license\": \"MIT\"\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:179
#, fuzzy
msgid ""
"For a package, when there is a choice between licenses (\"disjunctive license"
"\"), multiple can be specified as an array."
msgstr ""
"For a package, when there is a choice between licenses (\"disjunctive license"
"\"), multiple can be specified as array."

#. type: Plain text
#: ../doc/04-schema.md:181
#, fuzzy
msgid "An Example for disjunctive licenses:"
msgstr "An Example for disjunctive licenses:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:182
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"license\": [\n"
"        \"LGPL-2.1-only\",\n"
"        \"GPL-3.0-or-later\"\n"
"    ]\n"
"}\n"
msgstr ""
"    {\n"
"        \"license\": [\n"
"           \"LGPL-2.1\",\n"
"           \"GPL-3.0+\"\n"
"        ]\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:192
#, fuzzy
msgid ""
"Alternatively they can be separated with \"or\" and enclosed in parentheses;"
msgstr ""
"Alternatively they can be separated with \"or\" and enclosed in parenthesis;"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:193
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"license\": \"(LGPL-2.1-only or GPL-3.0-or-later)\"\n"
"}\n"
msgstr ""
"    {\n"
"        \"license\": \"(LGPL-2.1 or GPL-3.0+)\"\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:201
#, fuzzy
msgid ""
"Similarly, when multiple licenses need to be applied (\"conjunctive license"
"\"), they should be separated with \"and\" and enclosed in parentheses."
msgstr ""
"Similarly when multiple licenses need to be applied (\"conjunctive license"
"\"), they should be separated with \"and\" and enclosed in parenthesis."

#. type: Title ###
#: ../doc/04-schema.md:202
#, fuzzy, no-wrap
msgid "authors"
msgstr "authors"

#. type: Plain text
#: ../doc/04-schema.md:205
#, fuzzy
msgid "The authors of the package. This is an array of objects."
msgstr "The authors of the package. This is an array of objects."

#. type: Plain text
#: ../doc/04-schema.md:207
#, fuzzy
msgid "Each author object can have following properties:"
msgstr "Each author object can have following properties:"

#. type: Bullet: '* '
#: ../doc/04-schema.md:212
#, fuzzy
msgid "**name:** The author's name. Usually their real name."
msgstr "**name:** The author's name. Usually his real name."

#. type: Bullet: '* '
#: ../doc/04-schema.md:212
#, fuzzy
msgid "**email:** The author's email address."
msgstr "**email:** The author's email address."

#. type: Bullet: '* '
#: ../doc/04-schema.md:212
#, fuzzy
msgid "**homepage:** URL to the author's website."
msgstr "**homepage:** An URL to the author's website."

#. type: Bullet: '* '
#: ../doc/04-schema.md:212
#, fuzzy
msgid ""
"**role:** The author's role in the project (e.g. developer or translator)"
msgstr ""
"**role:** The authors' role in the project (e.g. developer or translator)"

#. type: Plain text
#: ../doc/04-schema.md:214 ../doc/04-schema.md:253 ../doc/04-schema.md:276
#: ../doc/04-schema.md:986
#, fuzzy
msgid "An example:"
msgstr "An example:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:215
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"authors\": [\n"
"        {\n"
"            \"name\": \"Nils Adermann\",\n"
"            \"email\": \"naderman@naderman.de\",\n"
"            \"homepage\": \"https://www.naderman.de\",\n"
"            \"role\": \"Developer\"\n"
"        },\n"
"        {\n"
"            \"name\": \"Jordi Boggiano\",\n"
"            \"email\": \"j.boggiano@seld.be\",\n"
"            \"homepage\": \"https://seld.be\",\n"
"            \"role\": \"Developer\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"    {\n"
"        \"authors\": [\n"
"            {\n"
"                \"name\": \"Nils Adermann\",\n"
"                \"email\": \"naderman@naderman.de\",\n"
"                \"homepage\": \"http://www.naderman.de\",\n"
"                \"role\": \"Developer\"\n"
"            },\n"
"            {\n"
"                \"name\": \"Jordi Boggiano\",\n"
"                \"email\": \"j.boggiano@seld.be\",\n"
"                \"homepage\": \"http://seld.be\",\n"
"                \"role\": \"Developer\"\n"
"            }\n"
"        ]\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:235
#, fuzzy
msgid "Optional, but highly recommended."
msgstr "Optional, but highly recommended."

#. type: Title ###
#: ../doc/04-schema.md:236
#, fuzzy, no-wrap
msgid "support"
msgstr "support"

#. type: Plain text
#: ../doc/04-schema.md:239
#, fuzzy
msgid "Various information to get support about the project."
msgstr "Various information to get support about the project."

#. type: Plain text
#: ../doc/04-schema.md:241
#, fuzzy
msgid "Support information includes the following:"
msgstr "Support information includes the following:"

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**email:** Email address for support."
msgstr "**email:** Email address for support."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**issues:** URL to the issue tracker."
msgstr "**issues:** URL to the Issue Tracker."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**forum:** URL to the forum."
msgstr "**forum:** URL to the Forum."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**wiki:** URL to the wiki."
msgstr "**wiki:** URL to the Wiki."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**irc:** IRC channel for support, as irc://server/channel."
msgstr "**irc:** IRC channel for support, as irc://server/channel."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**source:** URL to browse or download the sources."
msgstr "**source:** URL to browse or download the sources."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**docs:** URL to the documentation."
msgstr "**forum:** URL to the Forum."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**rss:** URL to the RSS feed."
msgstr "**issues:** URL to the Issue Tracker."

#. type: Bullet: '* '
#: ../doc/04-schema.md:251
#, fuzzy
msgid "**chat:** URL to the chat channel."
msgstr "**homepage:** An URL to the author's website."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:254
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"support\": {\n"
"        \"email\": \"support@example.org\",\n"
"        \"irc\": \"irc://irc.freenode.org/composer\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"support\": {\n"
"            \"email\": \"support@example.org\",\n"
"            \"irc\": \"irc://irc.freenode.org/composer\"\n"
"        }\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:265
#, no-wrap
msgid "funding"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:269
msgid ""
"A list of URLs to provide funding to the package authors for maintenance and "
"development of new functionality."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:271
msgid "Each entry consists of the following"
msgstr ""

#. type: Bullet: '* '
#: ../doc/04-schema.md:274
msgid ""
"**type:** The type of funding, or the platform through which funding can be "
"provided, e.g. patreon, opencollective, tidelift or github."
msgstr ""

#. type: Bullet: '* '
#: ../doc/04-schema.md:274
msgid "**url:** URL to a website with details, and a way to fund the package."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:277
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"funding\": [\n"
"        {\n"
"            \"type\": \"patreon\",\n"
"            \"url\": \"https://www.patreon.com/phpdoctrine\"\n"
"        },\n"
"        {\n"
"            \"type\": \"tidelift\",\n"
"            \"url\": \"https://tidelift.com/subscription/pkg/packagist-doctrine_doctrine-bundle\"\n"
"        },\n"
"        {\n"
"            \"type\": \"other\",\n"
"            \"url\": \"https://www.doctrine-project.org/sponsorship.html\"\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"    {\n"
"        \"name\": \"acme/blog\",\n"
"        \"repositories\": [\n"
"            {\n"
"                \"type\": \"vcs\",\n"
"                \"url\": \"https://github.com/username/hello-world\"\n"
"            }\n"
"        ],\n"
"        \"require\": {\n"
"            \"acme/hello-world\": \"dev-master\"\n"
"        }\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:298
#, fuzzy, no-wrap
msgid "Package links"
msgstr "Package links"

#. type: Plain text
#: ../doc/04-schema.md:303
#, fuzzy
msgid ""
"All of the following take an object which maps package names to versions of "
"the package via version constraints. Read more about versions [here]"
"(articles/versions.md)."
msgstr ""
"All of the following take an object which maps package names to [version "
"constraints](01-basic-usage.md#package-versions)."

#. type: Plain text
#: ../doc/04-schema.md:305 ../doc/04-schema.md:324 ../doc/04-schema.md:338
#: ../doc/04-schema.md:360 ../doc/04-schema.md:385 ../doc/04-schema.md:472
#: ../doc/04-schema.md:509 ../doc/04-schema.md:556 ../doc/04-schema.md:616
#: ../doc/04-schema.md:628 ../doc/04-schema.md:644 ../doc/04-schema.md:675
#: ../doc/04-schema.md:703 ../doc/04-schema.md:724 ../doc/04-schema.md:815
#: ../doc/04-schema.md:920 ../doc/04-schema.md:937
#, fuzzy
msgid "Example:"
msgstr "Example:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:306
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"require\": {\n"
"            \"monolog/monolog\": \"1.0.*\"\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:315
#, fuzzy
msgid "All links are optional fields."
msgstr "All links are optional fields."

#. type: Plain text
#: ../doc/04-schema.md:322
#, fuzzy
msgid ""
"`require` and `require-dev` additionally support _stability flags_ ([root-"
"only](04-schema.md#root-package)).  They take the form "
"\"_constraint_@_stability flag_\".  These allow you to further restrict or "
"expand the stability of a package beyond the scope of the [minimum-stability]"
"(#minimum-stability) setting. You can apply them to a constraint, or apply "
"them to an empty _constraint_ if you want to allow unstable packages of a "
"dependency for example."
msgstr ""
"`require` and `require-dev` additionally support stability flags (root-"
"only).  These allow you to further restrict or expand the stability of a "
"package beyond the scope of the [minimum-stability](#minimum-stability) "
"setting. You can apply them to a constraint, or just apply them to an empty "
"constraint if you want to allow unstable packages of a dependency for "
"example."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:325
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"1.0.*@beta\",\n"
"        \"acme/foo\": \"@dev\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"require\": {\n"
"            \"monolog/monolog\": \"1.0.*@beta\",\n"
"            \"acme/foo\": \"@dev\"\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:336
#, fuzzy
msgid ""
"If one of your dependencies has a dependency on an unstable package you need "
"to explicitly require it as well, along with its sufficient stability flag."
msgstr ""
"If one of your dependencies has a dependency on an unstable package you need "
"to explicitly require it as well, along with its sufficient stability flag."

#. type: Plain text
#: ../doc/04-schema.md:342
msgid ""
"Assuming `doctrine/doctrine-fixtures-bundle` requires `\"doctrine/data-"
"fixtures\": \"dev-master\"` then inside the root composer.json you need to "
"add the second line below to allow dev releases for the `doctrine/data-"
"fixtures` package :"
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:343
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"doctrine/doctrine-fixtures-bundle\": \"dev-master\",\n"
"        \"doctrine/data-fixtures\": \"@dev\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"require\": {\n"
"            \"doctrine/doctrine-fixtures-bundle\": \"dev-master\",\n"
"            \"doctrine/data-fixtures\": \"@dev\"\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:358
#, fuzzy, no-wrap
msgid ""
"`require` and `require-dev` additionally support explicit references (i.e.\n"
"commit) for dev versions to make sure they are locked to a given state, even\n"
"when you run update. These only work if you explicitly require a dev version\n"
"and append the reference with `#<ref>`. This is also a\n"
"[root-only](04-schema.md#root-package) feature and will be ignored in\n"
"dependencies.\n"
msgstr ""
"`require` and `require-dev` additionally support explicit references (i.e.\n"
"commit) for dev versions to make sure they are locked to a given state, even\n"
"when you run update. These only work if you explicitly require a dev version\n"
"and append the reference with `#<ref>`.\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:361
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"monolog/monolog\": \"dev-master#2eb0c0978d290a1c45346a1955188929cb4e5db7\",\n"
"        \"acme/foo\": \"1.0.x-dev#abc123\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"require\": {\n"
"            \"monolog/monolog\": \"dev-master#2eb0c0978d290a1c45346a1955188929cb4e5db7\",\n"
"            \"acme/foo\": \"1.0.x-dev#abc123\"\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:376
#, no-wrap
msgid ""
"> **Note:** This feature has severe technical limitations, as the\n"
"> composer.json metadata will still be read from the branch name you specify\n"
"> before the hash. You should therefore only use this as a temporary solution\n"
"> during development to remediate transient issues, until you can switch to\n"
"> tagged releases. The Composer team does not actively support this feature\n"
"> and will not accept bug reports related to it.\n"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:380
#, fuzzy
msgid ""
"It is also possible to inline-alias a package constraint so that it matches "
"a constraint that it otherwise would not. For more information [see the "
"aliases article](articles/aliases.md)."
msgstr ""
"It is also possible to inline-alias a package constraint so that it matches "
"a constraint that it otherwise would not. For more information [see the "
"aliases article](articles/aliases.md)."

#. type: Plain text
#: ../doc/04-schema.md:383
msgid ""
"`require` and `require-dev` also support references to specific PHP versions "
"and PHP extensions your project needs to run successfully."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:386
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"require\": {\n"
"        \"php\": \">=7.4\",\n"
"        \"ext-mbstring\": \"*\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"require\": {\n"
"            \"monolog/monolog\": \"1.2.*\"\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:405
#, no-wrap
msgid ""
"> **Note:** It is important to list PHP extensions your project requires.\n"
"> Not all PHP installations are created equal: some may miss extensions you\n"
"> may consider as standard (such as `ext-mysqli` which is not installed by\n"
"> default in Fedora/CentOS minimal installation systems). Failure to list\n"
"> required PHP extensions may lead to a bad user experience: Composer will\n"
"> install your package without any errors but it will then fail at run-time.\n"
"> The `composer show --platform` command lists all PHP extensions available on\n"
"> your system. You may use it to help you compile the list of extensions you\n"
"> use and require. Alternatively you may use third party tools to analyze\n"
"> your project for the list of extensions used.\n"
msgstr ""

#. type: Title ####
#: ../doc/04-schema.md:406
#, fuzzy, no-wrap
msgid "require"
msgstr "require"

#. type: Plain text
#: ../doc/04-schema.md:410
#, fuzzy
msgid ""
"Map of packages required by this package. The package will not be installed "
"unless those requirements can be met."
msgstr ""
"Lists packages required by this package. The package will not be installed "
"unless those requirements can be met."

#. type: Title ####
#: ../doc/04-schema.md:411
#, fuzzy, no-wrap
msgid "require-dev <span>([root-only](04-schema.md#root-package))</span>"
msgstr "require-dev <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:417
#, fuzzy
msgid ""
"Map of packages required for developing this package, or running tests, etc. "
"The dev requirements of the root package are installed by default.  Both "
"`install` or `update` support the `--no-dev` option that prevents dev "
"dependencies from being installed."
msgstr ""
"Lists packages required for developing this package, or running tests, etc. "
"The dev requirements of the root package are installed by default.  Both "
"`install` or `update` support the `--no-dev` option that prevents dev "
"dependencies from being installed."

#. type: Title ####
#: ../doc/04-schema.md:418
#, fuzzy, no-wrap
msgid "conflict"
msgstr "conflict"

#. type: Plain text
#: ../doc/04-schema.md:422
#, fuzzy
msgid ""
"Map of packages that conflict with this version of this package. They will "
"not be allowed to be installed together with your package."
msgstr ""
"Lists packages that conflict with this version of this package. They will "
"not be allowed to be installed together with your package."

#. type: Plain text
#: ../doc/04-schema.md:427
#, fuzzy, no-wrap
msgid ""
"Note that when specifying ranges like `<1.0 >=1.1` in a `conflict` link,\n"
"this will state a conflict with all versions that are less than 1.0 *and* equal\n"
"or newer than 1.1 at the same time, which is probably not what you want. You\n"
"probably want to go for `<1.0 || >=1.1` in this case.\n"
msgstr ""
"Note that when specifying ranges like `<1.0, >= 1.1` in a `conflict` link,\n"
"this will state a conflict with all versions that are less than 1.0 *and* equal\n"
"or newer than 1.1 at the same time, which is probably not what you want. You\n"
"probably want to go for `<1.0 | >= 1.1` in this case.\n"

#. type: Title ####
#: ../doc/04-schema.md:428
#, fuzzy, no-wrap
msgid "replace"
msgstr "replace"

#. type: Plain text
#: ../doc/04-schema.md:434
#, fuzzy
msgid ""
"Map of packages that are replaced by this package. This allows you to fork a "
"package, publish it under a different name with its own version numbers, "
"while packages requiring the original package continue to work with your "
"fork because it replaces the original package."
msgstr ""
"Lists packages that are replaced by this package. This allows you to fork a "
"package, publish it under a different name with its own version numbers, "
"while packages requiring the original package continue to work with your "
"fork because it replaces the original package."

#. type: Plain text
#: ../doc/04-schema.md:440
#, fuzzy
msgid ""
"This is also useful for packages that contain sub-packages, for example the "
"main symfony/symfony package contains all the Symfony Components which are "
"also available as individual packages. If you require the main package it "
"will automatically fulfill any requirement of one of the individual "
"components, since it replaces them."
msgstr ""
"This is also useful for packages that contain sub-packages, for example the "
"main symfony/symfony package contains all the Symfony Components which are "
"also available as individual packages. If you require the main package it "
"will automatically fulfill any requirement of one of the individual "
"components, since it replaces them."

#. type: Plain text
#: ../doc/04-schema.md:445
#, fuzzy
msgid ""
"Caution is advised when using replace for the sub-package purpose explained "
"above. You should then typically only replace using `self.version` as a "
"version constraint, to make sure the main package only replaces the sub-"
"packages of that exact version, and not any other version, which would be "
"incorrect."
msgstr ""
"Caution is advised when using replace for the sub-package purpose explained "
"above. You should then typically only replace using `self.version` as a "
"version constraint, to make sure the main package only replaces the sub-"
"packages of that exact version, and not any other version, which would be "
"incorrect."

#. type: Title ####
#: ../doc/04-schema.md:446
#, fuzzy, no-wrap
msgid "provide"
msgstr "provide"

#. type: Plain text
#: ../doc/04-schema.md:453
#, fuzzy
msgid ""
"Map of packages that are provided by this package. This is mostly useful for "
"implementations of common interfaces. A package could depend on some virtual "
"package e.g. `psr/logger-implementation`, any library that implements this "
"logger interface would list it in `provide`. Implementors can then be [found "
"on Packagist.org](https://packagist.org/providers/psr/log-implementation)."
msgstr ""
"List of other packages that are provided by this package. This is mostly "
"useful for common interfaces. A package could depend on some virtual "
"`logger` package, any library that implements this logger interface would "
"simply list it in `provide`."

#. type: Plain text
#: ../doc/04-schema.md:460
msgid ""
"Using `provide` with the name of an actual package rather than a virtual one "
"implies that the code of that package is also shipped, in which case "
"`replace` is generally a better choice. A common convention for packages "
"providing an interface and relying on other packages to provide an "
"implementation (for instance the PSR interfaces) is to use a `-"
"implementation` suffix for the name of the virtual package corresponding to "
"the interface package."
msgstr ""

#. type: Title ####
#: ../doc/04-schema.md:461
#, fuzzy, no-wrap
msgid "suggest"
msgstr "suggest"

#. type: Plain text
#: ../doc/04-schema.md:467
#, fuzzy
msgid ""
"Suggested packages that can enhance or work well with this package. These "
"are informational and are displayed after the package is installed, to give "
"your users a hint that they could add more packages, even though they are "
"not strictly required."
msgstr ""
"Suggested packages that can enhance or work well with this package. These "
"are just informational and are displayed after the package is installed, to "
"give your users a hint that they could add more packages, even though they "
"are not strictly required."

#. type: Plain text
#: ../doc/04-schema.md:470
#, fuzzy
msgid ""
"The format is like package links above, except that the values are free text "
"and not version constraints."
msgstr ""
"The format is like package links above, except that the values are free text "
"and not version constraints."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:473
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"suggest\": {\n"
"        \"monolog/monolog\": \"Allows more advanced logging of the application flow\",\n"
"        \"ext-xml\": \"Needed to support XML format in class Foo\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"suggest\": {\n"
"            \"monolog/monolog\": \"Allows more advanced logging of the application flow\"\n"
"        }\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:482
#, fuzzy, no-wrap
msgid "autoload"
msgstr "autoload"

#. type: Plain text
#: ../doc/04-schema.md:485
#, fuzzy
msgid "Autoload mapping for a PHP autoloader."
msgstr "Autoload mapping for a PHP autoloader."

#. type: Plain text
#: ../doc/04-schema.md:488
msgid ""
"[`PSR-4`](https://www.php-fig.org/psr/psr-4/) and [`PSR-0`](http://www.php-"
"fig.org/psr/psr-0/)  autoloading, `classmap` generation and `files` includes "
"are supported."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:491
msgid ""
"PSR-4 is the recommended way since it offers greater ease of use (no need to "
"regenerate the autoloader when you add classes)."
msgstr ""

#. type: Title ####
#: ../doc/04-schema.md:492
#, fuzzy, no-wrap
msgid "PSR-4"
msgstr "PSR-0"

#. type: Plain text
#: ../doc/04-schema.md:499
msgid ""
"Under the `psr-4` key you define a mapping from namespaces to paths, "
"relative to the package root. When autoloading a class like `Foo\\\\Bar\\"
"\\Baz` a namespace prefix `Foo\\\\` pointing to a directory `src/` means "
"that the autoloader will look for a file named `src/Bar/Baz.php` and include "
"it if present. Note that as opposed to the older PSR-0 style, the prefix "
"(`Foo\\\\`) is **not** present in the file path."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:503
#, fuzzy
msgid ""
"Namespace prefixes must end in `\\\\` to avoid conflicts between similar "
"prefixes.  For example `Foo` would match classes in the `FooBar` namespace "
"so the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` "
"are distinct."
msgstr ""
"Please note namespace declarations should end in `\\\\` to make sure the "
"autoloader responds exactly. For example `Foo` would match in `FooBar` so "
"the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are "
"distinct."

#. type: Plain text
#: ../doc/04-schema.md:507
#, fuzzy, no-wrap
msgid ""
"The PSR-4 references are all combined, during install/update, into a single\n"
"key => value array which may be found in the generated file\n"
"`vendor/composer/autoload_psr4.php`.\n"
msgstr ""
"The PSR-0 references are all combined, during install/update, into a single key => value\n"
"array which may be found in the generated file `vendor/composer/autoload_namespaces.php`.\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:510
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": {\n"
"                \"Monolog\\\\\": \"src/\",\n"
"                \"Vendor\\\\Namespace\\\\\": \"src/\",\n"
"                \"Vendor_Namespace_\": \"src/\"\n"
"            }\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:523 ../doc/04-schema.md:571
#, fuzzy
msgid ""
"If you need to search for a same prefix in multiple directories, you can "
"specify them as an array as such:"
msgstr ""
"If you need to search for a same prefix in multiple directories, you can "
"specify them as an array as such:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:524
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:534
#, fuzzy
msgid ""
"If you want to have a fallback directory where any namespace will be looked "
"for, you can use an empty prefix like:"
msgstr ""
"If you want to have a fallback directory where any namespace can be, you can "
"use an empty prefix like:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:535
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"\": \"src/\" }\n"
"        }\n"
"    }\n"

#. type: Title ####
#: ../doc/04-schema.md:543
#, fuzzy, no-wrap
msgid "PSR-0"
msgstr "PSR-0"

#. type: Plain text
#: ../doc/04-schema.md:547
#, fuzzy
msgid ""
"Under the `psr-0` key you define a mapping from namespaces to paths, "
"relative to the package root. Note that this also supports the PEAR-style "
"non-namespaced convention."
msgstr ""
"Under the `psr-0` key you define a mapping from namespaces to paths, "
"relative to the package root. Note that this also supports the PEAR-style "
"non-namespaced convention."

#. type: Plain text
#: ../doc/04-schema.md:551
#, fuzzy
msgid ""
"Please note namespace declarations should end in `\\\\` to make sure the "
"autoloader responds exactly. For example `Foo` would match in `FooBar` so "
"the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are "
"distinct."
msgstr ""
"Please note namespace declarations should end in `\\\\` to make sure the "
"autoloader responds exactly. For example `Foo` would match in `FooBar` so "
"the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are "
"distinct."

#. type: Plain text
#: ../doc/04-schema.md:554
#, fuzzy, no-wrap
msgid ""
"The PSR-0 references are all combined, during install/update, into a single key => value\n"
"array which may be found in the generated file `vendor/composer/autoload_namespaces.php`.\n"
msgstr ""
"The PSR-0 references are all combined, during install/update, into a single key => value\n"
"array which may be found in the generated file `vendor/composer/autoload_namespaces.php`.\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:557
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": {\n"
"            \"Monolog\\\\\": \"src/\",\n"
"            \"Vendor\\\\Namespace\\\\\": \"src/\",\n"
"            \"Vendor_Namespace_\": \"src/\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": {\n"
"                \"Monolog\\\\\": \"src/\",\n"
"                \"Vendor\\\\Namespace\\\\\": \"src/\",\n"
"                \"Vendor_Namespace_\": \"src/\"\n"
"            }\n"
"        }\n"
"    }\n"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:572
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"Monolog\\\\\": [\"src/\", \"lib/\"] }\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:584
#, fuzzy
msgid ""
"The PSR-0 style is not limited to namespace declarations only but may be "
"specified right down to the class level. This can be useful for libraries "
"with only one class in the global namespace. If the php source file is also "
"located in the root of the package, for example, it may be declared like "
"this:"
msgstr ""
"The PSR-0 style is not limited to namespace declarations only but may be "
"specified right down to the class level. This can be useful for libraries "
"with only one class in the global namespace. If the php source file is also "
"located in the root of the package, for example, it may be declared like "
"this:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:585
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"UniqueGlobalClass\": \"\" }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"UniqueGlobalClass\": \"\" }\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:595
#, fuzzy
msgid ""
"If you want to have a fallback directory where any namespace can be, you can "
"use an empty prefix like:"
msgstr ""
"If you want to have a fallback directory where any namespace can be, you can "
"use an empty prefix like:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:596
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"\": \"src/\" }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"\": \"src/\" }\n"
"        }\n"
"    }\n"

#. type: Title ####
#: ../doc/04-schema.md:604
#, fuzzy, no-wrap
msgid "Classmap"
msgstr "Classmap"

#. type: Plain text
#: ../doc/04-schema.md:610
#, fuzzy, no-wrap
msgid ""
"The `classmap` references are all combined, during install/update, into a single\n"
"key => value array which may be found in the generated file\n"
"`vendor/composer/autoload_classmap.php`. This map is built by scanning for\n"
"classes in all `.php` and `.inc` files in the given directories/files.\n"
msgstr ""
"The `classmap` references are all combined, during install/update, into a single\n"
"key => value array which may be found in the generated file\n"
"`vendor/composer/autoload_classmap.php`. This map is built by scanning for\n"
"classes in all `.php` and `.inc` files in the given directories/files.\n"

#. type: Plain text
#: ../doc/04-schema.md:614
#, fuzzy
msgid ""
"You can use the classmap generation support to define autoloading for all "
"libraries that do not follow PSR-0/4. To configure this you specify all "
"directories or files to search for classes."
msgstr ""
"You can use the classmap generation support to define autoloading for all "
"libraries that do not follow PSR-0. To configure this you specify all "
"directories or files to search for classes."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:617
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:626
msgid ""
"Wildcards (`*`) are also supported in a classmap paths, and expand to match "
"any directory name:"
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:629
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"classmap\": [\"src/addons/*/lib/\", \"3rd-party/*\", \"Something.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"        }\n"
"    }\n"

#. type: Title ####
#: ../doc/04-schema.md:637
#, fuzzy, no-wrap
msgid "Files"
msgstr "Files"

#. type: Plain text
#: ../doc/04-schema.md:642
#, fuzzy
msgid ""
"If you want to require certain files explicitly on every request then you "
"can use the `files` autoloading mechanism. This is useful if your package "
"includes PHP functions that cannot be autoloaded by PHP."
msgstr ""
"If you want to require certain files explicitly on every request then you "
"can use the 'files' autoloading mechanism. This is useful if your package "
"includes PHP functions that cannot be autoloaded by PHP."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:645
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"files\": [\"src/MyLibrary/functions.php\"]\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"files\": [\"src/MyLibrary/functions.php\"]\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:657
msgid ""
"Files autoload rules are included whenever `vendor/autoload.php` is "
"included, right after the autoloader is registered. The order of inclusion "
"depends on package dependencies so that if package A depends on B, files in "
"package B will be included first to ensure package B is fully initialized "
"and ready to be used when files from package A are included."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:659
msgid ""
"If two packages have the same amount of dependents or no dependencies, the "
"order is alphabetical."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:663
msgid ""
"Files from the root package are always loaded last, and you cannot use files "
"autoloading yourself to override functions from your dependencies. If you "
"want to achieve that we recommend you include your own functions *before* "
"including Composer's `vendor/autoload.php`."
msgstr ""

#. type: Title ####
#: ../doc/04-schema.md:664
#, no-wrap
msgid "Exclude files from classmaps"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:669
msgid ""
"If you want to exclude some files or folders from the classmap you can use "
"the `exclude-from-classmap` property.  This might be useful to exclude test "
"classes in your live environment, for example, as those will be skipped from "
"the classmap even when building an optimized autoloader."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:673
msgid ""
"The classmap generator will ignore all files in the paths configured here. "
"The paths are absolute from the package root directory (i.e. composer.json "
"location), and support `*` to match anything but a slash, and `**` to match "
"anything. `**` is implicitly added to the end of the paths."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:676
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"exclude-from-classmap\": [\"/Tests/\", \"/test/\", \"/tests/\"]\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"classmap\": [\"src/\", \"lib/\", \"Something.php\"]\n"
"        }\n"
"    }\n"

#. type: Title ####
#: ../doc/04-schema.md:684
#, no-wrap
msgid "Optimizing the autoloader"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:690
msgid ""
"The autoloader can have quite a substantial impact on your request time "
"(50-100ms per request in large frameworks using a lot of classes). See the "
"[article about optimizing the autoloader](articles/autoloader-optimization."
"md)  for more details on how to reduce this impact."
msgstr ""

#. type: Title ###
#: ../doc/04-schema.md:691
#, no-wrap
msgid "autoload-dev <span>([root-only](04-schema.md#root-package))</span>"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:694
msgid "This section allows defining autoload rules for development purposes."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:698
msgid ""
"Classes needed to run the test suite should not be included in the main "
"autoload rules to avoid polluting the autoloader in production and when "
"other people use your package as a dependency."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:701
msgid ""
"Therefore, it is a good idea to rely on a dedicated path for your unit tests "
"and to add it within the autoload-dev section."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:704
#, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\\": \"src/\" }\n"
"    },\n"
"    \"autoload-dev\": {\n"
"        \"psr-4\": { \"MyLibrary\\\\Tests\\\\\": \"tests/\" }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ###
#: ../doc/04-schema.md:715
#, fuzzy, no-wrap
msgid "include-path"
msgstr "include-path"

#. type: Plain text
#: ../doc/04-schema.md:720
#, fuzzy, no-wrap
msgid ""
"> **DEPRECATED**: This is only present to support legacy projects, and all new code\n"
"> should preferably use autoloading. As such it is a deprecated practice, but the\n"
"> feature itself will not likely disappear from Composer.\n"
msgstr ""
"> **DEPRECATED**: This is only present to support legacy projects, and all new code\n"
"> should preferably use autoloading. As such it is a deprecated practice, but the\n"
"> feature itself will not likely disappear from Composer.\n"

#. type: Plain text
#: ../doc/04-schema.md:722
#, fuzzy
msgid "A list of paths which should get appended to PHP's `include_path`."
msgstr "A list of paths which should get appended to PHP's `include_path`."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:725
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"include-path\": [\"lib/\"]\n"
"}\n"
msgstr ""
"    {\n"
"        \"include-path\": [\"lib/\"]\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:733
#, fuzzy, no-wrap
msgid "target-dir"
msgstr "target-dir"

#. type: Plain text
#: ../doc/04-schema.md:738
#, fuzzy, no-wrap
msgid ""
"> **DEPRECATED**: This is only present to support legacy PSR-0 style autoloading,\n"
"> and all new code should preferably use PSR-4 without target-dir and projects\n"
"> using PSR-0 with PHP namespaces are encouraged to migrate to PSR-4 instead.\n"
msgstr ""
"> **DEPRECATED**: This is only present to support legacy projects, and all new code\n"
"> should preferably use autoloading. As such it is a deprecated practice, but the\n"
"> feature itself will not likely disappear from Composer.\n"

#. type: Plain text
#: ../doc/04-schema.md:740
#, fuzzy
msgid "Defines the installation target."
msgstr "Defines the installation target."

#. type: Plain text
#: ../doc/04-schema.md:743
#, fuzzy
msgid ""
"In case the package root is below the namespace declaration you cannot "
"autoload properly. `target-dir` solves this problem."
msgstr ""
"In case the package root is below the namespace declaration you cannot "
"autoload properly. `target-dir` solves this problem."

#. type: Plain text
#: ../doc/04-schema.md:750
#, fuzzy
msgid ""
"An example is Symfony. There are individual packages for the components. The "
"Yaml component is under `Symfony\\Component\\Yaml`. The package root is that "
"`Yaml` directory. To make autoloading possible, we need to make sure that it "
"is not installed into `vendor/symfony/yaml`, but instead into `vendor/"
"symfony/yaml/Symfony/Component/Yaml`, so that the autoloader can load it "
"from `vendor/symfony/yaml`."
msgstr ""
"An example is Symfony. There are individual packages for the components. The "
"Yaml component is under `Symfony\\Component\\Yaml`. The package root is that "
"`Yaml` directory. To make autoloading possible, we need to make sure that it "
"is not installed into `vendor/symfony/yaml`, but instead into `vendor/"
"symfony/yaml/Symfony/Component/Yaml`, so that the autoloader can load it "
"from `vendor/symfony/yaml`."

#. type: Plain text
#: ../doc/04-schema.md:752
#, fuzzy
msgid "To do that, `autoload` and `target-dir` are defined as follows:"
msgstr "To do that, `autoload` and `target-dir` are defined as follows:"

#. type: Fenced code block (json)
#: ../doc/04-schema.md:753
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-0\": { \"Symfony\\\\Component\\\\Yaml\\\\\": \"\" }\n"
"    },\n"
"    \"target-dir\": \"Symfony/Component/Yaml\"\n"
"}\n"
msgstr ""
"    {\n"
"        \"autoload\": {\n"
"            \"psr-0\": { \"Symfony\\\\Component\\\\Yaml\\\\\": \"\" }\n"
"        },\n"
"        \"target-dir\": \"Symfony/Component/Yaml\"\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:764
#, fuzzy, no-wrap
msgid "minimum-stability <span>([root-only](04-schema.md#root-package))</span>"
msgstr "minimum-stability <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:769
#, fuzzy
msgid ""
"This defines the default behavior for filtering packages by stability. This "
"defaults to `stable`, so if you rely on a `dev` package, you should specify "
"it in your file to avoid surprises."
msgstr ""
"This defines the default behavior for filtering packages by stability. This "
"defaults to `stable`, so if you rely on a `dev` package, you should specify "
"it in your file to avoid surprises."

#. type: Plain text
#: ../doc/04-schema.md:775
#, fuzzy
msgid ""
"All versions of each package are checked for stability, and those that are "
"less stable than the `minimum-stability` setting will be ignored when "
"resolving your project dependencies. (Note that you can also specify "
"stability requirements on a per-package basis using stability flags in the "
"version constraints that you specify in a `require` block (see [package "
"links](#package-links) for more details)."
msgstr ""
"All versions of each package are checked for stability, and those that are "
"less stable than the `minimum-stability` setting will be ignored when "
"resolving your project dependencies. Specific changes to the stability "
"requirements of a given package can be done in `require` or `require-dev` "
"(see [package links](#package-links))."

#. type: Plain text
#: ../doc/04-schema.md:778
#, fuzzy
msgid ""
"Available options (in order of stability) are `dev`, `alpha`, `beta`, `RC`, "
"and `stable`."
msgstr ""
"Available options (in order of stability) are `dev`, `alpha`, `beta`, `RC`, "
"and `stable`."

#. type: Title ###
#: ../doc/04-schema.md:779
#, fuzzy, no-wrap
msgid "prefer-stable <span>([root-only](04-schema.md#root-package))</span>"
msgstr "prefer-stable <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:785
#, fuzzy
msgid ""
"When this is enabled, Composer will prefer more stable packages over "
"unstable ones when finding compatible stable packages is possible. If you "
"require a dev version or only alphas are available for a package, those will "
"still be selected granted that the minimum-stability allows for it."
msgstr ""
"When this is enabled, Composer will prefer more stable packages over "
"unstable ones when finding compatible stable packages is possible. If you "
"require a dev version or only alphas are available for a package, those will "
"still be selected granted that the minimum-stability allows for it."

#. type: Plain text
#: ../doc/04-schema.md:787
#, fuzzy
msgid "Use `\"prefer-stable\": true` to enable."
msgstr "Use `\"prefer-stable\": true` to enable."

#. type: Title ###
#: ../doc/04-schema.md:788
#, fuzzy, no-wrap
msgid "repositories <span>([root-only](04-schema.md#root-package))</span>"
msgstr "repositories <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:791
#, fuzzy
msgid "Custom package repositories to use."
msgstr "Custom package repositories to use."

#. type: Plain text
#: ../doc/04-schema.md:794
#, fuzzy
msgid ""
"By default Composer only uses the packagist repository. By specifying "
"repositories you can get packages from elsewhere."
msgstr ""
"By default composer just uses the packagist repository. By specifying "
"repositories you can get packages from elsewhere."

#. type: Plain text
#: ../doc/04-schema.md:798
#, fuzzy
msgid ""
"Repositories are not resolved recursively. You can only add them to your "
"main `composer.json`. Repository declarations of dependencies' `composer."
"json`s are ignored."
msgstr ""
"Repositories are not resolved recursively. You can only add them to your "
"main `composer.json`. Repository declarations of dependencies' `composer."
"json`s are ignored."

#. type: Plain text
#: ../doc/04-schema.md:800
#, fuzzy
msgid "The following repository types are supported:"
msgstr "The following repository types are supported:"

#. type: Bullet: '* '
#: ../doc/04-schema.md:811
#, fuzzy
msgid ""
"**composer:** A Composer repository is a `packages.json` file served via the "
"network (HTTP, FTP, SSH), that contains a list of `composer.json` objects "
"with additional `dist` and/or `source` information. The `packages.json` file "
"is loaded using a PHP stream. You can set extra options on that stream using "
"the `options` parameter."
msgstr ""
"**composer:** A composer repository is simply a `packages.json` file served "
"via the network (HTTP, FTP, SSH), that contains a list of `composer.json` "
"objects with additional `dist` and/or `source` information. The `packages."
"json` file is loaded using a PHP stream. You can set extra options on that "
"stream using the `options` parameter."

#. type: Bullet: '* '
#: ../doc/04-schema.md:811
#, fuzzy
msgid ""
"**vcs:** The version control system repository can fetch packages from git, "
"svn, fossil and hg repositories."
msgstr ""
"**vcs:** The version control system repository can fetch packages from git, "
"svn and hg repositories."

#. type: Bullet: '* '
#: ../doc/04-schema.md:811
#, fuzzy
msgid ""
"**package:** If you depend on a project that does not have any support for "
"Composer whatsoever you can define the package inline using a `package` "
"repository. You basically inline the `composer.json` object."
msgstr ""
"**package:** If you depend on a project that does not have any support for "
"composer whatsoever you can define the package inline using a `package` "
"repository. You basically just inline the `composer.json` object."

#. type: Plain text
#: ../doc/04-schema.md:813
#, fuzzy
msgid ""
"For more information on any of these, see [Repositories](05-repositories.md)."
msgstr ""
"For more information on any of these, see [Repositories](05-repositories.md)."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:816
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"repositories\": [\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.example.com\"\n"
"        },\n"
"        {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"https://packages.example.com\",\n"
"            \"options\": {\n"
"                \"ssl\": {\n"
"                    \"verify_peer\": \"true\"\n"
"                }\n"
"            }\n"
"        },\n"
"        {\n"
"            \"type\": \"vcs\",\n"
"            \"url\": \"https://github.com/Seldaek/monolog\"\n"
"        },\n"
"        {\n"
"            \"type\": \"package\",\n"
"            \"package\": {\n"
"                \"name\": \"smarty/smarty\",\n"
"                \"version\": \"3.1.7\",\n"
"                \"dist\": {\n"
"                    \"url\": \"https://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                    \"type\": \"zip\"\n"
"                },\n"
"                \"source\": {\n"
"                    \"url\": \"https://smarty-php.googlecode.com/svn/\",\n"
"                    \"type\": \"svn\",\n"
"                    \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                }\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""
"    {\n"
"        \"repositories\": [\n"
"            {\n"
"                \"type\": \"composer\",\n"
"                \"url\": \"http://packages.example.com\"\n"
"            },\n"
"            {\n"
"                \"type\": \"composer\",\n"
"                \"url\": \"https://packages.example.com\",\n"
"                \"options\": {\n"
"                    \"ssl\": {\n"
"                        \"verify_peer\": \"true\"\n"
"                    }\n"
"                }\n"
"            },\n"
"            {\n"
"                \"type\": \"vcs\",\n"
"                \"url\": \"https://github.com/Seldaek/monolog\"\n"
"            },\n"
"            {\n"
"                \"type\": \"pear\",\n"
"                \"url\": \"http://pear2.php.net\"\n"
"            },\n"
"            {\n"
"                \"type\": \"package\",\n"
"                \"package\": {\n"
"                    \"name\": \"smarty/smarty\",\n"
"                    \"version\": \"3.1.7\",\n"
"                    \"dist\": {\n"
"                        \"url\": \"http://www.smarty.net/files/Smarty-3.1.7.zip\",\n"
"                        \"type\": \"zip\"\n"
"                    },\n"
"                    \"source\": {\n"
"                        \"url\": \"http://smarty-php.googlecode.com/svn/\",\n"
"                        \"type\": \"svn\",\n"
"                        \"reference\": \"tags/Smarty_3_1_7/distribution/\"\n"
"                    }\n"
"                }\n"
"            }\n"
"        ]\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:860
#, fuzzy, no-wrap
msgid ""
"> **Note:** Order is significant here. When looking for a package, Composer\n"
"will look from the first to the last repository, and pick the first match.\n"
"By default Packagist is added last which means that custom repositories can\n"
"override packages from it.\n"
msgstr ""
"> **Note:** Order is significant here. When looking for a package, Composer\n"
"will look from the first to the last repository, and pick the first match.\n"
"By default Packagist is added last which means that custom repositories can\n"
"override packages from it.\n"

#. type: Plain text
#: ../doc/04-schema.md:863
msgid ""
"Using JSON object notation is also possible. However, JSON key/value pairs "
"are to be considered unordered so consistent behaviour cannot be guaranteed."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:864
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"repositories\": {\n"
"        \"foo\": {\n"
"            \"type\": \"composer\",\n"
"            \"url\": \"http://packages.foo.com\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"support\": {\n"
"            \"email\": \"support@example.org\",\n"
"            \"irc\": \"irc://irc.freenode.org/composer\"\n"
"        }\n"
"    }\n"

#. type: Title ###
#: ../doc/04-schema.md:875
#, fuzzy, no-wrap
msgid "config <span>([root-only](04-schema.md#root-package))</span>"
msgstr "config <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:879
#, fuzzy
msgid ""
"A set of configuration options. It is only used for projects. See [Config]"
"(06-config.md) for a description of each individual option."
msgstr "A set of configuration options. It is only used for projects."

#. type: Title ###
#: ../doc/04-schema.md:880
#, fuzzy, no-wrap
msgid "scripts <span>([root-only](04-schema.md#root-package))</span>"
msgstr "scripts <span>(root-only)</span>"

#. type: Plain text
#: ../doc/04-schema.md:884
#, fuzzy
msgid ""
"Composer allows you to hook into various parts of the installation process "
"through the use of scripts."
msgstr ""
"Composer allows you to hook into various parts of the installation process "
"through the use of scripts."

#. type: Plain text
#: ../doc/04-schema.md:886
#, fuzzy
msgid "See [Scripts](articles/scripts.md) for events details and examples."
msgstr "See [Scripts](articles/scripts.md) for events details and examples."

#. type: Title ###
#: ../doc/04-schema.md:887
#, fuzzy, no-wrap
msgid "extra"
msgstr "extra"

#. type: Plain text
#: ../doc/04-schema.md:890
#, fuzzy
msgid "Arbitrary extra data for consumption by `scripts`."
msgstr "Arbitrary extra data for consumption by `scripts`."

#. type: Plain text
#: ../doc/04-schema.md:893
#, fuzzy
msgid ""
"This can be virtually anything. To access it from within a script event "
"handler, you can do:"
msgstr ""
"This can be virtually anything. To access it from within a script event "
"handler, you can do:"

#. type: Fenced code block (php)
#: ../doc/04-schema.md:894
#, fuzzy, no-wrap
msgid "$extra = $event->getComposer()->getPackage()->getExtra();\n"
msgstr "    $extra = $event->getComposer()->getPackage()->getExtra();\n"

#. type: Title ###
#: ../doc/04-schema.md:900
#, fuzzy, no-wrap
msgid "bin"
msgstr "bin"

#. type: Plain text
#: ../doc/04-schema.md:904
#, fuzzy
msgid ""
"A set of files that should be treated as binaries and made available into "
"the `bin-dir` (from config)."
msgstr ""
"A set of files that should be treated as binaries and symlinked into the "
"`bin-dir` (from config)."

#. type: Plain text
#: ../doc/04-schema.md:906
#, fuzzy
msgid "See [Vendor Binaries](articles/vendor-binaries.md) for more details."
msgstr "See [Vendor Binaries](articles/vendor-binaries.md) for more details."

#. type: Plain text
#: ../doc/04-schema.md:912
#, fuzzy
msgid "A set of options for creating package archives."
msgstr "A set of options for creating package archives."

#. type: Plain text
#: ../doc/04-schema.md:914
#, fuzzy
msgid "The following options are supported:"
msgstr "The following options are supported:"

#. type: Bullet: '* '
#: ../doc/04-schema.md:918
msgid ""
"**name:** Allows configuring base name for archive.  By default (if not "
"configured, and `--file` is not passed as command-line argument), "
"`preg_replace('#[^a-z0-9-_]#i', '-', name)` is used."
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:921
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"name\": \"org/strangeName\",\n"
"    \"archive\": {\n"
"        \"name\": \"Strange_name\"\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"name\": \"acme/blog\",\n"
"        \"require\": {\n"
"            \"acme/hello-world\": \"dev-master\"\n"
"        }\n"
"    }\n"

#. type: Bullet: '* '
#: ../doc/04-schema.md:935
#, fuzzy
msgid ""
"**exclude:** Allows configuring a list of patterns for excluded paths. The "
"pattern syntax matches .gitignore files. A leading exclamation mark (!) will "
"result in any matching files to be included even if a previous pattern "
"excluded them. A leading slash will only match at the beginning of the "
"project relative path. An asterisk will not expand to a directory separator."
msgstr ""
"**exclude:** Allows configuring a list of patterns for excluded paths. The "
"pattern syntax matches .gitignore files. A leading exclamation mark (!) will "
"result in any matching files to be included even if a previous pattern "
"excluded them. A leading slash will only match at the beginning of the "
"project relative path. An asterisk will not expand to a directory separator."

#. type: Fenced code block (json)
#: ../doc/04-schema.md:938
#, fuzzy, no-wrap
msgid ""
"{\n"
"    \"archive\": {\n"
"        \"exclude\": [\"/foo/bar\", \"baz\", \"/*.test\", \"!/foo/bar/baz\"]\n"
"    }\n"
"}\n"
msgstr ""
"    {\n"
"        \"archive\": {\n"
"            \"exclude\": [\"/foo/bar\", \"baz\", \"/*.test\", \"!/foo/bar/baz\"]\n"
"        }\n"
"    }\n"

#. type: Plain text
#: ../doc/04-schema.md:948
#, fuzzy
msgid ""
"The example will include `/dir/foo/bar/file`, `/foo/bar/baz`, `/file.php`, `/"
"foo/my.test` but it will exclude `/foo/bar/any`, `/foo/baz`, and `/my.test`."
msgstr ""
"The example will include `/dir/foo/bar/file`, `/foo/bar/baz`, `/file.php`, `/"
"foo/my.test` but it will exclude `/foo/bar/any`, `/foo/baz`, and `/my.test`."

#. type: Title ###
#: ../doc/04-schema.md:951
#, no-wrap
msgid "abandoned"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:954
msgid "Indicates whether this package has been abandoned."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:956
msgid ""
"It can be boolean or a package name/URL pointing to a recommended "
"alternative."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:962
msgid ""
"Use `\"abandoned\": true` to indicate this package is abandoned.  Use `"
"\"abandoned\": \"monolog/monolog\"` to indicate this package is abandoned, "
"and that the recommended alternative is `monolog/monolog`."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:964
msgid "Defaults to false."
msgstr ""

#. type: Title ###
#: ../doc/04-schema.md:967
#, no-wrap
msgid "non-feature-branches"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:971
msgid ""
"A list of regex patterns of branch names that are non-numeric (e.g. \"latest"
"\" or something), that will NOT be handled as feature branches. This is an "
"array of strings."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:977
msgid ""
"If you have non-numeric branch names, for example like \"latest\", \"current"
"\", \"latest-stable\" or something, that do not look like a version number, "
"then Composer handles such branches as feature branches. This means it "
"searches for parent branches, that look like a version or ends at special "
"branches (like master), and the root package version number becomes the "
"version of the parent branch or at least master or something."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:981
msgid ""
"To handle non-numeric named branches as versions instead of searching for a "
"parent branch with a valid version or special branch name like master, you "
"can set patterns for branch names that should be handled as dev version "
"branches."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:984
msgid ""
"This is really helpful when you have dependencies using \"self.version\", so "
"that not dev-master, but the same branch is installed (in the example: "
"latest-testing)."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:989
msgid ""
"If you have a testing branch, that is heavily maintained during a testing "
"phase and is deployed to your staging environment, normally `composer show -"
"s` will give you `versions : * dev-master`."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:991
msgid ""
"If you configure `latest-.*` as a pattern for non-feature-branches like this:"
msgstr ""

#. type: Fenced code block (json)
#: ../doc/04-schema.md:992
#, no-wrap
msgid ""
"{\n"
"    \"non-feature-branches\": [\"latest-.*\"]\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:999
msgid ""
"Then `composer show -s` will give you `versions : * dev-latest-testing`."
msgstr ""

#. type: Plain text
#: ../doc/04-schema.md:1002
#, fuzzy
msgid ""
"&larr; [Command-line interface](03-cli.md)  | [Repositories](05-repositories."
"md) &rarr;"
msgstr ""
"<p class=\"prev-next\">\n"
"  &larr; [コマンドラインインターフェース](03-cli.html)  |  [リポジトリ](05-"
"repositories.html) &rarr;\n"
"</p>\n"
